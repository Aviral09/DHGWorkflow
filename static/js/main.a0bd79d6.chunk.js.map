{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/Header.jsx","component/modals/ProjectDetails.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","borderColor","borderWidth","textValign","textHalign","borderRadius","ParentStyle","setStyle","prop","onSubmit","htmlFor","type","name","value","checked","onChange","required","placeholder","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","index","length","filter","i","map","g","setProjectDetail","localStorageManager","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","saveAllgs","Array","from","this","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","cy","png","getName","nodeID","getById","edgeID","graph","nodes","edges","forEach","node","shouldNodeBeSaved","all","json","nodeJson","position","getStyle","push","edge","shouldEdgeBeSaved","edgeJson","source","getRealSourceId","str","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","on","round","zoom","fit","v","elements","confirm","GraphComponent","getTid","Date","getTime","allNodes","$","start","y","found","nodePos","getPos","tid","group","setNodeEvent","addAction","actionName","GA","parameters","el","allStyles","styles","isNode","Object","entries","p","isEdge","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","bind","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","regesterEvents","saveLocalStorage","getElementById","els","every","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","TailoredGraphBuilder","juncNodeId","incomers","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","undefined","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","deleteElem","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","result","readAsText","newProject","clearAll","undo","redo","TabBar","closeTab","stopPropagation","editCur","GraphComp","props","graphContainerRef","createRef","useEffect","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","css","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","document","use","Konva","graphId","ref","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","preventDefault","toolbarList","text","icon","FaPlus","active","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","click","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","tool","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","querySelector","app","useReducer","GraphCompDetails","flexDirection","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0bd79d6.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '1px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '1px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n            'z-index': 100,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === 13 && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    if (!window.localStorage.getItem('allGraphs')) {\n        window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem('allGraphs'))));\n};\n\nconst localStorageManager = {\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem('allGraphs')) {\n            window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem('allGraphs')));\n    },\n};\nexport default localStorageManager;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jgp`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = { nodes: [], edges: [], projectDetails: this.projectDetails };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = JSON.stringify(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow.json`);\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { id: node.id });\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().remove();\n        return true;\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                id, label, type, ...data,\n            },\n            style,\n            position,\n        });\n        this.setNodeEvent(node);\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin', id, tid = this.getTid()) {\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id,\n            },\n            style,\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        const el = this.getById(id);\n        const allStyles = el.style();\n        const styles = {};\n        if (el.isNode()) Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        if (el.isEdge()) Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        this.getById(id).style('height', dim.height);\n        this.getById(id).style('width', dim.width);\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\n// import GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\n\nconst CoreGraph = (ParentClass) => class extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.regesterEvents();\n        this.saveLocalStorage();\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.saveLocalStorage();\n    }\n\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.style().height);\n            node.scratch('width', node.style().width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.style().height, width: node.style().width },\n                { ...node.position() },\n            );\n        });\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parseInt(parNode.style().width.slice(0, -2), 10) / 2,\n            parseInt(parNode.style().height.slice(0, -2), 10) / 2,\n            parNode.style().shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style moved', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            juncNode.data('edgeStyle'),\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.style();\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            parseInt(sourceNodeStyle.width.slice(0, -2), 10) / 2,\n            parseInt(sourceNodeStyle.height.slice(0, -2), 10) / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\n// const toggleDrawMode = (state, setState) => {\n//     getGraphFun(state).enableDraw(!state.drawModeOn);\n//     setState({ type: T.TURN_DRAW, payload: !state.drawModeOn });\n// };\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            const graphContent = JSON.parse(x.target.result);\n            const id = new Date().getTime();\n            localStorageManager.save(id, graphContent);\n            setState({\n                type: T.ADD_GRAPH,\n                payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === 13 && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {' - '}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-close\"\n                            onClick={editCur}\n                            type=\"button\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                if (node.data('type') !== 'special') node.css('width', width);\n            },\n            setHeight(node, height) {\n                if (node.data('type') !== 'special') node.css('height', height);\n            },\n            isNoResizeMode(node) { return node.data('type') === 'special'; },\n            isNoControlsMode(node) { return node.data('type') === 'special'; },\n        });\n\n        cy.gridGuide({ snapToGridOnRelease: false });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n        // console.log(superState.graphs);\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        localStorageManager.getAllGraphs().forEach((graphId) => {\n            dispatcher({\n                type: T.ADD_GRAPH,\n                payload: {\n                    id: graphId,\n                    projectDetails: { projectName: '', author: '', set: true },\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <>\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        } else {\n            setCurClass('closing');\n            setTimeout(() => {\n                setIsOpen(false);\n            }, 400);\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable object-curly-newline */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    { type: 'action', text: 'Node', icon: FaPlus, action: createNode, active: true },\n    { type: 'vsep' },\n    { type: 'file-upload', text: 'Open', icon: FaFileImport, action: readFile, active: true },\n    { type: 'action', text: 'Save', icon: FaSave, action: saveAction, active: true },\n    { type: 'action', text: 'Clear', icon: FaRegTimesCircle, action: clearAll, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Undo', icon: FaUndo, action: undo, active: state.undoEnabled },\n    { type: 'action', text: 'Redo', icon: FaRedo, action: redo, active: state.redoEnabled },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n    },\n    { type: 'action', text: 'Delete', icon: FaTrash, action: deleteElem, active: state.eleSelected },\n    { type: 'vsep' },\n    { type: 'space' },\n    { type: 'menu', text: 'Download', icon: FaDownload, action: downloadImg, active: true },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\n\nimport 'rc-switch/assets/index.css';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n} from '@szhsin/react-menu';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".json\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(),\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ state, dispatcher }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {\n                state.graphs[state.curGraphIndex]\n                    ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n            }\n        </section>\n        <section className=\"toolbar\">\n            {\n                toolbarList(state, dispatcher).map((tool, i) => {\n                    if (tool.type === 'vsep') return <Vsep key={`${`v${i}`}`} />;\n                    if (tool.type === 'space') return <Space key={`${`s${i}`}`} />;\n                    if (tool.type === 'switch') {\n                        return (\n                            <Switcher\n                                text={tool.text}\n                                active={tool.active}\n                                action={() => tool.action(state, dispatcher)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'menu') {\n                        return (\n                            <DropDown\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(state, dispatcher, e)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'file-upload') {\n                        return (\n                            <FileUploader\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(state, dispatcher, e)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    return (\n                        <ActionButton\n                            Icon={tool.icon}\n                            text={tool.text}\n                            active={tool.active}\n                            action={() => tool.action(state, dispatcher)}\n                            key={tool.text}\n                            tabIndex={i + 1}\n                        />\n                    );\n                })\n            }\n            <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName);\n            setAuthor(curGraph.projectDetails.author);\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else setProjectDetails({ ...curGraph.projectDetails, set: true });\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', flexDirection: 'column' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}