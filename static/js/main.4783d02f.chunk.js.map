{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/5-load-save.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","SET_BENDW","GraphComponent","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","target","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","superState","projectDetails","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","payload","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","parseFloat","getCoordinate","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","localStorage","getItem","setItem","btoa","JSON","stringify","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","saveLocalStorage","format","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","fileName","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","clearTimeout","setTimeout","loadJson","props","GraphUndoRedo","methodsMapped","setBendWightDist","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","SET_UNDO","SET_REDO","curTid","performAction","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","filter","unselectify","ed","bind","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","n1","n2","n","r","union","c1","c2","Object","values","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","keys","s","t","propFromArr","split","property","any","S","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","name","join","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","CHANGE_TAB","data-for","place","effect","GraphComp","graphContainerRef","useRef","setConatinerDim","element","current","offsetWidth","offsetHeight","addEventListener","childNodes","classList","contains","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","fn","prompt","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","SET_FILE_REF","getElementsByTagName","cc","dragEvent","dataTransfer","accept","useReducer","reducer","initialState","Settings","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","htmlFor","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"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","file":"static/js/main.4783d02f.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.nodeValidator = nodeValidator;\n        this.edgeValidator = edgeValidator;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            dists.add(edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n}\n\nexport default GraphCanvas;\n","import { actionType as T } from '../../reducer';\n// import GraphLoadSave from './graph-load-save';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectDetails;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n}\n\nexport default CoreGraph;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import GraphLoadSave from './5-load-save';\n\nexport default GraphLoadSave;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}\\\n${this.projectDetails.author ? `-${this.projectDetails.author}` : ''}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","import GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        GraphUndoRedo.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GraphUndoRedo.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        if (targetNode.data('type') !== 'ordin') return this; // Don't Add Node\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(edgeData, tid);\n        if (juncNodes.length) return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        if (label && label.length) return this.addEdgeWithoutJuncNode(edgeData, tid);\n\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                if (message.ok) this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                return message;\n            },\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                if (!graphContent.projectDetails.projectName) {\n                    /* eslint-disable no-param-reassign */\n                    [graphContent.projectDetails.projectName] = e.target.files[0]\n                        .name.split('.').slice(0, -1).join('.').split('-');\n                    graphContent.projectDetails.set = true;\n                    /* eslint-enable no-param-reassign */\n                }\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    edges.forEach((e) => {\n        if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n            message = {\n                ok: false,\n                err: 'Edge with same label exists.',\n            };\n        }\n    });\n    return message;\n};\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const setConatinerDim = (element) => {\n        /* eslint-disable no-param-reassign */\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        /* eslint-enable no-param-reassign */\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', () => graphContainerRef.current.childNodes\n            .forEach((el) => el.classList.contains('graph-element') && setConatinerDim(el)));\n    }, []);\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        setConatinerDim(element);\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new MyGraph(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                        className=\"graph-element\"\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.graphs[superState.curGraphIndex] ? `${\n                        superState.graphs[superState.curGraphIndex].projectDetails.projectName\n                    } - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span><b>{e}</b></span>;\n        return <span>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <div className=\"docStr\">{parseMD(docString)}</div>\n            <br />\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges, type)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                fileRef.current.files = e.dataTransfer.files;\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to read</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n};\n\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}