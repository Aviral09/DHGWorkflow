{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/ColorBox.jsx","component/NodeDetails.jsx","component/EdgeDetails.jsx","reducer/reducer.js","reducer/initialState.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","graph-builder/core-graph-builder.js","graph.jsx","component/Modal.jsx","toolbarActions/toolbarFunctions.js","toolbarActions/toolbarList.js","component/Header.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","backgroundColor","options","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","ColorBox","color","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","borderColor","borderWidth","textValign","textHalign","ParentStyle","setStyle","prop","onSubmit","type","required","value","placeholder","onChange","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","reducer","state","action","T","ModelOpen","modalPayload","title","submitText","Children","defaultStyle","defaultLabel","cb","nameAllowed","eleSelected","eleSelectedPayload","payload","drawModeOn","initialState","g","this","addNode","y","juncNodeId","getById","incomers","filter","juncNode","parNode","cy","automove","nodesMatching","reposition","dragWith","node","pos","position","P","h","w","A","B","arr","abs","sort","a","b","when","src","dest","edge","sourceEndpoint","destid","srcid","tid","Date","getTime","dispatcher","edgeLabel","edgeStyle","addEdge","addAutoMove","getRealNode","remove","id","shouldUpdateLabel","junctionNode","source","updateData","updateNode","outgoers","forEach","el","isNode","connectedEdges","deleteElem","length","deleteNode","getElementById","window","cyx","selectDeselect","els","$","every","isEdge","ids","map","on","sid","add","group","allStyles","styles","Object","entries","p","val","enable","cye","disable","deleteEdge","GraphComp","cytoscape","use","edgehandles","cyOptions","container","document","props","cyFun","setCy","setDispatcher","preview","handlePosition","complete","c","modifyNewEdge","addTestData","Component","ReactModal","setAppElement","Modal","closeModal","superState","curClass","setCurClass","useEffect","setTimeout","handleCloseModal","isOpen","contentLabel","onRequestClose","overlayClassName","preventDefault","aria-hidden","createNode","_","setState","CyFun","editElement","getName","getStyle","updateEdge","toggleDrawMode","enableDraw","dummyAction","alert","toolbarList","text","icon","FaPlus","active","FaEdit","FaFileImport","FaSave","FaUndo","FaRedo","FaTrash","ImZoomOut","ImZoomIn","BiReset","BiNotification","BiNotificationOff","FaDownload","FaFileExport","ActionButton","Icon","Vsep","Hsep","Space","Header","tool","i","app","useReducer","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0977689c.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '2px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '2px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'text-margin-y': '10px',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 10,\n            height: 10,\n            backgroundColor: 'red',\n        },\n    },\n\n    // {\n    //     selector: '.eh-ghost-edge',\n    //     style: {\n    //         'background-color': 'rgba(0,255,255,0.5)',\n    //         'line-color': '#0f0',\n    //         'target-arrow-color': '#0f0',\n    //     },\n    // },\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === 13 && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ ...data.style, 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ ...data.style, 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ ...data.style, opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport './edgeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","import T from './actionType';\nimport NodeDetails from '../component/NodeDetails';\nimport EdgeDetails from '../component/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.nameAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.nameAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const initialState = {\n    ModelOpen: false,\n    eleSelected: false,\n    drawModeOn: true,\n};\n\nexport default initialState;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nconst g = new TailoredGraphBuilder();\n\nexport default g;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\n\nclass TailoredGraph extends CoreGraph {\n    addTestData() {\n        this.addNode('A', {}, 'ordin', { x: 100, y: 100 }, 1);\n        this.addNode('B', {}, 'ordin', { x: 500, y: 100 }, 2);\n        return this;\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode, parNode) {\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition: 'drag',\n            dragWith: parNode,\n        });\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition(node) {\n                const pos = node.position();\n                const P = parNode.position();\n                const [h, w] = [parNode.height(), parNode.width()];\n                const A = { y: P.y + h / 2, x: P.x + w / 2 };\n                const B = { y: P.y - h / 2, x: P.x - w / 2 };\n                pos.x = Math.min(A.x, Math.max(pos.x, B.x));\n                pos.y = Math.min(A.y, Math.max(pos.y, B.y));\n                if (pos.x < A.x && pos.y < A.y && pos.x > B.x && pos.y > B.y) {\n                    const arr = [[Math.abs(pos.x - A.x), 'X', A.x],\n                        [Math.abs(pos.x - B.x), 'X', B.x],\n                        [Math.abs(pos.y - A.y), 'Y', A.y], [Math.abs(pos.y - B.y), 'Y', B.y]];\n                    arr.sort((a, b) => a[0] - b[0]);\n                    if (arr[0][1] === 'X') { [[, , pos.x]] = arr; }\n                    if (arr[0][1] === 'Y') { [[, , pos.y]] = arr; }\n                }\n                return pos;\n            },\n            when: 'matching',\n        });\n    }\n\n    modifyNewEdge(src, dest, edge) {\n        const position = edge.sourceEndpoint();\n        const destid = dest.data('id');\n        let srcid = src.data('id');\n        if (src.data('type') !== 'special') {\n            const tid = (new Date()).getTime();\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    this.addNode('', { 'background-color': edgeStyle['line-color'] },\n                        'special', position, tid, { edgeLabel, edgeStyle });\n                    this.addEdge(srcid, tid, edgeLabel, {\n                        ...edgeStyle,\n                        'target-arrow-shape': 'none',\n                    });\n                    this.addAutoMove(this.getById(tid), this.getById(srcid));\n                    srcid = tid;\n                    this.getRealNode(tid);\n                    edge.remove();\n                    this.addEdge(srcid, destid, edgeLabel, edgeStyle);\n                },\n            });\n        } else {\n            const edgeLabel = src.data('edgeLabel');\n            const edgeStyle = src.data('edgeStyle');\n            edge.remove();\n            this.addEdge(srcid, destid, edgeLabel, edgeStyle);\n        }\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel));\n    }\n\n    deleteElem(id) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            el.outgoers().forEach((x) => super.deleteElem(x.id()));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id()));\n            super.deleteNode(id);\n        } else {\n            const junctionNode = el.source();\n            super.deleteEdge(id);\n            if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id());\n        }\n    }\n}\n\nexport default TailoredGraph;\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { actionType as T } from '../reducer';\n\nclass CoreGraph {\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    setCy(cy) {\n        this.cy = cy;\n        window.cyx = cy;\n        const selectDeselect = () => {\n            const els = this.cy.$(':selected');\n            if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n            let type;\n            if (els.every((e) => e.isNode())) type = 'NODE';\n            else if (els.every((e) => e.isEdge())) type = 'EDGE';\n            else type = 'MIX';\n            const ids = els.map((e) => e.data('id'));\n            return this.dispatcher({\n                type: T.ELE_SELECTED,\n                payload: {\n                    ids, type,\n                },\n            });\n        };\n        this.cy.on('select', selectDeselect);\n        this.cy.on('unselect', selectDeselect);\n    }\n\n    setDispatcher(dispatcher) {\n        this.dispatcher = dispatcher;\n    }\n\n    addNode(label, style, type, position, sid, data) {\n        const id = sid || (new Date()).getTime();\n        this.cy.add({\n            group: 'nodes',\n            data: {\n                id, label, type, ...data,\n            },\n            style,\n            position,\n        });\n    }\n\n    addEdge(source, target, label, style = {}) {\n        this.cy.add({\n            group: 'edges',\n            data: { source, target, label },\n            style,\n        });\n    }\n\n    getStyle(id) {\n        const allStyles = this.getById(id).style();\n        const styles = {};\n        Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel) {\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel) {\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val) {\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    modifyNewEdge() { return this; }\n\n    enableDraw(enable) {\n        if (enable) window.cye.enable();\n        else window.cye.disable();\n        return this;\n    }\n\n    deleteNode(id) {\n        const el = this.getById(id);\n        el.connectedEdges().forEach((edge) => this.deleteEdge(edge.id()));\n        el.remove();\n    }\n\n    deleteEdge(id) {\n        this.getById(id).remove();\n    }\n\n    deleteElem(id) {\n        if (this.getById(id).isNode()) return this.deleteNode(id);\n        return this.deleteEdge(id);\n    }\n}\n\nexport default CoreGraph;\n","import React from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport automove from 'cytoscape-automove';\nimport cyOptions from './config/cytoscape-options';\nimport cyFun from './graph-builder';\n\nclass GraphComp extends React.Component {\n    componentDidMount() {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'automove') !== 'function') {\n            cytoscape.use(automove);\n        }\n        this.cy = cytoscape({ ...cyOptions, container: document.getElementById('cy') });\n        const { dispatcher } = this.props;\n        cyFun.setCy(this.cy);\n        cyFun.setDispatcher(dispatcher);\n        window.cye = this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => cyFun.modifyNewEdge(a, b, c),\n        });\n        cyFun.addTestData();\n    }\n\n    render() {\n        return (\n            <div style={{ height: '100%', width: '100%' }} id=\"cy\" />\n        );\n    }\n}\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({ closeModal, superState }) => {\n    const [curClass, setCurClass] = useState('');\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        if (ModelOpen === true) {\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        }\n    }, [ModelOpen]);\n\n    const handleCloseModal = () => {\n        setCurClass('closing');\n        setTimeout(() => {\n            closeModal();\n        }, 400);\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        handleCloseModal();\n    };\n\n    return (\n        <ReactModal\n            isOpen={ModelOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={handleCloseModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <form onSubmit={submit}>\n                <div className={`modal-content ${curClass}`}>\n                    <div className=\"modal-header\">\n                        <div className=\"modal-title h4\">{title}</div>\n                        <button type=\"button\" className=\"close\" onClick={handleCloseModal}>\n                            <span aria-hidden=\"true\">×</span>\n                            <span className=\"sr-only\">Close</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-content-body\">\n                        <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                    </div>\n                </div>\n            </form>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import CyFun from '../graph-builder';\nimport { actionType as T } from '../reducer';\n\nconst createNode = (_, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            CyFun.addNode(label, style, 'ordin', { x: 100, y: 100 });\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => CyFun.updateNode(id, style, label, shouldUpdateLabel),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: CyFun.getName(state.eleSelectedPayload.ids[0]),\n            style: CyFun.getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => CyFun.updateEdge(id, style, label, shouldUpdateLabel),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: CyFun.getName(state.eleSelectedPayload.ids[0]),\n            style: CyFun.getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst toggleDrawMode = (state, setState) => {\n    CyFun.enableDraw(!state.drawModeOn);\n    setState({ type: T.TURN_DRAW, payload: !state.drawModeOn });\n};\n\nconst deleteElem = (state) => {\n    state.eleSelectedPayload.ids.forEach((id) => CyFun.deleteElem(id));\n};\n\n// eslint-disable-next-line no-alert\nconst dummyAction = (x) => alert(x);\n\nexport {\n    createNode, dummyAction, editElement, toggleDrawMode, deleteElem,\n};\n","/* eslint-disable object-curly-newline */\nimport { BiReset, BiNotificationOff, BiNotification } from 'react-icons/bi';\nimport { ImZoomOut, ImZoomIn } from 'react-icons/im';\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileExport, FaFileImport, FaPlus, FaDownload, FaEdit,\n} from 'react-icons/fa';\nimport { dummyAction, createNode, editElement, toggleDrawMode, deleteElem } from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    { type: 'action', text: 'Node', icon: FaPlus, action: createNode, active: true },\n    { type: 'vsep' },\n    { type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n    },\n    { type: 'action', text: 'Open', icon: FaFileImport, action: dummyAction, active: false },\n    { type: 'action', text: 'Save', icon: FaSave, action: dummyAction, active: false },\n    { type: 'vsep' },\n    { type: 'action', text: 'Undo', icon: FaUndo, action: dummyAction, active: false },\n    { type: 'action', text: 'Redo', icon: FaRedo, action: dummyAction, active: false },\n    { type: 'vsep' },\n    { type: 'action', text: 'Delete', icon: FaTrash, action: deleteElem, active: state.eleSelected },\n    { type: 'vsep' },\n    { type: 'action', text: 'In', icon: ImZoomOut, action: dummyAction, active: false },\n    { type: 'action', text: 'Out', icon: ImZoomIn, action: dummyAction, active: false },\n    { type: 'action', text: 'Reset', icon: BiReset, action: dummyAction, active: false },\n    { type: 'vsep' },\n    { type: 'action', text: 'On', icon: BiNotification, action: toggleDrawMode, active: !state.drawModeOn },\n    { type: 'action', text: 'Off', icon: BiNotificationOff, action: toggleDrawMode, active: state.drawModeOn },\n    { type: 'space' },\n    { type: 'action', text: 'JPG', icon: FaDownload, action: dummyAction, active: false },\n    { type: 'action', text: 'PNG', icon: FaDownload, action: dummyAction, active: false },\n    { type: 'vsep' },\n    { type: 'action', text: 'Export', icon: FaFileExport, action: dummyAction, active: false },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport './header.css';\nimport toolbarList from '../toolbarActions/toolbarList';\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ title, state, dispatcher }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {`${title} - DHGWorkflow Editor`}\n        </section>\n        <section className=\"toolbar\">\n            {\n                toolbarList(state, dispatcher).map((tool, i) => {\n                    if (tool.type === 'vsep') return <Vsep key={`${`v${i}`}`} />;\n                    if (tool.type === 'space') return <Space key={`${`s${i}`}`} />;\n                    return (\n                        <ActionButton\n                            Icon={tool.icon}\n                            text={tool.text}\n                            active={tool.active}\n                            action={() => tool.action(state, dispatcher)}\n                            key={tool.text}\n                            tabIndex={i + 1}\n                        />\n                    );\n                })\n            }\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport Modal from './component/Modal';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div>\n            {superState.ModelOpen ? (\n                <Modal\n                    closeModal={() => dispatcher({ type: T.Model_Close })}\n                    superState={superState}\n                />\n            ) : ''}\n            <Header title=\"MyGraph\" state={superState} dispatcher={dispatcher} />\n            <section className=\"body\">\n                <div className=\"graph-container\">\n                    <GraphComp dispatcher={dispatcher} />\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}