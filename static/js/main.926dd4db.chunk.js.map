{"version":3,"sources":["config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["style","selector","content","width","height","shape","opacity","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","setStyle","prop","onSubmit","borderRadius","padding","htmlFor","type","name","value","checked","onChange","ref","required","placeholder","e","target","Math","min","borderColor","borderWidth","step","max","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","thickness","NodeStyle","EdgeStyle","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","shareModal","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","index","length","filter","i","map","g","setProjectDetail","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","getSet","saveAllgs","this","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","$","y","graphML","nodes","edges","graphml","xmlns","for","graph","edgedefault","edge","edgeML","source","configuration","lineColor","lineWidth","builder","G","position","edg","X","xml2js","Builder","buildObject","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","cy","png","getName","nodeID","getById","edgeID","forEach","shouldNodeBeSaved","all","json","nodeJson","getStyle","push","shouldEdgeBeSaved","edgeJson","getRealSourceId","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","Date","getTime","tid","addNode","addEdge","undefined","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","on","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphComponent","getTid","allNodes","start","found","nodePos","getPos","group","setNodeEvent","addAction","actionName","GA","parameters","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","isNode","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","bind","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","regesterEvents","saveLocalStorage","getElementById","els","every","isEdge","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","TailoredGraphBuilder","juncNodeId","incomers","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","Object","keys","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseFloat","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","err","grahMLObj","grahML","parseDetails","Boolean","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","readAsText","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","data-for","place","effect","GraphComp","props","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","gid","toString","history","replaceState","pathname","graphId","flex","flexDirection","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","toolbarList","text","icon","FaPlus","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","app","useReducer","GraphCompDetails","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.926dd4db.chunk.js","sourcesContent":["// import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            'z-index': 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            'background-color': 'data(style.backgroundColor)',\n            'border-color': 'data(style.borderColor)',\n            'border-width': 'data(style.borderWidth)',\n            'text-valign': 'center',\n            'text-halign': 'center',\n        },\n    },\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            'line-color': 'data(style.backgroundColor)',\n            'target-arrow-color': 'data(style.backgroundColor)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, { useCallback } from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    {labelAllowed ? data.label : ''}\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => setStyle({ width: Math.min(500, e.target.value) })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{ ...data.style, height: data.style.thickness }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#e0f2f1',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        // const str = JSON.stringify(this.jsonifyGraph());\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow-${new Date().getTime()}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.setNodeEvent(node);\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin', id, tid = this.getTid()) {\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n        // const el =\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\n// import GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\n\nconst CoreGraph = (ParentClass) => class extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.regesterEvents();\n        this.saveLocalStorage();\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.saveLocalStorage();\n    }\n\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style moved', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            juncNode.data('edgeStyle'),\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdge(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\n// const arr = { a: [[{ c: [[[[1]]]] }]] };\n// const X = new PropFromArr(arr);\n// console.log(X.parseProps('a.c'));\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {' - '}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                if (node.data('type') !== 'special') {\n                    node.data('style', { ...node.data('style'), width });\n                }\n            },\n            setHeight(node, height) {\n                if (node.data('type') !== 'special') {\n                    node.data('style', { ...node.data('style'), height });\n                }\n            },\n            isNoResizeMode(node) { return node.data('type') === 'special'; },\n            isNoControlsMode(node) { return node.data('type') === 'special'; },\n        });\n\n        cy.gridGuide({ snapToGridOnRelease: false });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex]) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        localStorageManager.getAllGraphs().forEach((graphId) => {\n            dispatcher({\n                type: T.ADD_GRAPH,\n                payload: {\n                    id: graphId,\n                    projectDetails: { projectName: '', author: '', set: true },\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}