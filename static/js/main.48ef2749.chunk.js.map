{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","reducer/initialState.js","reducer/reducer.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarFunctions.js","toolbarActions/toolbarList.js","component/Header.jsx","component/modals/ProjectDetails.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","borderColor","borderWidth","textValign","textHalign","borderRadius","ParentStyle","setStyle","prop","onSubmit","htmlFor","type","name","value","checked","onChange","required","placeholder","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","graphs","curGraphIndex","initialGraphState","projectDetails","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","this","cy","png","getName","nodeID","getById","edgeID","graph","nodes","edges","superState","forEach","node","shouldNodeBeSaved","all","json","nodeJson","position","getStyle","push","edge","shouldEdgeBeSaved","edgeJson","source","getRealSourceId","str","JSON","stringify","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","clearAll","addNode","addEdge","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","graphJson","serializedJson","window","localStorage","setItem","btoa","getItem","loadJson","parse","atob","GraphCanvas","reset","removeListener","on","round","zoom","fit","v","elements","length","confirm","remove","GraphComponent","getTid","Date","getTime","allNodes","$","start","y","found","i","nodePos","getPos","tid","add","group","setNodeEvent","addAction","actionName","GA","parameters","el","allStyles","styles","isNode","Object","entries","p","isEdge","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","bind","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","regesterEvents","getElementById","els","every","ids","map","selectDeselectEventHandler","saveLocalStorage","scratch","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","get","TailoredGraphBuilder","juncNodeId","incomers","filter","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","undefined","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","deleteElem","parNode","meanNbrPosition","setOfPos","Set","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","GraphComp","props","graphContainerRef","createRef","useEffect","console","log","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","css","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","complete","a","b","initialiseNewGraph","document","use","Konva","flex","ref","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","preventDefault","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","result","readAsText","newProject","editDetails","undo","redo","toolbarList","text","icon","FaPlus","active","FaFolderPlus","FaRavelry","FaUserEdit","FaFileImport","FaSave","FaUndo","FaRedo","FaEdit","FaTrash","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","click","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","projectName","tool","ProjectDeails","setProjectName","setAuthor","graphRef","zIndex","querySelector","app","useReducer","GraphCompDetails","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.48ef2749.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '1px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '1px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n            'z-index': 100,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 10,\n            height: 10,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === 13 && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        name: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[state.curGraphIndex].instance = action.instance;\n        return { ...newState };\n    }\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jgp`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = { nodes: [], edges: [], projectDetails: this.superState.projectDetails };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.superState.projectDetails.name}-${this.superState.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = JSON.stringify(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow.json`);\n    }\n\n    loadJson(content) {\n        this.clearAll();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { id: node.id });\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style);\n        });\n        this.dispatcher({ type: T.SET_PROJECT_DETAILS, payload: content.projectDetails });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => {\n            const graphJson = this.jsonifyGraph();\n            const serializedJson = JSON.stringify(graphJson);\n            window.localStorage.setItem('serializedGraph', window.btoa(serializedJson));\n        }, 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        if (window.localStorage.getItem('serializedGraph') === null) return false;\n        this.loadJson(JSON.parse(window.atob(window.localStorage.getItem('serializedGraph'))));\n        return true;\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().remove();\n        return true;\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                id, label, type, ...data,\n            },\n            style,\n            position,\n        });\n        this.setNodeEvent(node);\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin', id, tid = this.getTid()) {\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id,\n            },\n            style,\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        const el = this.getById(id);\n        const allStyles = el.style();\n        const styles = {};\n        if (el.isNode()) Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        if (el.isEdge()) Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        this.getById(id).style('height', dim.height);\n        this.getById(id).style('width', dim.width);\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\n// import GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\n\nconst CoreGraph = (ParentClass) => class extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(cy, dispatcher, superState) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.regesterEvents();\n    }\n\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.style().height);\n            node.scratch('width', node.style().width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.style().height, width: node.style().width },\n                { ...node.position() },\n            );\n        });\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parseInt(parNode.style().width.slice(0, -2), 10) / 2,\n            parseInt(parNode.style().height.slice(0, -2), 10) / 2,\n            parNode.style().shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style moved', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            juncNode.data('edgeStyle'),\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.style();\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            parseInt(sourceNodeStyle.width.slice(0, -2), 10) / 2,\n            parseInt(sourceNodeStyle.height.slice(0, -2), 10) / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","/* eslint-disable */\nimport React from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing'\nimport $ from \"jquery\";\nimport { useEffect } from 'react';\nimport { actionType as T } from './reducer';\n\nconst GraphComp = (props)=>{\n    const graphContainerRef = React.createRef();\n    const graphRef = React.createRef();\n    const { dispatcher, superState } = props;\n    \n\n    const initialiseNewGraph = (element)=>{\n        element.style.width = graphContainerRef.current.offsetWidth + \"px\"\n        element.style.height = graphContainerRef.current.offsetHeight + \"px\"\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({ \n            resizeToContentCueEnabled: () => false, \n            setWidth: function(node, width) { \n                if(node.data('type')!='special') node.css('width', width);\n            },\n            setHeight: function(node, height) {\n                if(node.data('type')!='special') node.css('height', height);\n            }, \n            isNoResizeMode: function (node) { return node.data('type')==='special' }, \n            isNoControlsMode: function (node) { return node.data('type')==='special' },\n        });\n\n        cy.gridGuide({snapToGridOnRelease :false});\n        const myGraph = new (MyGraph(Object))(cy, dispatcher, superState);\n        // myGraph.set({cy, dispatcher, superState});\n        // myGraph.regesterEvents();\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => {c.remove() ; myGraph.addEdge(a.id(), b.id())},\n        });\n        // dispatcher({type: \"SET_GRAPH\", payload: myGraph})\n        return myGraph;\n    }\n    useEffect(()=>{\n        if(superState.graphs[superState.curGraphIndex] &&  !superState.graphs[superState.curGraphIndex].instance){\n            const id = superState.graphs[superState.curGraphIndex].id;\n            const projectDetails = superState.graphs[superState.curGraphIndex].projectDetails;\n            console.log(id, superState.graphs[superState.curGraphIndex])\n            const graph = initialiseNewGraph(document.getElementById(id));\n            dispatcher({type: T.ADD_GRAPH_INSTANCE, instance: graph, projectDetails: {}})\n        }\n    },[superState.graphs.length])\n    \n    useEffect(()=>{\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        \n        // initialiseNewGraph(graphRef.current);\n        \n    }, [])\n    return (\n        <div className=\"graph-container\" style={{ flex: 1 }} ref={graphContainerRef}>\n            {/* <div style={{ zIndex: 1 }} id=\"cy\" ref={graphRef} /> */}\n            {superState.graphs.map(e=>e.component)}\n            <ZoomComp dispatcher={dispatcher} superState={superState} />\n        </div>\n    );\n}\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        } else {\n            setCurClass('closing');\n            setTimeout(() => {\n                setIsOpen(false);\n            }, 400);\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import { actionType as T } from '../reducer';\nimport { initialState } from '../reducer/initialState';\n\n// const getGraphFun(state) = {};\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\n// const toggleDrawMode = (state, setState) => {\n//     getGraphFun(state).enableDraw(!state.drawModeOn);\n//     setState({ type: T.TURN_DRAW, payload: !state.drawModeOn });\n// };\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            getGraphFun(state).loadJson(JSON.parse(x.target.result));\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    if (getGraphFun(state).clearAll()) {\n        setState({ type: T.SET_PROJECT_DETAILS, payload: initialState.projectDetails });\n    }\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({ type: T.SET_PROJECT_DETAILS, payload: { ...state.projectDetails, set: false } });\n};\nconst undo = (state) => {\n    getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n};\n","/* eslint-disable object-curly-newline */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaFolderPlus, FaRavelry, FaUserEdit,\n} from 'react-icons/fa';\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    { type: 'action', text: 'Node', icon: FaPlus, action: createNode, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'New', icon: FaFolderPlus, action: newProject, active: true },\n    { type: 'action', text: 'Clear', icon: FaRavelry, action: clearAll, active: true },\n    { type: 'action', text: 'Details', icon: FaUserEdit, action: editDetails, active: true },\n    { type: 'vsep' },\n    { type: 'file-upload', text: 'Open', icon: FaFileImport, action: readFile, active: true },\n    { type: 'action', text: 'Save', icon: FaSave, action: saveAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Undo', icon: FaUndo, action: undo, active: state.undoEnabled },\n    { type: 'action', text: 'Redo', icon: FaRedo, action: redo, active: state.redoEnabled },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n    },\n    { type: 'action', text: 'Delete', icon: FaTrash, action: deleteElem, active: state.eleSelected },\n    { type: 'vsep' },\n    // { type: 'switch', text: 'Draw', action: toggleDrawMode, active: state.drawModeOn },\n    { type: 'space' },\n    { type: 'menu', text: 'Download', icon: FaDownload, action: downloadImg, active: true },\n    { type: 'vsep' },\n    // { type: 'action', text: 'Export', icon: FaFileExport, action: dummyAction, active: false },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\n\nimport 'rc-switch/assets/index.css';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n} from '@szhsin/react-menu';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".json\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(),\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ state, dispatcher }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {\n                state.graphs[state.curGraphIndex]\n                    ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n            }\n        </section>\n        <section className=\"toolbar\">\n            {\n                toolbarList(state, dispatcher).map((tool, i) => {\n                    if (tool.type === 'vsep') return <Vsep key={`${`v${i}`}`} />;\n                    if (tool.type === 'space') return <Space key={`${`s${i}`}`} />;\n                    if (tool.type === 'switch') {\n                        return (\n                            <Switcher\n                                text={tool.text}\n                                active={tool.active}\n                                action={() => tool.action(state, dispatcher)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'menu') {\n                        return (\n                            <DropDown\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(state, dispatcher, e)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'file-upload') {\n                        return (\n                            <FileUploader\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(state, dispatcher, e)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    return (\n                        <ActionButton\n                            Icon={tool.icon}\n                            text={tool.text}\n                            active={tool.active}\n                            action={() => tool.action(state, dispatcher)}\n                            key={tool.text}\n                            tabIndex={i + 1}\n                        />\n                    );\n                })\n            }\n            <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useState } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDeails = ({ superState, dispatcher }) => {\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const submit = (e) => {\n        e.preventDefault();\n        const graphRef = React.createRef();\n        const id = `graph_${superState.curGraphIndex}`;\n        const component = <div style={{ zIndex: 1 }} id={id} ref={graphRef} key={superState.curGraphIndex} />;\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id, component, projectDetails: { projectName, author, set: true } },\n        });\n    };\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    return (\n        <Modal\n            ModelOpen={\n                !superState.graphs[superState.curGraphIndex]\n                || !superState.graphs[superState.curGraphIndex].projectDetails.set\n            }\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    <div className=\"divider\" />\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={openExisting}>Open Existing</button>\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDeails;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDeails from './component/modals/ProjectDetails';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDeails superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}