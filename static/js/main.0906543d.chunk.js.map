{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-component.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","GraphComponent","ParentClass","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceId","targetId","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","bendDistance","d","has","rawStyle","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","source","target","parseBendinDW","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","configuration","lineWidth","sx","sy","tx","ty","builder","G","edg","thickness","X","projectDetails","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","on","saveLocalStorage","bind","format","saveAs","png","getName","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","getRealSourceId","getCoordinate","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","payload","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","Math","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphUndoRedo","props","GUR","methodsMapped","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","SET_UNDO","SET_REDO","curTid","performAction","CoreGraph","superState","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","addClass","evt","ev","hasClass","CG","getBendEdgePoint","DW","removeClass","parseFloat","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TG","calJuncNodePos","juncNodeId","incomers","filter","unselectify","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","customValidiateEdge","junctionNode","updateData","updateNode","customGetNodesEdges","n1","n2","n","r","union","c1","c2","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","Object","keys","s","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","CHANGE_TAB","data-for","place","effect","GraphComp","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","useReducer","reducer","initialState","Settings","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","htmlFor","name","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"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","file":"static/js/main.0906543d.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import BendingDistanceWeight from './calculations/bending-dist-weight';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor(...args) {\n        super(...args);\n        [,,,,, this.nodeValidator, this.edgeValidator] = args;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceId, targetId) {\n        return this.getById(sourceId).edgesWith(this.getById(targetId));\n    }\n\n    getBendingD(sourceId, targetId) {\n        const edges = this.getEdgesBetweenNodes(sourceId, targetId);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            dists.add(edge.data('style').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId, type) {\n        if (type !== 'ordin') return { ...rawStyle, bendDistance: 0, bendWeight: 0 };\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: this.getBendingD(sourceId, targetId), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target, type);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        if (type === 'ordin' && label) {\n            return this.addEdgeWithLabel(source, target, label, rawStyle, type, id, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, source, target);\n                if (message.ok) this.addEdgeWithLabel(source, target, edgeLabel, edgeStyle, type, id, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            source: edge.source().data('label'),\n            target: edge.target().data('label'),\n            style: edge.data('style'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style) {\n        return this.validiateComp({ label, style }, this.nodeValidator);\n    }\n\n    validiateEdge(label, style, source, target) {\n        return this.validiateComp({\n            label, style, source, target,\n        }, this.edgeValidator);\n    }\n};\n\nexport default GraphComponent;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(style.bendDistance)',\n            segmentWeights: 'data(style.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('nodeediting.resizeend graph-modified', this.saveLocalStorage.bind(this));\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow-${new Date().getTime()}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor(...props) {\n        super(...props);\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst CoreGraph = (ParentClass) => class CG extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator) {\n        super(id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator);\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CG.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TG.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TG.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdgeWithLabel(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            { ...juncNode.data('edgeStyle'), bendDistance: edgeStyle.bendDistance, bendWeight: edgeStyle.bendWeight },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdgeWithLabel(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        if (this.getById(targetID).data('type') !== 'ordin') return this;\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdgeWithLabel(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.customValidiateEdge(edgeLabel, edgeStyle, sourceID, targetID);\n                if (message.ok) this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid);\n                return message;\n            },\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    customGetNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            source: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            target: edge.target().data('label'),\n            style: edge.data('style'),\n        }));\n        return [nodes, edges];\n    }\n\n    customValidiateEdge(label, style, source, target) {\n        const [nodes, edges] = this.customGetNodesEdges();\n        try {\n            const message = this.edgeValidator({\n                label, style, source, target,\n            }, nodes, edges);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style);\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    edges.forEach((n) => {\n        if (n.label === edge.label) {\n            message = {\n                ok: false,\n                err: 'Edge with same label exists.',\n            };\n        }\n    });\n    return message;\n};\n\nexport { nodeValidator, edgeValidator };\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new (MyGraph(Object))(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height,\n}) => {\n    const inputRef = React.createRef();\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}