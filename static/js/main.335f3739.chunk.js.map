{"version":3,"sources":["config/cytoscape-style.js","config/cytoscape-options.js","functions/core-graph-builder.js","reducer/actionType.js","component/ColorBox.jsx","component/NodeDetails.jsx","component/EdgeDetails.jsx","config/defaultStyles.js","reducer/reducer.js","reducer/initialState.js","functions/graph-builder.js","functions/tailored-graph-builder.js","graph.jsx","component/Modal.jsx","toolbarActions/toolbarFunctions.js","toolbarActions/toolbarList.js","component/Header.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["style","selector","width","height","shape","content","label","opacity","backgroundColor","options","zoomingEnabled","userZoomingEnabled","CoreGraph","cy","this","window","cyx","dispatcher","name","type","position","sid","data","id","Date","getTime","add","group","source","target","zealit","require","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","$$typeof","ColorBox","color","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","setData","submit","NodeStyle","borderColor","borderWidth","textValign","textHalign","ParentStyle","setStyle","prop","onSubmit","required","value","placeholder","onChange","e","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","EdgeStyle","reducer","state","action","T","ModelOpen","modalPayload","title","submitText","Children","defaultStyle","cb","initialState","g","addNode","y","juncNodeId","$","incomers","filter","juncNode","parNode","automove","nodesMatching","reposition","dragWith","node","pos","P","h","w","A","B","arr","abs","sort","a","b","when","src","dest","edge","sourceEndpoint","destid","srcid","tid","edgeName","edgeStyle","addEdge","addAutoMove","getRealNode","remove","GraphComp","cytoscape","use","edgehandles","cyOptions","container","document","getElementById","props","cyFun","setCy","setDispatcher","cye","preview","handlePosition","complete","c","modifyNewEdge","addTestData","Component","ReactModal","setAppElement","Modal","closeModal","superState","curClass","setCurClass","useEffect","setTimeout","handleCloseModal","isOpen","contentLabel","onRequestClose","overlayClassName","preventDefault","aria-hidden","createNode","setState","CyFun","dummyAction","alert","toolbarList","text","icon","FaPlus","active","FaEdit","FaFileImport","FaSave","FaUndo","FaRedo","FaTrash","ImZoomOut","ImZoomIn","BiReset","FaDownload","FaFileExport","ActionButton","Icon","Vsep","Hsep","Space","Header","map","tool","i","app","useReducer","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.335f3739.chunk.js","sourcesContent":["const style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            width: 100,\n            height: 50,\n            shape: 'rectangle',\n            content: 'data(name)',\n            'background-color': '#fff',\n            'border-color': '#000',\n            'border-width': 3,\n            'text-valign': 'center',\n            'text-halign': 'center',\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle',\n            'border-color': '#000',\n            'background-color': '#fff',\n            width: 4,\n            'line-color': '#000',\n            'target-arrow-color': '#000',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'text-margin-y': '10px',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 10,\n            height: 10,\n            backgroundColor: 'red',\n        },\n    },\n\n    // {\n    //     selector: '.eh-ghost-edge',\n    //     style: {\n    //         'background-color': 'rgba(0,255,255,0.5)',\n    //         'line-color': '#0f0',\n    //         'target-arrow-color': '#0f0',\n    //     },\n    // },\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n};\n\nexport default options;\n","class CoreGraph {\n    setCy(cy) {\n        this.cy = cy;\n        window.cyx = cy;\n    }\n\n    setDispatcher(dispatcher) {\n        this.dispatcher = dispatcher;\n    }\n\n    addNode(name, style, type, position, sid, data) {\n        const id = sid || (new Date()).getTime();\n        this.cy.add({\n            group: 'nodes',\n            data: {\n                id, name, type, ...data,\n            },\n            style,\n            position,\n        });\n    }\n\n    addEdge(source, target, name, style = {}) {\n        this.cy.add({\n            group: 'edges',\n            data: { source, target, label: name },\n            style,\n        });\n    }\n\n    modifyNewEdge() { return this; }\n}\n\nexport default CoreGraph;\n","const zealit = require('zealit');\n\nconst actionType = {\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    $$typeof: '',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === 13 && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({ data, setData, submit }) => {\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{data.name}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n\n                <div> Label</div>\n                <input\n                    type=\"text\"\n                    required\n                    name=\"Node Name\"\n                    value={data.name}\n                    placeholder=\"Enter Node Name\"\n                    onChange={(e) => setData({ ...data, name: `${e.target.value}` })}\n                />\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ ...data.style, 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ ...data.style, 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ ...data.style, 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ ...data.style, opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport './edgeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({ data, setData, submit }) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.name}</div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Label</div>\n                <input\n                    type=\"text\"\n                    required\n                    name=\"Edge Name\"\n                    value={data.name}\n                    placeholder=\"Enter Edge Name\"\n                    onChange={(e) => setData({ ...data, name: `${e.target.value}` })}\n                />\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#fff',\n    'border-color': '#000',\n    'border-width': '3px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '4px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import T from './actionType';\nimport NodeDetails from '../component/NodeDetails';\nimport EdgeDetails from '../component/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Close:\n        return { ...state, ModelOpen: false };\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const initialState = {\n    ModelOpen: false,\n};\n\nexport default initialState;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nconst g = new TailoredGraphBuilder();\n\nexport default g;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\n\nclass TailoredGraph extends CoreGraph {\n    addTestData() {\n        this.addNode('A', {}, 'ordin', { x: 100, y: 100 }, 1);\n        this.addNode('B', {}, 'ordin', { x: 500, y: 100 }, 2);\n        return this;\n    }\n\n    getRealNode(juncNodeId) {\n        return this.cy.$(`#${juncNodeId}`).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode, parNode) {\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition: 'drag',\n            dragWith: parNode,\n        });\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition(node) {\n                const pos = node.position();\n                const P = parNode.position();\n                const [h, w] = [parNode.height(), parNode.width()];\n                const A = { y: P.y + h / 2, x: P.x + w / 2 };\n                const B = { y: P.y - h / 2, x: P.x - w / 2 };\n                pos.x = Math.min(A.x, Math.max(pos.x, B.x));\n                pos.y = Math.min(A.y, Math.max(pos.y, B.y));\n                if (pos.x < A.x && pos.y < A.y && pos.x > B.x && pos.y > B.y) {\n                    const arr = [[Math.abs(pos.x - A.x), 'X', A.x],\n                        [Math.abs(pos.x - B.x), 'X', B.x],\n                        [Math.abs(pos.y - A.y), 'Y', A.y], [Math.abs(pos.y - B.y), 'Y', B.y]];\n                    arr.sort((a, b) => a[0] - b[0]);\n                    if (arr[0][1] === 'X') { [[, , pos.x]] = arr; }\n                    if (arr[0][1] === 'Y') { [[, , pos.y]] = arr; }\n                }\n                return pos;\n            },\n            when: 'matching',\n        });\n    }\n\n    modifyNewEdge(src, dest, edge) {\n        const position = edge.sourceEndpoint();\n        const destid = dest.data('id');\n        let srcid = src.data('id');\n        if (src.data('type') !== 'special') {\n            const tid = (new Date()).getTime();\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeName, edgeStyle) => {\n                    this.addNode('', { 'background-color': edgeStyle['line-color'] },\n                        'special', position, tid, { edgeName, edgeStyle });\n                    this.addEdge(srcid, tid, edgeName, {\n                        ...edgeStyle,\n                        'target-arrow-shape': 'none',\n                    });\n                    this.addAutoMove(this.cy.$(`#${tid}`), this.cy.$(`#${srcid}`));\n                    srcid = tid;\n                    this.getRealNode(tid);\n                    edge.remove();\n                    this.addEdge(srcid, destid, edgeName, edgeStyle);\n                },\n            });\n        } else {\n            const edgeName = src.data('edgeName');\n            const edgeStyle = src.data('edgeStyle');\n            edge.remove();\n            this.addEdge(srcid, destid, edgeName, edgeStyle);\n        }\n    }\n}\n\nexport default TailoredGraph;\n","import React from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport automove from 'cytoscape-automove';\nimport cyOptions from './config/cytoscape-options';\nimport cyFun from './functions/graph-builder';\n\nclass GraphComp extends React.Component {\n    componentDidMount() {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'automove') !== 'function') {\n            cytoscape.use(automove);\n        }\n        this.cy = cytoscape({ ...cyOptions, container: document.getElementById('cy') });\n        const { dispatcher } = this.props;\n        cyFun.setCy(this.cy);\n        cyFun.setDispatcher(dispatcher);\n        window.cye = this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => cyFun.modifyNewEdge(a, b, c),\n        });\n        cyFun.addTestData();\n    }\n\n    render() {\n        return (\n            <div style={{ height: '100%', width: '100%' }} id=\"cy\" />\n        );\n    }\n}\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({ closeModal, superState }) => {\n    const [curClass, setCurClass] = useState('');\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ name: '', style: defaultStyle });\n        if (ModelOpen === true) {\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        }\n    }, [ModelOpen]);\n\n    const handleCloseModal = () => {\n        setCurClass('closing');\n        setTimeout(() => {\n            closeModal();\n        }, 400);\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.name, data.style);\n        handleCloseModal();\n    };\n\n    return (\n        <ReactModal\n            isOpen={ModelOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={handleCloseModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <form onSubmit={submit}>\n                <div className={`modal-content ${curClass}`}>\n                    <div className=\"modal-header\">\n                        <div className=\"modal-title h4\">{title}</div>\n                        <button type=\"button\" className=\"close\" onClick={handleCloseModal}>\n                            <span aria-hidden=\"true\">×</span>\n                            <span className=\"sr-only\">Close</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-content-body\">\n                        <Children data={data} setData={setData} />\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                    </div>\n                </div>\n            </form>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import CyFun from '../functions/graph-builder';\nimport { actionType as T } from '../reducer';\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (name, style) => {\n            CyFun.addNode(name, style, 'ordin', { x: 100, y: 100 });\n        },\n    });\n};\n// eslint-disable-next-line no-alert\nconst dummyAction = (x) => alert(x);\n\nexport { createNode, dummyAction };\n","/* eslint-disable object-curly-newline */\nimport { BiReset } from 'react-icons/bi';\nimport { ImZoomOut, ImZoomIn } from 'react-icons/im';\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileExport, FaFileImport, FaPlus, FaDownload, FaEdit,\n} from 'react-icons/fa';\nimport { dummyAction, createNode } from './toolbarFunctions';\n\nconst toolbarList = () => [\n    { type: 'action', text: 'Node', icon: FaPlus, action: createNode, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Edit', icon: FaEdit, action: dummyAction, active: true },\n    { type: 'action', text: 'Open', icon: FaFileImport, action: dummyAction, active: true },\n    { type: 'action', text: 'Save', icon: FaSave, action: dummyAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Undo', icon: FaUndo, action: dummyAction, active: true },\n    { type: 'action', text: 'Redo', icon: FaRedo, action: dummyAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Delete', icon: FaTrash, action: dummyAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'In', icon: ImZoomOut, action: dummyAction, active: true },\n    { type: 'action', text: 'Out', icon: ImZoomIn, action: dummyAction, active: true },\n    { type: 'action', text: 'Reset', icon: BiReset, action: dummyAction, active: true },\n    { type: 'space' },\n    { type: 'action', text: 'JPG', icon: FaDownload, action: dummyAction, active: true },\n    { type: 'action', text: 'PNG', icon: FaDownload, action: dummyAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Export', icon: FaFileExport, action: dummyAction, active: true },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport './header.css';\nimport toolbarList from '../toolbarActions/toolbarList';\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ title, state, dispatcher }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {`${title} - DHGWorkflow Editor`}\n        </section>\n        <section className=\"toolbar\">\n            {\n                toolbarList(state, dispatcher).map((tool, i) => {\n                    if (tool.type === 'vsep') return <Vsep key={`${`v${i}`}`} />;\n                    if (tool.type === 'space') return <Space key={`${`s${i}`}`} />;\n                    return (\n                        <ActionButton\n                            Icon={tool.icon}\n                            text={tool.text}\n                            active={tool.active}\n                            action={() => tool.action(state, dispatcher)}\n                            key={tool.text}\n                            tabIndex={i + 1}\n                        />\n                    );\n                })\n            }\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport Modal from './component/Modal';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div>\n            {superState.ModelOpen ? (\n                <Modal\n                    closeModal={() => dispatcher({ type: T.Model_Close })}\n                    superState={superState}\n                />\n            ) : ''}\n            <Header title=\"MyGraph\" state={superState} dispatcher={dispatcher} />\n            <section className=\"body\">\n                <div className=\"graph-container\">\n                    <GraphComp dispatcher={dispatcher} />\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}