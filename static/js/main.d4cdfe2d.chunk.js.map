{"version":3,"sources":["config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/calculations/bending-dist-weight.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["style","selector","overlayOpacity","content","zIndex","width","height","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","label","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","ADD_GRAPH_BULK","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","colors","light","dark","ColorBox","setColor","type","React","useState","visible","setVisible","useEffect","Math","floor","random","role","tabIndex","className","onClick","onKeyDown","ev","key","background","onChangeComplete","x","hex","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","textRef","createRef","widthSet","setWidthSet","setStyle","prop","max","min","current","offsetWidth","onSubmit","borderRadius","ref","padding","htmlFor","name","value","checked","onChange","required","placeholder","e","target","step","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","thickness","NodeStyle","EdgeStyle","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","shareModal","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","length","id","newState","index","filter","i","map","g","setProjectDetail","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","getSet","saveAllgs","this","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","$","y","graphML","nodes","edges","graphml","xmlns","for","graph","edgedefault","edge","edgeML","source","configuration","lineWidth","sx","sy","tx","ty","bendPoint","builder","G","position","edg","X","xml2js","Builder","buildObject","BendingDistanceWeight","dist","A","B","rotate","P","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","getCoordinate","w","d","getWeightDistance","p","GraphLoadSave","ParentClass","autoSaveIntervalId","cy","on","saveLocalStorage","bind","format","saveAs","png","getName","nodeID","getById","edgeID","forEach","shouldNodeBeSaved","all","json","nodeJson","getStyle","push","shouldEdgeBeSaved","edgeJson","getRealSourceId","bendWeight","bendDistance","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","Date","getTime","tid","addNode","addEdge","undefined","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphComponent","getTid","allNodes","start","found","nodePos","getPos","group","addAction","actionName","GA","parameters","rawStyle","sourceId","targetId","parseBendinDW","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","isNode","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","bendNode","classes","regesterEvents","getElementById","els","every","isEdge","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","addClass","evt","hasClass","CG","getBendEdgePoint","DW","removeClass","parseFloat","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","h","c","C","D","getY1Y2","x1","x2","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TG","calJuncNodePos","juncNodeId","incomers","unselectify","sourceID","targetID","edgeStyle","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","Object","keys","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","err","grahMLObj","grahML","parseDetails","Boolean","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","readAsText","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","hotkeys","event","preventDefault","document","click","querySelector","data-tip","data-for","place","effect","GraphComp","props","graphContainerRef","element","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","gid","toString","history","replaceState","pathname","allSavedGs","graphId","flex","flexDirection","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","toolbarList","text","icon","FaPlus","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","app","useReducer","GraphCompDetails","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d4cdfe2d.chunk.js","sourcesContent":["const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(style.bendDistance)',\n            segmentWeights: 'data(style.bendWeight)',\n            edgeDistances: 'node-position',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{ ...data.style, height: data.style.thickness }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('nodeediting.resizeend graph-modified', this.saveLocalStorage.bind(this));\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow-${new Date().getTime()}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import BendingDistanceWeight from './calculations/bending-dist-weight';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId) {\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: 0, bendWeight: 0.5 };\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst CoreGraph = (ParentClass) => class CG extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CG.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TG.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TG.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            { ...juncNode.data('edgeStyle'), bendDistance: edgeStyle.bendDistance, bendWeight: edgeStyle.bendWeight },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        if (this.getById(targetID).data('type') !== 'ordin') return this;\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdge(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}