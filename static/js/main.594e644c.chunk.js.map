{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/5-load-save.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","SET_BENDW","GraphComponent","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceId","targetId","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","bendDistance","d","has","rawStyle","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","source","target","parseBendinDW","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","superState","projectDetails","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","payload","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","parseFloat","getCoordinate","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","localStorage","getItem","setItem","btoa","JSON","stringify","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","saveLocalStorage","format","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","fileName","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","clearTimeout","setTimeout","loadJson","props","GraphUndoRedo","methodsMapped","setBendWightDist","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","SET_UNDO","SET_REDO","curTid","performAction","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","filter","unselectify","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","n1","n2","n","r","union","c1","c2","Object","values","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","keys","s","t","propFromArr","split","property","any","S","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","name","join","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","CHANGE_TAB","data-for","place","effect","GraphComp","graphContainerRef","useRef","setConatinerDim","element","current","offsetWidth","offsetHeight","addEventListener","childNodes","classList","contains","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","fn","prompt","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","createRef","accept","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","useReducer","reducer","initialState","Settings","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","htmlFor","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"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","file":"static/js/main.594e644c.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.nodeValidator = nodeValidator;\n        this.edgeValidator = edgeValidator;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceId, targetId) {\n        return this.getById(sourceId).edgesWith(this.getById(targetId));\n    }\n\n    getBendingD(sourceId, targetId) {\n        const edges = this.getEdgesBetweenNodes(sourceId, targetId);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            dists.add(edge.data('style').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId, type) {\n        if (type !== 'ordin') return { ...rawStyle, bendDistance: 0, bendWeight: 0 };\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: this.getBendingD(sourceId, targetId), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(source, target, label, rawStyle = {}, type = 'ordin',\n        id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target, type);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id,\n        tid = this.getTid()) {\n        if (type !== 'ordin' || label) {\n            return this.addEdgeWithLabel(source, target, label, rawStyle, type, id, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, source, target, null, 'New');\n                if (message.ok) this.addEdgeWithLabel(source, target, edgeLabel, edgeStyle, type, id, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceId, targetId, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceId)).data('label'),\n            targetLabel: this.getById(targetId).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n}\n\nexport default GraphCanvas;\n","import { actionType as T } from '../../reducer';\n// import GraphLoadSave from './graph-load-save';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectDetails;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', {\n                    bendDistance: el.data('style').bendDistance, bendWeight: el.data('style').bendWeight,\n                });\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), {\n                    bendDistance: el.data('style').bendDistance, bendWeight: el.data('style').bendWeight,\n                });\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, bendDistance: DW.bendDistance, bendWeight: DW.bendWeight });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n}\n\nexport default CoreGraph;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(style.bendDistance)',\n            segmentWeights: 'data(style.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import GraphLoadSave from './5-load-save';\n\nexport default GraphLoadSave;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                    style: {},\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}\\\n${this.projectDetails.author ? `-${this.projectDetails.author}` : ''}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","import GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        GraphUndoRedo.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GraphUndoRedo.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdgeWithLabel(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            {\n                ...juncNode.data('edgeStyle'),\n                bendDistance: edgeStyle.bendDistance,\n                bendWeight: edgeStyle.bendWeight,\n                bendPoint: edgeStyle.bendPoint,\n            },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdgeWithLabel(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        if (this.getById(targetID).data('type') !== 'ordin') return this;\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdgeWithLabel(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                if (message.ok) this.addEdge(sourceID, targetID, edgeLabel, edgeStyle, tid);\n                return message;\n            },\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                if (!graphContent.projectDetails.projectName) {\n                    /* eslint-disable no-param-reassign */\n                    [graphContent.projectDetails.projectName] = e.target.files[0]\n                        .name.split('.').slice(0, -1).join('.').split('-');\n                    graphContent.projectDetails.set = true;\n                    /* eslint-enable no-param-reassign */\n                }\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    edges.forEach((e) => {\n        if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n            message = {\n                ok: false,\n                err: 'Edge with same label exists.',\n            };\n        }\n    });\n    return message;\n};\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const setConatinerDim = (element) => {\n        /* eslint-disable no-param-reassign */\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        /* eslint-enable no-param-reassign */\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', () => graphContainerRef.current.childNodes\n            .forEach((el) => el.classList.contains('graph-element') && setConatinerDim(el)));\n    }, []);\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        setConatinerDim(element);\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new MyGraph(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                        className=\"graph-element\"\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span><b>{e}</b></span>;\n        return <span>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <div className=\"docStr\">{parseMD(docString)}</div>\n            <br />\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges, type)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}