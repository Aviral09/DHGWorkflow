{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","reducer/reducer.js","reducer/initialState.js","graph-builder/graph-load-save.js","graph-builder/graph-component.js","graph-builder/graph-canvas.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarFunctions.js","toolbarActions/toolbarList.js","component/Header.jsx","component/modals/ProjectDetails.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","borderColor","borderWidth","textValign","textHalign","borderRadius","ParentStyle","setStyle","prop","onSubmit","htmlFor","type","name","value","checked","onChange","required","placeholder","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","reducer","state","action","T","ModelOpen","modalPayload","title","submitText","Children","defaultStyle","defaultLabel","cb","eleSelected","eleSelectedPayload","payload","drawModeOn","zoomValue","projectDetails","initialState","author","set","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","this","cy","png","getName","nodeID","getById","edgeID","graph","nodes","edges","superState","forEach","node","shouldNodeBeSaved","id","all","json","nodeJson","position","getStyle","push","edge","shouldEdgeBeSaved","edgeJson","source","getRealSourceId","str","JSON","stringify","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","clearAll","addNode","addEdge","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","graphJson","serializedJson","window","localStorage","setItem","btoa","getItem","loadJson","parse","atob","GraphComponent","getPos","add","group","setNodeEvent","el","allStyles","styles","isNode","Object","entries","p","isEdge","shouldUpdateLabel","val","connectedEdges","deleteEdge","remove","deleteNode","allNodes","$","start","y","found","i","length","nodePos","GraphCanvas","reset","fit","v","zoom","elements","confirm","CoreGraph","getElementById","els","every","ids","map","on","selectDeselectEventHandler","round","saveLocalStorage","bind","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","get","g","juncNodeId","incomers","filter","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","deleteElem","parNode","meanNbrPosition","setOfPos","Set","posStr","pos","GraphOption","marks","ZoomComp","myGraph","resetZoom","fitZoom","setZoom","included","GraphComp","props","graphContainerRef","createRef","graphRef","useEffect","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","current","offsetWidth","offsetHeight","cyOptions","container","resizeToContentCueEnabled","setWidth","css","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","regesterEvents","preview","handlePosition","complete","a","b","loadGraphFromLocalStorage","flex","ref","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","preventDefault","createNode","_","setState","CyFun","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","result","readAsText","newProject","editDetails","dummyAction","alert","toolbarList","text","icon","FaPlus","active","FaFolderPlus","FaRavelry","FaUserEdit","FaFileImport","FaSave","FaUndo","FaRedo","FaEdit","FaTrash","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","click","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","tool","ProjectDeails","document","querySelector","app","useReducer","GraphCompDetails","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab03ae8d.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '1px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '1px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n            'z-index': 100,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 10,\n            height: 10,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === 13 && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_ZOOM: return { ...state, zoomValue: action.payload };\n    case T.SET_PROJECT_DETAILS: return { ...state, projectDetails: action.payload };\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    zoomValue: 100,\n    projectDetails: {\n        name: '',\n        author: '',\n        set: false,\n    },\n};\n\nexport default initialState;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jgp`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = { nodes: [], edges: [], projectDetails: this.superState.projectDetails };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.superState.projectDetails.name}-${this.superState.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = JSON.stringify(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow.json`);\n    }\n\n    loadJson(content) {\n        this.clearAll();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { id: node.id });\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style);\n        });\n        this.dispatcher({ type: T.SET_PROJECT_DETAILS, payload: content.projectDetails });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => {\n            const graphJson = this.jsonifyGraph();\n            const serializedJson = JSON.stringify(graphJson);\n            window.localStorage.setItem('serializedGraph', window.btoa(serializedJson));\n        }, 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        if (window.localStorage.getItem('serializedGraph') === null) return false;\n        this.loadJson(JSON.parse(window.atob(window.localStorage.getItem('serializedGraph'))));\n        return true;\n    }\n};\n\nexport default GraphLoadSave;\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\n\nconst GraphComponent = (ParentClass) => class extends ParentClass {\n    static getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                label, type, ...data,\n            },\n            style,\n            position,\n        });\n        this.setNodeEvent(node);\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin') {\n        // this.();\n        return this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type,\n            },\n            style,\n        });\n    }\n\n    getStyle(id) {\n        const el = this.getById(id);\n        const allStyles = el.style();\n        const styles = {};\n        if (el.isNode()) Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        if (el.isEdge()) Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel) {\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel) {\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val) {\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id) {\n        const el = this.getById(id);\n        el.connectedEdges().forEach((edge) => this.deleteEdge(edge.id()));\n        el.remove();\n    }\n\n    deleteEdge(id) {\n        this.getById(id).remove();\n    }\n\n    deleteElem(id) {\n        if (this.getById(id).isNode()) return this.deleteNode(id);\n        return this.deleteEdge(id);\n    }\n};\n\nexport default GraphComponent;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().remove();\n        return true;\n    }\n};\n\nexport default GraphCanvas;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\n\nconst CoreGraph = (ParentClass) => class extends GraphLoadSave(GraphComponent(GraphCanvas(ParentClass))) {\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('zoom', (e) => this.dispatcher({ type: T.SET_ZOOM, payload: Math.round(100 * e.target.zoom()) }));\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nconst g = new (TailoredGraphBuilder(Object))();\n\nexport default g;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parseInt(parNode.style().width.slice(0, -2), 10) / 2,\n            parseInt(parNode.style().height.slice(0, -2), 10) / 2,\n            parNode.style().shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(sourceID, targetID, juncNode.data('edgeLabel'), juncNode.data('edgeStyle'));\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.style();\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            parseInt(sourceNodeStyle.width.slice(0, -2), 10) / 2,\n            parseInt(sourceNodeStyle.height.slice(0, -2), 10) / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style });\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special');\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID);\n    }\n\n    addEdge(sourceID, targetID, label = '', style) {\n        const sourceNode = this.getById(sourceID);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel));\n    }\n\n    deleteElem(id) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            el.outgoers().forEach((x) => super.deleteElem(x.id()));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id()));\n            super.deleteNode(id);\n        } else {\n            const junctionNode = el.source();\n            super.deleteEdge(id);\n            if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id());\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport { actionType as T } from '../reducer';\nimport myGraph from '../graph-builder';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ dispatcher, superState }) => (\n    <div>\n        <div className=\"zoom-comp\">\n            <div\n                role=\"button\"\n                tabIndex={0}\n                className=\"zoom-box zoom-btn\"\n                onClick={() => myGraph.resetZoom()}\n                onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n            >\n                <BiReset />\n\n            </div>\n            <div\n                role=\"button\"\n                tabIndex={0}\n                className=\"zoom-box zoom-btn\"\n                onClick={() => myGraph.fitZoom()}\n                onKeyDown={(ev) => ev.key === 13 && (myGraph.resetZoom())}\n            >\n                <BiRectangle />\n\n            </div>\n            <div className=\"zoom-box zoom-value\">\n                {superState.zoomValue}\n                %\n            </div>\n            <div className=\"slider\">\n                <Slider\n                    min={100 * minZoom}\n                    max={100 * maxZoom}\n                    marks={marks}\n                    onChange={(value) => { myGraph.setZoom(value); dispatcher({ type: T.SET_ZOOM, payload: value }); }}\n                    included={false}\n                    value={superState.zoomValue}\n                />\n            </div>\n        </div>\n    </div>\n);\n\nexport default ZoomComp;\n","/* eslint-disable */\nimport React from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport cyOptions from './config/cytoscape-options';\nimport myGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing'\nimport $ from \"jquery\";\nimport { useEffect } from 'react';\n\nconst GraphComp = (props)=>{\n    const graphContainerRef = React.createRef();\n    const graphRef = React.createRef();\n    const { dispatcher, superState } = props;\n    useEffect(()=>{\n        myGraph.set({superState})\n    }, [superState])\n    useEffect(()=>{\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        graphRef.current.style.width = graphContainerRef.current.offsetWidth + \"px\"\n        graphRef.current.style.height = graphContainerRef.current.offsetHeight + \"px\"\n        const cy = cytoscape({ ...cyOptions, container: graphRef.current });\n        cy.nodeEditing({ \n            resizeToContentCueEnabled: () => false, \n            setWidth: function(node, width) { \n                if(node.data('type')!='special') node.css('width', width);\n            },\n            setHeight: function(node, height) {\n                if(node.data('type')!='special') node.css('height', height);\n            }, \n            isNoResizeMode: function (node) { return node.data('type')==='special' }, \n            isNoControlsMode: function (node) { return node.data('type')==='special' },\n        });\n\n        cy.gridGuide({snapToGridOnRelease :false});\n        myGraph.set({cy, dispatcher, superState});\n        myGraph.regesterEvents();\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => {c.remove() ; myGraph.addEdge(a.id(), b.id())},\n        });\n        myGraph.loadGraphFromLocalStorage()\n    }, [])\n\n    return (\n        <div className=\"graph-container\" style={{ flex: 1 }} ref={graphContainerRef}>\n            <div style={{ zIndex: 1 }} id=\"cy\" ref={graphRef} />\n            <ZoomComp dispatcher={dispatcher} superState={superState} />\n        </div>\n    );\n}\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        } else {\n            setCurClass('closing');\n            setTimeout(() => {\n                setIsOpen(false);\n            }, 400);\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import CyFun from '../graph-builder';\nimport { actionType as T } from '../reducer';\nimport initialState from '../reducer/initialState';\n\nconst createNode = (_, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            CyFun.addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => CyFun.updateNode(id, style, label, shouldUpdateLabel),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: CyFun.getLabel(state.eleSelectedPayload.ids[0]),\n            style: CyFun.getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => CyFun.updateEdge(id, style, label, shouldUpdateLabel),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: CyFun.getLabel(state.eleSelectedPayload.ids[0]),\n            style: CyFun.getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst toggleDrawMode = (state, setState) => {\n    CyFun.enableDraw(!state.drawModeOn);\n    setState({ type: T.TURN_DRAW, payload: !state.drawModeOn });\n};\n\nconst deleteElem = (state) => {\n    state.eleSelectedPayload.ids.forEach((id) => CyFun.deleteElem(id));\n};\n\nconst downloadImg = (state, setState, format) => {\n    CyFun.downloadImg(format);\n};\n\nconst saveAction = () => {\n    CyFun.saveToDisk();\n};\n\nconst readFile = (e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            CyFun.loadJson(JSON.parse(x.target.result));\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    if (CyFun.clearAll()) {\n        setState({ type: T.SET_PROJECT_DETAILS, payload: initialState.projectDetails });\n    }\n};\n\nconst clearAll = () => {\n    CyFun.clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({ type: T.SET_PROJECT_DETAILS, payload: { ...state.projectDetails, set: false } });\n};\n\n// eslint-disable-next-line no-alert\nconst dummyAction = (x) => alert(x);\n\nexport {\n    createNode, dummyAction, editElement, toggleDrawMode, deleteElem,\n    downloadImg, saveAction, readFile, newProject, clearAll, editDetails,\n};\n","/* eslint-disable object-curly-newline */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaFolderPlus, FaRavelry, FaUserEdit,\n} from 'react-icons/fa';\nimport {\n    dummyAction, createNode, editElement, deleteElem,\n    downloadImg, saveAction, readFile, newProject, clearAll, editDetails,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    { type: 'action', text: 'Node', icon: FaPlus, action: createNode, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'New', icon: FaFolderPlus, action: newProject, active: true },\n    { type: 'action', text: 'Clear', icon: FaRavelry, action: clearAll, active: true },\n    { type: 'action', text: 'Details', icon: FaUserEdit, action: editDetails, active: true },\n    { type: 'vsep' },\n    { type: 'file-upload', text: 'Open', icon: FaFileImport, action: readFile, active: true },\n    { type: 'action', text: 'Save', icon: FaSave, action: saveAction, active: true },\n    { type: 'vsep' },\n    { type: 'action', text: 'Undo', icon: FaUndo, action: dummyAction, active: false },\n    { type: 'action', text: 'Redo', icon: FaRedo, action: dummyAction, active: false },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n    },\n    { type: 'action', text: 'Delete', icon: FaTrash, action: deleteElem, active: state.eleSelected },\n    { type: 'vsep' },\n    // { type: 'switch', text: 'Draw', action: toggleDrawMode, active: state.drawModeOn },\n    { type: 'space' },\n    { type: 'menu', text: 'Download', icon: FaDownload, action: downloadImg, active: true },\n    { type: 'vsep' },\n    // { type: 'action', text: 'Export', icon: FaFileExport, action: dummyAction, active: false },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\n\nimport 'rc-switch/assets/index.css';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n} from '@szhsin/react-menu';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".json\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(),\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ title, state, dispatcher }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {title ? `${title} - DHGWorkflow Editor` : ''}\n        </section>\n        <section className=\"toolbar\">\n            {\n                toolbarList(state, dispatcher).map((tool, i) => {\n                    if (tool.type === 'vsep') return <Vsep key={`${`v${i}`}`} />;\n                    if (tool.type === 'space') return <Space key={`${`s${i}`}`} />;\n                    if (tool.type === 'switch') {\n                        return (\n                            <Switcher\n                                text={tool.text}\n                                active={tool.active}\n                                action={() => tool.action(state, dispatcher)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'menu') {\n                        return (\n                            <DropDown\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(state, dispatcher, e)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    if (tool.type === 'file-upload') {\n                        return (\n                            <FileUploader\n                                Icon={tool.icon}\n                                text={tool.text}\n                                active={tool.active}\n                                action={(e) => tool.action(e, state, dispatcher)}\n                                key={tool.text}\n                                tabIndex={i + 1}\n                            />\n                        );\n                    }\n                    return (\n                        <ActionButton\n                            Icon={tool.icon}\n                            text={tool.text}\n                            active={tool.active}\n                            action={() => tool.action(state, dispatcher)}\n                            key={tool.text}\n                            tabIndex={i + 1}\n                        />\n                    );\n                })\n            }\n            <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React from 'react';\nimport Modal from './ParentModal';\nimport { actionType as T } from '../../reducer';\nimport './project-details.css';\n\nconst ProjectDeails = ({ superState, dispatcher }) => {\n    const setName = (e) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: { ...superState.projectDetails, name: e.target.value },\n        });\n    };\n    const setAuthor = (e) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: { ...superState.projectDetails, author: e.target.value },\n        });\n    };\n    const submit = (e) => {\n        e.preventDefault();\n        dispatcher({ type: T.SET_PROJECT_DETAILS, payload: { ...superState.projectDetails, set: true } });\n    };\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    return (\n        <Modal ModelOpen={!superState.projectDetails.set} title=\"Project Details\">\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={superState.projectDetails.name}\n                    onChange={setName}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={superState.projectDetails.author}\n                    onChange={setAuthor}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    <div className=\"divider\" />\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={openExisting}>Open Existing</button>\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDeails;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDeails from './component/modals/ProjectDetails';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDeails superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header title={superState.projectDetails.name} state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}