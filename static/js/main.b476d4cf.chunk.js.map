{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","borderColor","borderWidth","textValign","textHalign","borderRadius","ParentStyle","setStyle","prop","onSubmit","htmlFor","type","name","value","checked","onChange","ref","required","placeholder","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","shareModal","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","index","length","filter","i","map","g","setProjectDetail","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","getSet","saveAllgs","this","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","addToFront","Garr","unshift","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","cy","png","getName","nodeID","getById","edgeID","graph","nodes","edges","forEach","shouldNodeBeSaved","all","json","nodeJson","position","getStyle","push","edge","shouldEdgeBeSaved","edgeJson","source","getRealSourceId","str","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","tid","Date","getTime","addNode","addEdge","undefined","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","on","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphComponent","getTid","allNodes","$","start","y","found","nodePos","getPos","group","Object","entries","p","setNodeEvent","addAction","actionName","GA","parameters","allStyles","styles","isNode","isEdge","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","bind","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","regesterEvents","saveLocalStorage","getElementById","els","every","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","TailoredGraphBuilder","juncNodeId","incomers","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","result","readAsText","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","data-for","place","effect","GraphComp","props","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","css","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","gid","toString","history","replaceState","pathname","graphId","flex","flexDirection","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","toolbarList","text","icon","FaPlus","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","ActionButton","split","fontSize","Vsep","Hsep","Space","Header","actions","keys","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","then","getElementsByClassName","select","app","useReducer","GraphCompDetails","overflow","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b476d4cf.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '1px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '1px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n            'z-index': 100,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, { useCallback } from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = JSON.stringify(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow.json`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                id, label, type, ...data,\n            },\n            position,\n        });\n        // ↓ Not optimal to do ↓\n        Object.entries(style).forEach((p) => { node.style(p[0], p[1]); });\n        this.setNodeEvent(node);\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin', id, tid = this.getTid()) {\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id,\n            },\n        });\n        // ↓ Not optimal to do ↓\n        Object.entries(style).forEach((p) => { edge.style(p[0], p[1]); });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        const el = this.getById(id);\n        const allStyles = el.style();\n        const styles = {};\n        if (el.isNode()) Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        if (el.isEdge()) Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        this.getById(id).style('height', dim.height);\n        this.getById(id).style('width', dim.width);\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\n// import GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\n\nconst CoreGraph = (ParentClass) => class extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.regesterEvents();\n        this.saveLocalStorage();\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.saveLocalStorage();\n    }\n\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.style().height);\n            node.scratch('width', node.style().width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.style().height, width: node.style().width },\n                { ...node.position() },\n            );\n        });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parseInt(parNode.style().width.slice(0, -2), 10) / 2,\n            parseInt(parNode.style().height.slice(0, -2), 10) / 2,\n            parNode.style().shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style moved', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            juncNode.data('edgeStyle'),\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.style();\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            parseInt(sourceNodeStyle.width.slice(0, -2), 10) / 2,\n            parseInt(sourceNodeStyle.height.slice(0, -2), 10) / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdge(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            const graphContent = JSON.parse(x.target.result);\n            const id = new Date().getTime();\n            localStorageManager.save(id, graphContent);\n            setState({\n                type: T.ADD_GRAPH,\n                payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {' - '}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                if (node.data('type') !== 'special') node.css('width', width);\n            },\n            setHeight(node, height) {\n                if (node.data('type') !== 'special') node.css('height', height);\n            },\n            isNoResizeMode(node) { return node.data('type') === 'special'; },\n            isNoControlsMode(node) { return node.data('type') === 'special'; },\n        });\n\n        cy.gridGuide({ snapToGridOnRelease: false });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex]) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        localStorageManager.getAllGraphs().forEach((graphId) => {\n            dispatcher({\n                type: T.ADD_GRAPH,\n                payload: {\n                    id: graphId,\n                    projectDetails: { projectName: '', author: '', set: true },\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        } else {\n            setCurClass('closing');\n            setTimeout(() => {\n                setIsOpen(false);\n            }, 400);\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".json\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName);\n            setAuthor(curGraph.projectDetails.author);\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else setProjectDetails({ ...curGraph.projectDetails, set: true });\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}