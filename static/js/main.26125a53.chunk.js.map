{"version":3,"sources":["config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/calculations/bending-dist-weight.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["style","selector","content","width","height","shape","opacity","backgroundColor","label","color","display","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","onChangeComplete","x","hex","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","setStyle","prop","onSubmit","borderRadius","padding","htmlFor","type","name","value","checked","onChange","ref","required","placeholder","e","target","Math","min","borderColor","borderWidth","step","max","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","thickness","NodeStyle","EdgeStyle","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","shareModal","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","index","length","filter","i","map","g","setProjectDetail","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","getSet","saveAllgs","this","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","$","y","graphML","nodes","edges","graphml","xmlns","for","graph","edgedefault","edge","edgeML","source","configuration","lineColor","lineWidth","sx","sy","tx","ty","bendPoint","builder","G","position","edg","X","xml2js","Builder","buildObject","BendingDistanceWeight","dist","A","B","rotate","P","Q","cos","sin","extraRad","PI","getCoordinate","w","d","tanQ","atan","getWeightDistance","p","GraphLoadSave","ParentClass","autoSaveIntervalId","cy","on","saveLocalStorage","bind","format","saveAs","png","getName","nodeID","getById","edgeID","forEach","shouldNodeBeSaved","all","json","nodeJson","getStyle","push","shouldEdgeBeSaved","edgeJson","getRealSourceId","bendWeight","bendDistance","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","Date","getTime","tid","addNode","addEdge","undefined","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphComponent","getTid","allNodes","start","found","nodePos","getPos","group","addAction","actionName","GA","parameters","rawStyle","sourceId","targetId","parseBendinDW","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","isNode","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","regesterEvents","bendNode","classes","getElementById","els","every","isEdge","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","addClass","evt","CG","getBendEdgePoint","DW","removeClass","parseFloat","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","h","c","C","D","getY1Y2","x1","x2","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","TailoredGraphBuilder","connectedNodes","juncNode","TG","calJuncNodePos","juncNodeId","incomers","unselectify","sourceID","targetID","edgeStyle","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","Object","keys","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","err","grahMLObj","grahML","parseDetails","Boolean","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","readAsText","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","data-for","place","effect","GraphComp","props","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","gid","toString","history","replaceState","pathname","graphId","flex","flexDirection","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","toolbarList","text","icon","FaPlus","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","app","useReducer","GraphCompDetails","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26125a53.chunk.js","sourcesContent":["const style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            'z-index': 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            'background-color': 'data(style.backgroundColor)',\n            'border-color': 'data(style.borderColor)',\n            'border-width': 'data(style.borderWidth)',\n            'text-valign': 'center',\n            'text-halign': 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            width: 30,\n            height: 30,\n            backgroundColor: '#9575cd',\n            opacity: 0.4,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            'line-color': 'data(style.backgroundColor)',\n            'target-arrow-color': 'data(style.backgroundColor)',\n            'curve-style': 'segments',\n            'segment-distances': 'data(style.bendDistance)',\n            'segment-weights': 'data(style.bendWeight)',\n            'edge-distances': 'node-position',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, { useCallback } from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    {labelAllowed ? data.label : ''}\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => setStyle({ width: Math.min(500, e.target.value) })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{ ...data.style, height: data.style.thickness }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#e0f2f1',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x > B.x && A.y > B.y) || (A.x > B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = ((Math.atan(tanQ) - this.extraRad(A, B)) + 2 * Math.PI) % (2 * Math.PI);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('nodeediting.resizeend graph-modified', this.saveLocalStorage.bind(this));\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow-${new Date().getTime()}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import BendingDistanceWeight from './calculations/bending-dist-weight';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId) {\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: 0, bendWeight: 0.5 };\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst CoreGraph = (ParentClass) => class CG extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) return this.cy.emit('hide-bend');\n            this.bendNode.position(CG.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                el.emit('bending');\n            });\n            return this.bendNode.removeClass('hidden');\n        });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TG.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TG.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            { ...juncNode.data('edgeStyle'), bendDistance: edgeStyle.bendDistance, bendWeight: edgeStyle.bendWeight },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdge(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {' - '}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({ snapToGridOnRelease: false });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex]) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        localStorageManager.getAllGraphs().forEach((graphId) => {\n            dispatcher({\n                type: T.ADD_GRAPH,\n                payload: {\n                    id: graphId,\n                    projectDetails: { projectName: '', author: '', set: true },\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}