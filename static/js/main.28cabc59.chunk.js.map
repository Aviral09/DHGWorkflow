{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-component.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","GraphComponent","ParentClass","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","rawStyle","sourceId","targetId","bendDistance","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","getById","d","w","source","target","parseBendinDW","edge","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","forEach","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","comp","validator","getNodesEdges","nodes","edges","undefined","err","e","validiateComp","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","has","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","configuration","lineWidth","sx","sy","tx","ty","builder","G","edg","thickness","X","projectDetails","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","on","saveLocalStorage","bind","format","saveAs","png","getName","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","getRealSourceId","getCoordinate","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","payload","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","Math","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphUndoRedo","GUR","methodsMapped","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","SET_UNDO","SET_REDO","curTid","performAction","CoreGraph","superState","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","addClass","evt","ev","hasClass","CG","getBendEdgePoint","DW","removeClass","parseFloat","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TG","calJuncNodePos","juncNodeId","incomers","filter","unselectify","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","customValidiateEdge","junctionNode","updateData","updateNode","customGetNodesEdges","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","Object","keys","s","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","CHANGE_TAB","data-for","place","effect","n","GraphComp","props","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","useReducer","reducer","initialState","Settings","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","htmlFor","name","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"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","file":"static/js/main.28cabc59.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import BendingDistanceWeight from './calculations/bending-dist-weight';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor(...args) {\n        super(...args);\n        [,,,,, this.nodeValidator, this.edgeValidator] = args;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId) {\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: 0, bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        if (type === 'ordin' && label) {\n            return this.addEdgeWithLabel(source, target, label, rawStyle, type, id, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, source, target);\n                if (message.ok) this.addEdgeWithLabel(source, target, edgeLabel, edgeStyle, type, id, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            source: edge.source().data('label'),\n            target: edge.target().data('label'),\n            style: edge.data('style'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style) {\n        return this.validiateComp({ label, style }, this.nodeValidator);\n    }\n\n    validiateEdge(label, style, source, target) {\n        return this.validiateComp({\n            label, style, source, target,\n        }, this.edgeValidator);\n    }\n};\n\nexport default GraphComponent;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(style.bendDistance)',\n            segmentWeights: 'data(style.bendWeight)',\n            edgeDistances: 'node-position',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('nodeediting.resizeend graph-modified', this.saveLocalStorage.bind(this));\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow-${new Date().getTime()}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst CoreGraph = (ParentClass) => class CG extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CG.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TG.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TG.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdgeWithLabel(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            { ...juncNode.data('edgeStyle'), bendDistance: edgeStyle.bendDistance, bendWeight: edgeStyle.bendWeight },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdgeWithLabel(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        if (this.getById(targetID).data('type') !== 'ordin') return this;\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdgeWithLabel(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.customValidiateEdge(edgeLabel, edgeStyle, sourceID, targetID);\n                if (message.ok) this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid);\n                return message;\n            },\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    customGetNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            source: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            target: edge.target().data('label'),\n            style: edge.data('style'),\n        }));\n        return [nodes, edges];\n    }\n\n    customValidiateEdge(label, style, source, target) {\n        const [nodes, edges] = this.customGetNodesEdges();\n        try {\n            const message = this.edgeValidator({\n                label, style, source, target,\n            }, nodes, edges);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style);\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    edges.forEach((n) => {\n        if (n.label === edge.label) {\n            message = {\n                ok: false,\n                err: 'Edge with same label exists.',\n            };\n        }\n    });\n    return message;\n};\n\nexport { nodeValidator, edgeValidator };\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new (MyGraph(Object))(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'Ctrl+S',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height,\n}) => {\n    const inputRef = React.createRef();\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{ ...data.style, height: data.style.thickness }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}