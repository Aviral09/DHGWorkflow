{"version":3,"sources":["graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/5-load-save.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","graph-builder/graph-actions.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["GraphComponent","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","target","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","key","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","superState","projectDetails","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","payload","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","parseFloat","getCoordinate","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","localStorage","getItem","setItem","btoa","JSON","stringify","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","saveLocalStorage","format","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","fileName","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","clearTimeout","setTimeout","loadJson","props","GraphUndoRedo","methodsMapped","updateNode","updateEdge","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","actionArr","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","informUI","performAction","curTid","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","filter","unselectify","ed","bind","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","r","union","c1","c2","Object","values","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","keys","s","t","propFromArr","split","property","any","S","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","labelAllowed","getLabel","Model_Open_Update_Edge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","name","join","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","CHANGE_TAB","data-for","place","effect","GraphComp","graphContainerRef","useRef","setConatinerDim","element","current","offsetWidth","offsetHeight","addEventListener","childNodes","classList","contains","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","fn","prompt","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","SET_FILE_REF","getElementsByTagName","cc","dragEvent","dataTransfer","accept","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","res","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","parseAction","par","stringifyAction","htmlFor","listStyleType","useReducer","reducer","initialState","Settings","History","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"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","file":"static/js/main.2836327e.chunk.js","sourcesContent":["import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.nodeValidator = nodeValidator;\n        this.edgeValidator = edgeValidator;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            dists.add(edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n}\n\nexport default GraphCanvas;\n","import { actionType as T } from '../../reducer';\n// import GraphLoadSave from './graph-load-save';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectDetails;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label');\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n}\n\nexport default CoreGraph;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import GraphLoadSave from './5-load-save';\n\nexport default GraphLoadSave;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}\\\n${this.projectDetails.author ? `-${this.projectDetails.author}` : ''}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","import GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        GraphUndoRedo.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GraphUndoRedo.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GraphUndoRedo.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                if (!graphContent.projectDetails.projectName) {\n                    /* eslint-disable no-param-reassign */\n                    [graphContent.projectDetails.projectName] = e.target.files[0]\n                        .name.split('.').slice(0, -1).join('.').split('-');\n                    graphContent.projectDetails.set = true;\n                    /* eslint-enable no-param-reassign */\n                }\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    edges.forEach((e) => {\n        if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n            message = {\n                ok: false,\n                err: 'Edge with same label exists.',\n            };\n        }\n    });\n    return message;\n};\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const setConatinerDim = (element) => {\n        /* eslint-disable no-param-reassign */\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        /* eslint-enable no-param-reassign */\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', () => graphContainerRef.current.childNodes\n            .forEach((el) => el.classList.contains('graph-element') && setConatinerDim(el)));\n    }, []);\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        setConatinerDim(element);\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new MyGraph(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                        className=\"graph-element\"\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n    FaHistory,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n    viewHistory,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: true,\n        // hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.graphs[superState.curGraphIndex] ? `${\n                        superState.graphs[superState.curGraphIndex].projectDetails.projectName\n                    } - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span><b>{e}</b></span>;\n        return <span>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <div className=\"docStr\">{parseMD(docString)}</div>\n            <br />\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges, type)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                fileRef.current.files = e.dataTransfer.files;\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            return superState.graphs[superState.curGraphIndex].instance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setHistoryList([\n                ...superState.graphs[superState.curGraphIndex].instance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.graphs[superState.curGraphIndex].instance.actionArr.length\n                - superState.graphs[superState.curGraphIndex].instance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphIndex, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.graphs[superState.curGraphIndex].instance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.graphs[superState.curGraphIndex].instance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, index) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <span>\n                {\n                    index === curState ? '[Current]'\n                        : (\n                            <button\n                                className=\"a-link\"\n                                type=\"button\"\n                                onClick={() => restoreState(index)}\n                            >\n                                [Restore]\n                            </button>\n                        )\n                }\n                {' '}\n                <span>{`${date}-${time}`}</span>\n                {' --- '}\n                <span style={{ fontWeight: 100 }}>{str}</span>\n            </span>\n        );\n        if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({ equivalent, tid, i }) => prefixTid(tid, stringifyAction(equivalent), i);\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <ul style={{ listStyleType: 'circle' }}>\n                        {/* eslint-disable-next-line react/no-array-index-key */}\n                        {historyView.map((h, i) => <li className=\"hist-element\" key={i}>{h}</li>)}\n                    </ul>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n};\n\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n    viewHistory: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}