{"version":3,"sources":["graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","serverCon/config.js","serverCon/crud_http.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/serverActions/ServerActions.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/graph-actions.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","target","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","key","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","SET_ZOOM_LEVEL","payload","element","superState","projectName","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","regesterEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","SET_PROJECT_DETAILS","value","graphID","serverID","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","curGraphInstance","zoomValue","zoomLevel","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","setZoom","included","localStorageManager","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","JSON","stringify","parse","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","authorName","clearGraph","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","addNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","updateNode","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","format","saveAction","fileName","saveToDisk","readFile","files","fr","FileReader","name","split","join","onload","ADD_GRAPH","graphML","result","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","graphs","REMOVE_GRAPH","editCur","SET_EDIT_DETAILS_MODAL","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","size","curGraphIndex","CHANGE_TAB","data-for","place","effect","nodeML","posX","posY","opacity","shape","color","backgroundColor","borderColor","borderWidth","actionHistory","graphml","xmlns","for","graph","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphUndoRedo","props","methodsMapped","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","actionIdentity","sequencify","push","hash","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","obj","Object","r","keys","sort","k","PropFromArr","arr","flatenArr","flatArr","constructor","o","p","filter","s","t","propFromArr","property","any","S","A","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parseActionML","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","parseActionHistory","postGraph","reject","fetch","ec","headers","method","body","then","text","catch","GraphServer","config","setServerID","IS_WORKFLOW_ON_SERVER","Boolean","getGraphML","set","graphXML","setGraphML","alert","latestHash","status","forcePullFromServer","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","content","parseAction","setProjectName","clearTimeout","setTimeout","graphMLParser","graphObject","loadGraphFromLocalStorage","loadJson","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","loaded","useState","instance","setInstance","ref","useRef","setConatinerDim","elToAss","current","offsetWidth","offsetHeight","history","pushState","path","process","setCurStatus","SET_CUR_INSTANCE","addEventListener","MyGraph","initialiseNewGraph","zIndex","display","GraphComp","loadedFromStorage","setLoadedFromStorage","loadedFromURL","setLoadedFromURL","allSavedGs","ADD_GRAPH_BULK","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","replaceState","title","pathname","urlParms","serverIDIndex","localIDIndex","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","icon","FaPlus","action","hotkey","FaFileImport","FaSave","fn","pushToServer","prompt","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","FiChevronUp","isWorkflowOnServer","FiChevronDown","pullFromServer","FiChevronsUp","forcePushToServer","FiChevronsDown","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","ServerActions","inputRef","isReadOnly","setIsReadOnly","readOnly","edit","focus","Header","actions","replace","handler","shortcut","setHotKeys","ProjectDetails","curGraph","useCallback","newGraphModal","editDetailsModal","setProjAuthorName","SET_AUTHOR","authorNameE","openExisting","loadFromServer","NewWrokflow","placeholder","SET_NEW_GRAPH_MODAL","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","SET_FILE_REF","getElementsByTagName","cc","classList","dragEvent","dataTransfer","accept","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","res","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","useReducer","reducer","initialState","Settings","History","GraphCompDetails","Model_Close","overflow","GraphWorkspace","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","ADD_GRAPH_INSTANCE","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","foundi","newState"],"mappings":"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","file":"static/js/main.9cafea2c.chunk.js","sourcesContent":["import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        const projectName = e.target.files[0]\n            .name.split('.').slice(0, -1).join('.').split('-')[0];\n        fr.onload = (x) => {\n            setState({\n                type: T.ADD_GRAPH,\n                payload: { projectName, graphML: x.target.result },\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, actionHistory, serverID,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid, authorName = this.superState.authorName) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid\n            + authorName;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            authorName,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        authorName, equivalent, inverse, tid,\n    }) => ({\n        authorName: authorName[0],\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, serverID } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID,\n        });\n    });\n});\nexport default parser;\n","export default {\n    baseURL: 'http://localhost:8000/',\n    getGraph: (id) => `workflow/${id}`,\n    postGraph: 'workflow',\n    updateGraph: (id) => `workflow/${id}`,\n    forceUpdateGraph: (id) => `workflow/${id}?force=true`,\n};\n\n/*\ngetGraph Route Specs:\n    Method: GET\n    Response:\n        Body: json {writeTime: '23435444.54545', id: 'graphid'}\n        BodyType: application/json\n        Header: X-Write-Time: 'writeTime'\n\npostGraph Route Specs:\n    Method: POST\n    Request:\n        Body: graphML data\n        BodyType: application/xml\n    Response:\n        Body: json {writeTime: '23435444.54545', id: 'graphid'}\n        BodyType: application/json\n\nupdateGraph:\n    Method: POST\n    Request:\n        Header: X-Write-Time: 'writeTime'\n        Body: graphML data\n        BodyType: application/xml\n    Response:\n        Body: newWriteTime\n\nforceUpdateGraph:\n    Force update the graph without validating the write time.\n    Method: POST\n    Request:\n        Body: graphML data\n        BodyType: application/xml\n    Response:\n        Body: newWriteTime\n*/\n","import ec from './config';\n\nfunction getGraph(serverID) {\n    return new Promise((resolve, reject) => {\n        fetch(`${ec.baseURL + ec.getGraph(serverID)}`).then((x) => {\n            resolve(x.text());\n        }).catch((e) => reject(e));\n    });\n}\n\nfunction getGraphWithHashCheck(serverID, latestHash) {\n    return new Promise((resolve, reject) => {\n        fetch(`${ec.baseURL + ec.getGraph(serverID)}`, {\n            headers: {\n                'X-Latest-Hash': latestHash,\n            },\n        }).then((x) => {\n            if (x.status === 200) resolve(x.text());\n            else reject(x.text());\n        }).catch((e) => reject(e));\n    });\n}\n\nfunction postGraph(graphml) {\n    return new Promise((resolve, reject) => {\n        fetch(`${ec.baseURL + ec.postGraph}/`, {\n            headers: {\n                'Content-Type': 'application/xml',\n            },\n            method: 'POST',\n            body: graphml,\n\n        }).then((x) => {\n            resolve(x.text());\n        }).catch((e) => reject(e));\n    });\n}\n\nfunction updateGraph(serverID, graphml) {\n    return new Promise((resolve, reject) => {\n        fetch(ec.baseURL + ec.updateGraph(serverID), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml',\n            },\n            body: graphml,\n        }).then((x) => {\n            resolve(x.text());\n        }).catch((e) => reject(e));\n    });\n}\n\nfunction forceUpdateGraph(serverID, graphml) {\n    return new Promise((resolve, reject) => {\n        fetch(ec.baseURL + ec.forceUpdateGraph(serverID), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml',\n            },\n            body: graphml,\n        }).then((x) => {\n            resolve(x.text());\n        }).catch((e) => reject(e));\n    });\n}\n\nexport {\n    getGraph, postGraph, updateGraph, forceUpdateGraph, getGraphWithHashCheck,\n};\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\nimport {\n    postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n} from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n\n    pushToServer() {\n        if (this.serverID) {\n            updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n            });\n        } else {\n            postGraph(this.getGraphML()).then((serverID) => {\n                this.set({ serverID });\n                this.cy.emit('graph-modified');\n            });\n        }\n    }\n\n    forcePushToServer() {\n        if (this.serverID) {\n            forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n            });\n        } else {\n            postGraph(this.getGraphML()).then((serverID) => {\n                this.set({ serverID });\n            });\n        }\n    }\n\n    forcePullFromServer() {\n        if (this.serverID) {\n            getGraph(this.serverID).then((graphXML) => {\n                this.setGraphML(graphXML);\n            });\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Not on server');\n        }\n    }\n\n    pullFromServer() {\n        if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n        if (this.serverID) {\n            getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n                this.setGraphML(graphXML);\n            }).catch(() => {\n\n            });\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Not on server');\n        }\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, authorName, hash,\n        }) => ({\n            tid,\n            authorName,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid, authorName,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid, authorName);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport path from 'path';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active, loaded,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setConatinerDim = (element) => {\n        const elToAss = element;\n        elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    useEffect(() => {\n        if (active && loaded && serverID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n        } else if (active && loaded && graphID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n        }\n    }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setConatinerDim(ref.current);\n            window.addEventListener('resize', () => setConatinerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\nlet message = { ok: true, err: null };\nnodes.forEach((n) => {\n    if (n.id !== node.id && n.label === node.label) {\n        message = {\n            ok: false,\n            err: 'Node with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n    const [loadedFromURL, setLoadedFromURL] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        setLoadedFromStorage(true);\n    }, []);\n\n    useEffect(() => {\n        if (!loadedFromStorage) return;\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(window.atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n        }\n        const urlParms = window.location.pathname.split('/');\n        const serverIDIndex = urlParms.indexOf('s');\n        const localIDIndex = urlParms.indexOf('l');\n        if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n            const serverID = urlParms[serverIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n        }\n        if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n            const graphID = urlParms[localIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n        }\n        setLoadedFromURL(true);\n    }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        loaded={loadedFromURL}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n    FaHistory,\n} from 'react-icons/fa';\n\nimport {\n    FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n    viewHistory,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => state.curGraphInstance && state.curGraphInstance.pushToServer(), name: 'Save on Server' },\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: true,\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Push',\n        icon: FiChevronUp,\n        action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n        active: state.curGraphInstance && state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Pull',\n        icon: FiChevronDown,\n        action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n        active: state.curGraphInstance && state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Force Push',\n        icon: FiChevronsUp,\n        action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n        active: state.curGraphInstance && state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Force Pull',\n        icon: FiChevronsDown,\n        action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n        active: state.curGraphInstance && state.isWorkflowOnServer,\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { MdEdit, MdDone } from 'react-icons/md';\nimport './serverActions.css';\n\nconst ServerActions = () => {\n    const inputRef = useRef();\n    const [isReadOnly, setIsReadOnly] = useState(true);\n    useEffect(() => { inputRef.current.readOnly = isReadOnly; }, [isReadOnly]);\n    const edit = () => {\n        setIsReadOnly(false);\n        inputRef.current.focus();\n    };\n    const save = () => {\n        setIsReadOnly(true);\n    };\n    return (\n        <div className=\"server-actions-container\">\n            <input className=\"server-id\" readOnly ref={inputRef} />\n            {\n                isReadOnly\n                    ? (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={edit}\n                            onClick={edit}\n                            tabIndex={0}\n                        >\n                            <MdEdit size=\"25\" />\n                        </div>\n                    )\n                    : (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={save}\n                            onClick={save}\n                            tabIndex={0}\n                        >\n                            <MdDone size=\"25\" />\n                        </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default ServerActions;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\nimport ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [authorName, setAuthorName] = useState('');\n    const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const newGraphModal = superState.newGraphModal || superState.graphs.length === 0;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    const setProjAuthorName = (a) => {\n        setAuthorName(a);\n        dispatcher({\n            type: T.SET_AUTHOR,\n            payload: a,\n        });\n    };\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n        } else setProjectName('');\n    }, [superState.authorName, superState.editDetailsModal, curGraph]);\n    useEffect(() => {\n        if (superState.authorName) setAuthorName(superState.authorName);\n        else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setProjAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        setProjAuthorName(authorName);\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    const loadFromServer = () => {\n        dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    };\n    const NewWrokflow = () => (\n        <>\n            <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button>\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWrokflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <div className=\"docStr\">{parseMD(docString)}</div>\n            <br />\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, { target: e.dataTransfer });\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n};\n\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    authorName: '',\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n\n    component: null,\n    instance: null,\n    id: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        return { ...state, authorName: action.payload };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}