{"version":3,"sources":["config/defaultStyles.js","config/cytoscape-style.js","config/cytoscape-options.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","reducer/initialState.js","reducer/reducer.js","graph-builder/local-storage-manager.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-actions.js","graph-builder/graph-component.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calc-boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["NodeStyle","width","height","shape","opacity","EdgeStyle","style","selector","content","label","color","backgroundColor","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","ColorBox","setColor","React","useState","visible","setVisible","role","tabIndex","className","onClick","onKeyDown","ev","key","background","display","onChangeComplete","x","hex","DefParentStyle","minHeight","justifyContent","alignItems","padding","DefNodeStyle","border","whiteSpace","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","borderColor","borderWidth","textValign","textHalign","borderRadius","ParentStyle","setStyle","prop","onSubmit","htmlFor","type","name","value","checked","onChange","ref","required","placeholder","e","target","slice","Math","min","step","max","DefEdgeStyle","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","eleSelected","drawModeOn","undoEnabled","redoEnabled","graphs","curGraphIndex","initialGraphState","projectDetails","projectName","author","set","component","instance","reducer","state","action","T","eleSelectedPayload","payload","id","newState","index","length","filter","i","map","g","setProjectDetail","localStorageManager","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","Set","parse","atob","saveAllgs","Array","from","this","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","remove","delete","removeItem","has","add","getAllGraphs","GraphLoadSave","ParentClass","autoSaveIntervalId","format","saveAs","cy","png","getName","nodeID","getById","edgeID","graph","nodes","edges","forEach","shouldNodeBeSaved","all","json","nodeJson","position","getStyle","push","edge","shouldEdgeBeSaved","edgeJson","source","getRealSourceId","str","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","dispatcher","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","on","round","zoom","fit","v","elements","confirm","GraphComponent","getTid","Date","getTime","allNodes","$","start","y","found","nodePos","getPos","tid","group","setNodeEvent","addAction","actionName","GA","parameters","el","allStyles","styles","isNode","Object","entries","p","isEdge","shouldUpdateLabel","val","connectedEdges","deleteEdge","removed","jsonEd","deleteNode","pos","emit","dim","setPos","GraphUndoRedo","GUR","methodsMapped","args","bind","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","inverse","equivalent","splice","curTid","performAction","CoreGraph","superState","regesterEvents","saveLocalStorage","getElementById","els","every","ids","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","w","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","getClosestRect","S1","S2","TailoredGraphBuilder","juncNodeId","incomers","juncNode","unselectify","connectedNodes","TG","calJuncNodePos","sourceID","targetID","ed","undefined","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","edgeLabel","edgeStyle","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","deleteElem","parNode","meanNbrPosition","setOfPos","posStr","GraphOption","marks","ZoomComp","myGraph","getZoom","zoomValue","setZoomValue","setOnZoom","resetZoom","fitZoom","setZoom","included","getGraphFun","createNode","setState","editElement","getLabel","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","result","readAsText","newProject","clearAll","undo","redo","TabBar","closeTab","stopPropagation","editCur","useEffect","hotkeys","event","preventDefault","document","click","querySelector","GraphComp","props","graphContainerRef","createRef","element","current","offsetWidth","offsetHeight","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","css","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","MyGraph","edgehandles","preview","handlePosition","complete","a","b","loadGraphFromLocalStorage","initialiseNewGraph","use","Konva","graphId","flex","flexDirection","zIndex","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","ParentModal","toolbarList","text","icon","FaPlus","active","hotkey","FaFileImport","FaSave","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","accept","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","keys","split","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","setProjectDetails","app","useReducer","GraphCompDetails","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b925b07.chunk.js","sourcesContent":["const NodeStyle = {\n    width: '100px',\n    height: '50px',\n    shape: 'rectangle',\n    opacity: 1,\n    'background-color': '#e0f2f1',\n    'border-color': '#000',\n    'border-width': '1px',\n    'text-valign': 'center',\n    'text-halign': 'center',\n};\n\nconst EdgeStyle = {\n    'target-arrow-shape': 'triangle',\n    width: '1px',\n    'line-color': '#000',\n    'target-arrow-color': '#000',\n};\n\nexport { NodeStyle, EdgeStyle };\n","import { NodeStyle, EdgeStyle } from './defaultStyles';\n\nconst style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            ...NodeStyle,\n            'z-index': 100,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            ...EdgeStyle,\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'z-index': 999,\n            'text-background-opacity': 1,\n            color: '#000',\n            'text-background-color': '#fff',\n            'text-background-shape': 'roundrectangle',\n            'text-border-color': '#fff',\n            'text-border-width': 2,\n            'text-border-opacity': 1,\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'red',\n            'z-index': 1000,\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            'overlay-color': '#000',\n            'overlay-opacity': 0.1,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst ColorBox = ({ color, setColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker color={color} onChangeComplete={(x) => setColor(x.hex)} />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, { useCallback } from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefNodeStyle = {\n    border: '1px solid black',\n    width: '100px',\n    height: '50px',\n    backgroundColor: '#888',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n};\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const NodeStyle = {\n        ...DefNodeStyle,\n        backgroundColor: data.style['background-color'],\n        borderColor: data.style['border-color'],\n        borderWidth: data.style['border-width'],\n        textValign: data.style['text-valign'],\n        textHalign: data.style['text-halign'],\n        width: data.style.width,\n        height: data.style.height,\n        opacity: data.style.opacity,\n        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div style={ParentStyle}><div style={NodeStyle}>{labelAllowed ? data.label : ''}</div></div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.min(500, e.target.value)}px` })}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height.slice(0, -2)}\n                    onChange={(e) => setStyle({ height: `${Math.min(200, e.target.value)}px` })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['background-color']}\n                    setColor={(color) => setStyle({ 'background-color': color })}\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style['border-color']}\n                    setColor={(color) => setStyle({ 'border-color': color })}\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style['border-width'].slice(0, -2)}\n                    onChange={(e) => setStyle({ 'border-width': `${Math.min(30, e.target.value)}px` })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst DefParentStyle = {\n    height: '100px',\n    minHeight: '100px',\n    width: 'auto',\n    background: 'aliceblue',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n};\n\nconst DefEdgeStyle = {\n    border: 'none',\n    width: '240px',\n    height: '2px',\n    backgroundColor: '#000',\n    display: 'inline-block',\n};\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const EdgeStyle = {\n        ...DefEdgeStyle,\n        backgroundColor: data.style['line-color'],\n        height: data.style.width,\n    };\n    const ParentStyle = { ...DefParentStyle, height: data.style.height };\n    const setStyle = (prop) => {\n        setData({\n            ...data,\n            style:\n            { ...data.style, ...prop },\n        });\n    };\n    const inputRef = useCallback((node) => node && node.focus(), []);\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div style={ParentStyle}>\n                <div style={EdgeStyle} />\n                <Triangle size={data.style.width.slice(0, -2)} color={data.style['line-color']} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width.slice(0, -2)}\n                    onChange={(e) => setStyle({ width: `${Math.max(0, Math.min(20, e.target.value))}px` })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style['line-color']}\n                    setColor={(color) => setStyle({ 'line-color': color, 'target-arrow-color': color })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","const getSet = () => {\n    if (!window.localStorage.getItem('allGraphs')) {\n        window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem('allGraphs'))));\n};\n\nconst localStorageManager = {\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem('allGraphs')) {\n            window.localStorage.setItem('allGraphs', window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem('allGraphs')));\n    },\n};\nexport default localStorageManager;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor() {\n        super();\n        this.autoSaveIntervalId = null;\n    }\n\n    downloadImg(format) {\n        if (format === 'PNG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.png(), `${this.getName()}-DHGWorkflow.jgp`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = { nodes: [], edges: [], projectDetails: this.projectDetails };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk() {\n        const str = JSON.stringify(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${this.getName()}-DHGWorkflow.json`);\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { id: node.id });\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().remove();\n        return true;\n    }\n};\n\nexport default GraphCanvas;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n};\n","import { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport GA from './graph-actions';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor() {\n        super();\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                id, label, type, ...data,\n            },\n            style,\n            position,\n        });\n        this.setNodeEvent(node);\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    addEdge(source, target, label, style = {}, type = 'ordin', id, tid = this.getTid()) {\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id,\n            },\n            style,\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    getStyle(id) {\n        const el = this.getById(id);\n        const allStyles = el.style();\n        const styles = {};\n        if (el.isNode()) Object.entries(NodeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        if (el.isEdge()) Object.entries(EdgeStyle).forEach((p) => { styles[p[0]] = allStyles[p[0]]; });\n        return styles;\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).style(style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        this.getById(id).style('height', dim.height);\n        this.getById(id).style('width', dim.width);\n        this.setPos(id, pos);\n    }\n};\n\nexport default GraphComponent;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor() {\n        super();\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\n// import GraphComponent from './graph-component';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\n\nconst CoreGraph = (ParentClass) => class extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails) {\n        super();\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.regesterEvents();\n        this.saveLocalStorage();\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.saveLocalStorage();\n    }\n\n    setNodeEvent() { return this; }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('add remove move style data free', '[type]', this.saveLocalStorage.bind(this));\n        this.cy.on('grab', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.style().height);\n            node.scratch('width', node.style().width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.style().height, width: node.style().width },\n                { ...node.position() },\n            );\n        });\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n    getClosestRect(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => (C.x - x) * (P.y - y) - (C.y - y) * (P.x - x));\n        let x;\n        let y;\n        const [m, c] = this.getEq(P, C);\n        const D = [ // To point to center\n            [(C.y - h - c) / m, C.y - h],\n            [C.x + w, m * (C.x + w) + c],\n            [C.x - w, m * (C.x - w) + c],\n            [(C.y + h - c) / m, C.y + h],\n        ];\n        // const D = [\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y - h],\n        //     [C.x + w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [C.x - w, Math.min(C.y + h, Math.max(C.y - h, P.y))],\n        //     [Math.min(C.x + w, Math.max(C.x - w, P.x)), C.y + h],\n        // ];\n\n        if (S1 <= 0 && S2 <= 0) [,,, [x, y]] = D;\n        else if (S1 >= 0 && S2 <= 0) [, [x, y]] = D;\n        else if (S1 >= 0 && S2 >= 0) [[x, y]] = D;\n        else if (S1 <= 0 && S2 >= 0) [,, [x, y]] = D;\n\n        return x && y ? { x, y } : P;\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calc-boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('node').forEach((node) => setOfPos.add(JSON.stringify(node.position())));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return meanNbrPosition;\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parseInt(parNode.style().width.slice(0, -2), 10) / 2,\n            parseInt(parNode.style().height.slice(0, -2), 10) / 2,\n            parNode.style().shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    setNodeEvent(node) {\n        node.on('drag style moved', () => {\n            node.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdge(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            juncNode.data('edgeStyle'),\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.style();\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            parseInt(sourceNodeStyle.width.slice(0, -2), 10) / 2,\n            parseInt(sourceNodeStyle.height.slice(0, -2), 10) / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { 'background-color': style['line-color'] },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        super.addEdge(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, tid = this.getTid()) {\n        const sourceNode = this.getById(sourceID);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid),\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { 'background-color': style['line-color'] }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            getGraphFun(state).addNode(label, style);\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            const graphContent = JSON.parse(x.target.result);\n            const id = new Date().getTime();\n            localStorageManager.save(id, graphContent);\n            setState({\n                type: T.ADD_GRAPH,\n                payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {' - '}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.createRef();\n    const { dispatcher, superState } = props;\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        // eslint-disable-next-line no-param-reassign\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        // eslint-disable-next-line no-param-reassign\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                if (node.data('type') !== 'special') node.css('width', width);\n            },\n            setHeight(node, height) {\n                if (node.data('type') !== 'special') node.css('height', height);\n            },\n            isNoResizeMode(node) { return node.data('type') === 'special'; },\n            isNoControlsMode(node) { return node.data('type') === 'special'; },\n        });\n\n        cy.gridGuide({ snapToGridOnRelease: false });\n        const myGraph = new (MyGraph(Object))(id, cy, dispatcher, superState, projectDetails);\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n        // console.log(superState.graphs);\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        localStorageManager.getAllGraphs().forEach((graphId) => {\n            dispatcher({\n                type: T.ADD_GRAPH,\n                payload: {\n                    id: graphId,\n                    projectDetails: { projectName: '', author: '', set: true },\n                },\n            });\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            setTimeout(() => {\n                setCurClass('');\n            }, 20);\n        } else {\n            setCurClass('closing');\n            setTimeout(() => {\n                setIsOpen(false);\n            }, 400);\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        cb(data.label, data.style);\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        closeModal();\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","import {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'ctrl+g',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'ctrl+o',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveAction,\n        active: true,\n        hotkey: 'ctrl+s',\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'ctrl+backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'ctrl+z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'ctrl+y,ctrl+shift+z',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'ctrl+e',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'backspace,del,clear,delete',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'menu',\n        text: 'Download',\n        icon: FaDownload,\n        action: downloadImg,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            <MenuItem onClick={() => action('JPG')}>JPG</MenuItem>\n            <MenuItem onClick={() => action('PNG')}>PNG</MenuItem>\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".json\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(),\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport 'rc-switch/assets/index.css';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('ctrl', 'command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        default: return <ActionButton {...props} />;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName);\n            setAuthor(curGraph.projectDetails.author);\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else setProjectDetails({ ...curGraph.projectDetails, set: true });\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}