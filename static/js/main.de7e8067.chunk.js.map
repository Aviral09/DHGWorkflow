{"version":3,"sources":["config/cytoscape-style.js","config/cytoscape-options.js","functions/cytoscape-functions.js","graph.jsx","component/Header.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["style","selector","width","height","shape","content","label","opacity","backgroundColor","options","zoomingEnabled","userZoomingEnabled","cyFun","cy","this","window","cyx","name","type","position","sid","data","id","Date","getTime","console","log","add","group","source","target","color","juncNodeId","$","incomers","filter","juncNode","parNode","automove","nodesMatching","reposition","dragWith","node","pos","P","h","w","A","y","x","B","Math","min","max","arr","abs","sort","a","b","when","src","dest","edge","edgeName","edgeColor","sourceEndpoint","destid","srcid","tid","prompt","c","hex","floor","random","toString","String","substr","askColor","addNode","adE2","addAutoMove","getRealNode","remove","GraphComp","cytoscape","use","edgehandles","cyOptions","container","document","getElementById","setCy","cye","preview","handlePosition","complete","addEdge","addTestData","React","Component","ActionButton","Icon","text","action","active","role","tabIndex","className","onClick","onKeyDown","ev","key","size","TextBox","children","fontSize","Vsep","Hsep","Space","Header","title","dummyAction","n","CyFun","alert","app","FaPlus","FaEdit","FaFileImport","FaSave","FaUndo","FaRedo","FaTrash","ImZoomOut","ImZoomIn","BiReset","FaDownload","FaFileExport","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de7e8067.chunk.js","sourcesContent":["const style = [\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            width: 100,\n            height: 50,\n            shape: 'rectangle',\n            content: 'data(name)',\n            'background-color': '#fff',\n            'border-color': '#000',\n            'border-width': 3,\n            'text-valign': 'center',\n            'text-halign': 'center',\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle',\n            'border-color': '#000',\n            'background-color': '#fff',\n            width: 4,\n            'line-color': '#000',\n            'target-arrow-color': '#000',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            width: 3,\n            'edge-text-rotation': 'autorotate',\n            'text-margin-y': '10px',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            'background-color': '#f00',\n            height: 20,\n            width: 20,\n            opacity: 0.5,\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 10,\n            height: 10,\n            backgroundColor: 'red',\n        },\n    },\n\n    // {\n    //     selector: '.eh-ghost-edge',\n    //     style: {\n    //         'background-color': 'rgba(0,255,255,0.5)',\n    //         'line-color': '#0f0',\n    //         'target-arrow-color': '#0f0',\n    //     },\n    // },\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: false,\n    userZoomingEnabled: false,\n};\n\nexport default options;\n","/* eslint-disable no-alert */\n/* eslint-disable no-console */\nfunction askColor() {\n    function c() {\n        const hex = Math.floor(Math.random() * 256).toString(16);\n        return (`0${String(hex)}`).substr(-2); // pad with zero\n    }\n    return `#${c()}${c()}${c()}`;\n}\n\nclass CyFun {\n    setCy(cy) {\n        this.cy = cy;\n        window.cyx = cy;\n    }\n\n    addTestData() {\n        return this;\n        // this.addNode('A', {}, 'ordin', { x: 100, y: 100 }, 1);\n        // this.addNode('B', {}, 'ordin', { x: 500, y: 100 }, 2);\n        // this.adE2(1, 2, 'ordin', '#f0f');\n    }\n\n    addNode(name, style, type, position, sid, data) {\n        const id = sid || (new Date()).getTime();\n        console.log(name, type, id);\n        this.cy.add({\n            group: 'nodes',\n            data: {\n                id, name, type, ...data,\n            },\n            style,\n            position,\n        });\n    }\n\n    adE2(source, target, name, color, style = {}) {\n        this.cy.add({\n            group: 'edges',\n            data: { source, target, label: name },\n            style: { ...style, 'line-color': color, 'target-arrow-color': color },\n        });\n    }\n\n    getRealNode(juncNodeId) {\n        return this.cy.$(`#${juncNodeId}`).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode, parNode) {\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition: 'drag',\n            dragWith: parNode,\n        });\n        this.cy.automove({\n            nodesMatching: juncNode,\n            reposition(node) {\n                const pos = node.position();\n                const P = parNode.position();\n                const [h, w] = [parNode.height(), parNode.width()];\n                const A = { y: P.y + h / 2, x: P.x + w / 2 };\n                const B = { y: P.y - h / 2, x: P.x - w / 2 };\n                pos.x = Math.min(A.x, Math.max(pos.x, B.x));\n                pos.y = Math.min(A.y, Math.max(pos.y, B.y));\n                if (pos.x < A.x && pos.y < A.y && pos.x > B.x && pos.y > B.y) {\n                    const arr = [[Math.abs(pos.x - A.x), 'X', A.x],\n                        [Math.abs(pos.x - B.x), 'X', B.x],\n                        [Math.abs(pos.y - A.y), 'Y', A.y], [Math.abs(pos.y - B.y), 'Y', B.y]];\n                    arr.sort((a, b) => a[0] - b[0]);\n                    if (arr[0][1] === 'X') { [[, , pos.x]] = arr; }\n                    if (arr[0][1] === 'Y') { [[, , pos.y]] = arr; }\n                }\n                return pos;\n            },\n            when: 'matching',\n        });\n    }\n\n    addEdge(src, dest, edge) {\n        const position = edge.sourceEndpoint();\n        const destid = dest.data('id');\n        let srcid = src.data('id');\n        let edgeName;\n        let edgeColor;\n        if (src.data('type') !== 'special') {\n            const tid = (new Date()).getTime();\n            edgeName = prompt();\n            edgeColor = askColor();\n            this.addNode('', { 'background-color': edgeColor }, 'special', position, tid, { edgeName, edgeColor });\n            this.adE2(srcid, tid, edgeName, edgeColor, { 'target-arrow-shape': 'none' });\n            this.addAutoMove(this.cy.$(`#${tid}`), this.cy.$(`#${srcid}`));\n            srcid = tid;\n            this.getRealNode(tid);\n        } else {\n            edgeName = src.data('edgeName');\n            edgeColor = src.data('edgeColor');\n        }\n        edge.remove();\n        this.adE2(srcid, destid, edgeName, edgeColor);\n    }\n}\nconst cyFun = new CyFun();\nexport default cyFun;\n","/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport automove from 'cytoscape-automove';\nimport cyOptions from './config/cytoscape-options';\nimport cyFun from './functions/cytoscape-functions';\n\nclass GraphComp extends React.Component {\n    componentDidMount() {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'automove') !== 'function') {\n            cytoscape.use(automove);\n        }\n        this.cy = cytoscape({ ...cyOptions, container: document.getElementById('cy') });\n        cyFun.setCy(this.cy);\n        window.cye = this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            complete: (a, b, c) => cyFun.addEdge(a, b, c),\n        });\n        cyFun.addTestData();\n    }\n\n    render() {\n        return (\n            <div style={{ height: '100%', width: '100%' }} id=\"cy\" />\n        );\n    }\n}\n\nexport default GraphComp;\n","import React from 'react';\nimport './header.css';\n\nconst ActionButton = ({\n    Icon, text, action, active,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={0}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === 13 && action()}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nconst Header = ({ children, title }) => (\n    <header className=\"header\">\n        <section className=\"middle titlebar\">\n            {`${title} - DHGWorkflow Editor`}\n        </section>\n        <section className=\"toolbar\">\n            {children}\n        </section>\n        <Hsep />\n    </header>\n\n);\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React from 'react';\nimport './App.css'; import { BiReset } from 'react-icons/bi';\nimport { ImZoomOut, ImZoomIn } from 'react-icons/im';\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileExport, FaFileImport, FaPlus, FaDownload, FaEdit,\n} from 'react-icons/fa';\nimport GraphComp from './graph';\nimport CyFun from './functions/cytoscape-functions';\n\nimport {\n    Header, ActionButton, Vsep, Space, TextBox,\n} from './component/Header';\n// eslint-disable-next-line\nconst dummyAction = (n) => n.action?CyFun.addNode(prompt(),{},'ordin',{ x: 100, y: 100 }):alert('Dummy Action activated.');\n\nconst app = () => (\n    <div>\n        <Header title=\"MyGraph\">\n            <ActionButton Icon={FaPlus} text=\"Node\" active action={() => dummyAction({ action: 1 })} />\n            <ActionButton Icon={FaEdit} text=\"Edit\" active action={dummyAction} />\n            <Vsep />\n            <ActionButton Icon={FaFileImport} text=\"Open\" active action={dummyAction} />\n            <ActionButton Icon={FaSave} text=\"Save\" active action={dummyAction} />\n            <Vsep />\n            <ActionButton Icon={FaUndo} text=\"Undo\" active action={dummyAction} />\n            <ActionButton Icon={FaRedo} text=\"Redo\" action={dummyAction} />\n            <Vsep />\n            <ActionButton Icon={FaTrash} text=\"Delete\" action={dummyAction} />\n            <Vsep />\n            <ActionButton Icon={ImZoomOut} text=\"In\" active action={dummyAction} />\n            <ActionButton Icon={ImZoomIn} text=\"Out\" active action={dummyAction} />\n            <ActionButton Icon={BiReset} text=\"Reset\" active action={dummyAction} />\n            <TextBox>100%</TextBox>\n            <Space />\n            <ActionButton Icon={FaDownload} text=\"JPG\" active action={dummyAction} />\n            <ActionButton Icon={FaDownload} text=\"PNG\" active action={dummyAction} />\n            <Vsep />\n            <ActionButton Icon={FaFileExport} text=\"Export\" />\n        </Header>\n        <section className=\"body\">\n            <div className=\"graph-container\">\n                <GraphComp />\n            </div>\n        </section>\n    </div>\n);\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}