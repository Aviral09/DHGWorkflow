{"version":3,"sources":["graph-builder/graph-actions.js","graph-builder/graph-component.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/local-storage-manager.js","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-load-save.js","graph-builder/graph-canvas.js","graph-builder/graph-undo-redo.js","graph-builder/core-graph-builder.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","component/ZoomSetter.jsx","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","config/defaultValidators.js","graph.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","reducer/actionType.js","component/modals/ColorBox.jsx","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["ADD_NODE","ADD_EDGE","UPDATE_NODE","UPDATE_EDGE","UPDATE_DATA","DEL_NODE","DEL_EDGE","SET_POS","SET_DIM","SET_BENDW","GraphComponent","ParentClass","args","nodeValidator","edgeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","parameters","sourceId","targetId","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","bendDistance","d","has","rawStyle","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","source","target","parseBendinDW","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","getStyle","key","val","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","setEdgeNodeValidator","eval","map","getRealSourceId","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","selector","overlayOpacity","content","zIndex","shape","opacity","backgroundColor","borderColor","borderWidth","textValign","textHalign","curveStyle","targetArrowShape","lineColor","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","color","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","display","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","minZoom","maxZoom","localStorageManager","ALL_GRAPHS","allgs","window","localStorage","getItem","setItem","btoa","JSON","stringify","parse","atob","getSet","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","nodeML","posX","posY","graphML","graphml","xmlns","for","graph","edgedefault","projectName","author","edgeML","configuration","lineWidth","sx","sy","tx","ty","builder","G","edg","thickness","X","projectDetails","xml2js","Builder","buildObject","GraphLoadSave","autoSaveIntervalId","on","saveLocalStorage","bind","format","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","push","shouldEdgeBeSaved","edgeJson","getCoordinate","fileName","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","addNode","addEdge","SET_PROJECT_DETAILS","payload","autoSaveTimeoutId","clearTimeout","setTimeout","loadJson","GraphCanvas","reset","removeListener","setZoomUI","Math","round","zoom","fit","v","elements","confirm","el","deleteElem","GraphUndoRedo","props","GUR","methodsMapped","setBendWightDist","actionArr","curActionIndex","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","SET_UNDO","SET_REDO","curTid","performAction","CoreGraph","superState","bendNode","classes","regesterEvents","getElementById","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addPositionChange","addDimensionChange","addClass","evt","ev","hasClass","CG","getBendEdgePoint","DW","addBendChange","removeClass","parseFloat","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","c","A","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TG","calJuncNodePos","juncNodeId","incomers","filter","unselectify","sourceID","targetID","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","juncNodes","outgoers","addEdgeWithoutJuncNode","junctionNode","updateData","updateNode","n1","n2","n","r","union","c1","c2","parNode","meanNbrPosition","setOfPos","posStr","size","GraphOption","marks","ZoomComp","myGraph","graphs","curGraphIndex","instance","useState","getZoom","zoomValue","setZoomValue","setOnZoom","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","value","setZoom","included","PropFromArr","obj","arr","flatenArr","flatArr","constructor","o","p","Object","keys","s","t","propFromArr","split","property","any","S","F","parseNode","parseProps","parseInt","parseEdge","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","set","Boolean","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","editElement","eleSelectedPayload","Model_Open_Update_Node","labelAllowed","getLabel","Model_Open_Update_Edge","retMessage","updateEdge","downloadImg","saveAction","saveToDisk","readFile","files","fr","FileReader","onload","graphMLParser","result","then","ADD_GRAPH","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","openSettingModal","SET_SETTING_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","data-tip","CHANGE_TAB","data-for","place","effect","originalEdge","GraphComp","graphContainerRef","useRef","setConatinerDim","element","current","offsetWidth","offsetHeight","addEventListener","childNodes","classList","contains","cytoscape","cyOptions","container","nodeEditing","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","gridGuide","snapToGridOnRelease","zoomDash","panGrid","MyGraph","edgehandles","preview","handlePosition","handleNodes","complete","loadGraphFromLocalStorage","initialiseNewGraph","ADD_GRAPH_INSTANCE","index","setCurStatus","use","Konva","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","history","replaceState","title","pathname","allSavedGs","graphId","ADD_GRAPH_BULK","flex","flexDirection","background","ref","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","active","hotkey","FaFileImport","FaSave","fn","name","prompt","FaRegTimesCircle","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaRegSun","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","createRef","accept","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","k","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjectName","setAuthor","inputRef","useCallback","focus","setProjectDetails","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","readOnly","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","app","useReducer","reducer","initialState","Settings","GraphCompDetails","Model_Close","overflow","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","colors","light","dark","ColorBox","setColor","visible","setVisible","floor","random","onChangeComplete","hex","NodeDetails","submit","textRef","widthSet","setWidthSet","setStyle","prop","borderRadius","padding","htmlFor","step","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","RadioBtn","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState","setProjectDetail"],"mappings":"mHAAe,KACXA,SAAU,WACVC,SAAU,WACVC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,SAAU,WACVC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTC,UAAW,c,42CCNTC,eAAiB,SAAjBA,eAAkBC,aAAD,2YACnB,cAAsB,IAAD,iNAANC,EAAM,yBAANA,EAAM,uBACjB,yCAASA,KACGC,cAAqCD,EAFhC,GAEU,EAAKE,cAAiBF,EAFhC,GAGjB,EAAKG,OAAS,kBAAM,IAAIC,MAAOC,WAHd,EADF,uMAOnB,WAII,IAHA,IAAMC,EAAWC,KAAKC,GAAGC,EAAE,QACrBC,EAAQ,CAAEC,EAAG,IAAKC,EAAG,KACvBC,GAAQ,EACLA,GAAO,CACVA,GAAQ,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,GAAK,EAAG,CACzC,IAAME,EAAUV,EAASQ,GAAGG,WAC5BJ,EAAQA,GAAUG,EAAQL,IAAMD,EAAMC,GAAKK,EAAQJ,IAAMF,EAAME,EAE/DC,IACAH,EAAMC,GAAK,GACXD,EAAME,GAAK,IAGnB,OAAOF,IAtBQ,qBAyBnB,SAAQQ,EAAOC,GAAsF,IAA/EC,EAA8E,uDAAvE,QAASH,EAA8D,uDAAnDV,KAAKc,SAAUC,EAAoC,uDAA7B,GAAIC,EAAyB,uCAArBC,EAAqB,uDAAfjB,KAAKJ,SAChFsB,EAAOlB,KAAKC,GAAGkB,IAAI,CACrBC,MAAO,QACPL,KAAK,uVACEA,GADH,IACSC,KAAIL,QAAOE,OAAMD,UAE9BF,aAUJ,OARAV,KAAKqB,UACD,CAAEC,WAAYC,8CAAGrC,SAAUsC,WAAY,CAACN,EAAKF,OAC7C,CACIM,WAAYC,8CAAG1C,SACf2C,WAAY,CAACb,EAAOC,EAAOC,EAAMH,EAAUK,EAAMG,EAAKF,OAE1DC,GAEGC,IAzCQ,kCA4CnB,SAAqBO,EAAUC,GAC3B,OAAO1B,KAAK2B,QAAQF,GAAUG,UAAU5B,KAAK2B,QAAQD,MA7CtC,yBAgDnB,SAAYD,EAAUC,GAClB,IAAMG,EAAQ7B,KAAK8B,qBAAqBL,EAAUC,GAC5CK,EAAQ,IAAIC,IAClBH,EAAMI,SAAQ,SAACC,GACXH,EAAMZ,IAAIe,EAAKnB,KAAK,SAASoB,iBAEjC,IAAK,IAAIC,EAAI,GAAIA,GAAK,GAAI,CACtB,IAAKL,EAAMM,IAAID,GAAI,OAAOA,EAC1B,IAAKL,EAAMM,KAAKD,GAAI,OAAQA,KAxDjB,2BA4DnB,SAAcE,EAAUb,EAAUC,EAAUb,GACxC,GAAa,UAATA,EAAkB,OAAO,uVAAKyB,GAAZ,IAAsBH,aAAc,EAAGI,WAAY,IACzE,GAAID,EAASH,cAAgBG,EAASC,WAAY,OAAOD,EACzD,GAAIA,EAASE,UAAW,CACpB,MAAiBF,EAASE,UAAlBpC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACX,EAAiBoC,iEAAsBC,kBACnC,CAAEtC,IAAGC,KAAKL,KAAK2B,QAAQF,GAAUf,WAAYV,KAAK2B,QAAQD,GAAUhB,YADhE0B,EAAR,EAAQA,EAAGO,EAAX,EAAWA,EAGX,OAAO,uVAAKL,GAAZ,IAAsBH,aAAcC,EAAGG,WAAYI,IAEvD,OAAO,uVAAKL,GAAZ,IAAsBH,aAAcnC,KAAK4C,YAAYnB,EAAUC,GAAWa,WAAY,OAtEvE,8BAyEnB,SAAiBM,EAAQC,EAAQnC,GAAgE,IAAzD2B,EAAwD,uDAA7C,GAAIzB,EAAyC,uDAAlC,QAASG,EAAyB,uCAArBC,EAAqB,uDAAfjB,KAAKJ,SAC5EgB,EAAQZ,KAAK+C,cAAcT,EAAUO,EAAQC,EAAQjC,GACrDqB,EAAOlC,KAAKC,GAAGkB,IAAI,CACrBC,MAAO,QACPL,KAAM,CACF8B,SAAQC,SAAQnC,QAAOE,OAAMG,KAAIJ,WASzC,OANAZ,KAAKqB,UACD,CAAEC,WAAYC,8CAAGpC,SAAUqC,WAAY,CAACU,EAAKlB,OAC7C,CAAEM,WAAYC,8CAAGzC,SAAU0C,WAAY,CAACqB,EAAQC,EAAQnC,EAAOC,EAAOC,EAAMqB,EAAKlB,OACjFC,GAGGiB,IAvFQ,qBA0FnB,SAAQW,EAAQC,EAAQnC,GAAgE,IAAD,OAAxD2B,EAAwD,uDAA7C,GAAIzB,EAAyC,uDAAlC,QAASG,EAAyB,uCAArBC,EAAqB,uDAAfjB,KAAKJ,SACzE,GAAa,UAATiB,GAAoBF,EACpB,OAAOX,KAAKgD,iBAAiBH,EAAQC,EAAQnC,EAAO2B,EAAUzB,EAAMG,EAAIC,GAE5EjB,KAAKiD,WAAW,CACZpC,KAAMqC,wCAAEC,uBACRC,GAAI,SAACC,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAAWT,EAAQC,GAEjE,OADIS,EAAQE,IAAI,EAAKT,iBAAiBH,EAAQC,EAAQO,EAAWC,EAAWzC,EAAMG,EAAIC,GAC/EsC,OAnGA,sBAyGnB,SAASvC,GACL,OAAOhB,KAAK2B,QAAQX,GAAID,KAAK,WA1Gd,sBA6GnB,SAASC,GACL,OAAOhB,KAAK2B,QAAQX,GAAID,KAAK,UAAYf,KAAK2B,QAAQX,GAAID,KAAK,WA9GhD,wBAiHnB,SAAWC,EAAIJ,EAAOD,EAAO+C,GAAyC,IAAtBzC,EAAqB,uDAAfjB,KAAKJ,SACvDI,KAAKqB,UACD,CACIC,WAAYC,8CAAGxC,YACfyC,WAAY,CAACR,EAAIhB,KAAK2D,SAAS3C,GAAKhB,KAAK2B,QAAQX,GAAID,KAAK,SAAU2C,IAExE,CAAEpC,WAAYC,8CAAGxC,YAAayC,WAAY,CAACR,EAAIJ,EAAOD,EAAO+C,IAC7DzC,GAEAyC,GAAmB1D,KAAK2B,QAAQX,GAAID,KAAK,QAASJ,GACtDX,KAAK2B,QAAQX,GAAID,KAAK,QAASH,KA3HhB,wBA8HnB,SAAWI,EAAIJ,EAAOD,EAAO+C,GAAyC,IAAtBzC,EAAqB,uDAAfjB,KAAKJ,SACvDI,KAAKqB,UACD,CACIC,WAAYC,8CAAGvC,YACfwC,WAAY,CAACR,EAAIhB,KAAK2D,SAAS3C,GAAKhB,KAAK2B,QAAQX,GAAID,KAAK,SAAU2C,IAExE,CAAEpC,WAAYC,8CAAGvC,YAAawC,WAAY,CAACR,EAAIJ,EAAOD,EAAO+C,IAC7DzC,GAEAyC,GAAmB1D,KAAK2B,QAAQX,GAAID,KAAK,QAASJ,GACtDX,KAAK2B,QAAQX,GAAID,KAAK,QAASH,KAxIhB,wBA2InB,SAAWI,EAAI4C,EAAKC,GAA2B,IAAtB5C,EAAqB,uDAAfjB,KAAKJ,SAMhC,OALAI,KAAKqB,UACD,CAAEC,WAAYC,8CAAGtC,YAAauC,WAAY,CAACR,EAAI4C,EAAK5D,KAAK2B,QAAQX,GAAID,KAAK6C,KAC1E,CAAEtC,WAAYC,8CAAGtC,YAAauC,WAAY,CAACR,EAAI4C,EAAKC,IAAQ5C,GAEhEjB,KAAK2B,QAAQX,GAAID,KAAK6C,EAAKC,GACpB7D,OAjJQ,wBAoJnB,SAAWgB,GAA0B,IAAD,OAArBC,EAAqB,uDAAfjB,KAAKJ,SAChBsB,EAAOlB,KAAK2B,QAAQX,GAC1BE,EAAK4C,eAAe,kBAAkB7B,SAAQ,SAACC,GAAD,OAAU,EAAK6B,WAAW7B,EAAKlB,KAAMC,MACnFC,EAAK4C,iBAAiB7B,SAAQ,SAACC,GAAD,OAAU,EAAK6B,WAAW7B,EAAKlB,KAAMC,MACnEjB,KAAKqB,UACD,CACIC,WAAYC,8CAAG1C,SACf2C,WAAY,CACRN,EAAKH,KAAK,SAAUf,KAAK2D,SAASzC,EAAKF,MAAOE,EAAKH,KAAK,QACxDG,EAAKR,WAAYQ,EAAK8C,OAAOjD,KAAMC,IAG3C,CAAEM,WAAYC,8CAAGrC,SAAUsC,WAAY,CAACR,IAAOC,GAEnDC,EAAK+C,WAlKU,wBAqKnB,SAAWjD,GAA0B,IAAtBC,EAAqB,uDAAfjB,KAAKJ,SACtB,GAAgC,IAA5BI,KAAK2B,QAAQX,GAAIR,SAAgBR,KAAK2B,QAAQX,GAAIkD,UAAtD,CACA,IAAMC,EAASnE,KAAK2B,QAAQX,GAAIgD,OAChChE,KAAKqB,UACD,CACIC,WAAYC,8CAAGzC,SACf0C,WAAY,CACR2C,EAAOpD,KAAK8B,OAAQsB,EAAOpD,KAAK+B,OAAQqB,EAAOpD,KAAKJ,MAAOX,KAAK2D,SAAS3C,GAAKmD,EAAOpD,KAAKF,KAAMG,IAGxG,CAAEM,WAAYC,8CAAGpC,SAAUqC,WAAY,CAACR,IAAOC,GAEnDjB,KAAK2B,QAAQX,GAAIiD,YAjLF,wBAoLnB,SAAWjD,GAA0B,IAAtBC,EAAqB,uDAAfjB,KAAKJ,SACtB,OAAII,KAAK2B,QAAQX,GAAIoD,SAAiBpE,KAAKqE,WAAWrD,EAAIC,GACnDjB,KAAK+D,WAAW/C,EAAIC,KAtLZ,oBAyLnB,SAAOD,EAAIsD,GACPtE,KAAK2B,QAAQX,GAAIN,SAAS4D,GAC1BtE,KAAK2B,QAAQX,GAAIuD,KAAK,WA3LP,oBA8LnB,SAAOvD,EAAIwD,EAAKF,GACZ,IAAM1D,EAAQZ,KAAK2B,QAAQX,GAAID,KAAK,SACpCf,KAAK2B,QAAQX,GAAID,KAAK,QAAtB,uVAAoCH,GAApC,IAA2C6D,OAAQD,EAAIC,OAAQC,MAAOF,EAAIE,SAC1E1E,KAAK2E,OAAO3D,EAAIsD,KAjMD,8BAoMnB,WACI,MAAe,CAACtE,KAAKN,cAAckF,WAAWC,QAAQ,KAAM7E,KAAKN,cAAckF,WAAWE,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOhF,KAAKN,cAAckF,WAAWK,MAAMF,EAAI,EAAGC,GAAGE,SAtMtC,8BAyMnB,WACI,MAAe,CAAClF,KAAKL,cAAciF,WAAWC,QAAQ,KAAM7E,KAAKL,cAAciF,WAAWE,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOhF,KAAKL,cAAciF,WAAWK,MAAMF,EAAI,EAAGC,GAAGE,SA3MtC,kCA8MnB,SAAAC,qBAAA,OAAwD,IAAjCzF,cAAgC,MAAhCA,cAAeC,cAAiB,MAAjBA,cAElCK,KAAKN,cAAgB0F,KAAK1F,eAE1BM,KAAKL,cAAgByF,KAAKzF,iBAlNX,2BAqNnB,WAAiB,IAAD,OAaZ,MAAO,CAZOK,KAAKC,GAAGC,EAAE,sBAAsBmF,KAAI,SAACnE,GAAD,MAAW,CACzDP,MAAOO,EAAKH,KAAK,SACjBH,MAAOM,EAAKH,KAAK,SACjBC,GAAIE,EAAKH,KAAK,UAEJf,KAAKC,GAAGC,EAAE,sBAAsBmF,KAAI,SAACnD,GAAD,MAAW,CACzDvB,MAAOuB,EAAKnB,KAAK,SACjB8B,OAAQ,EAAKlB,QAAQ,EAAK2D,gBAAgBpD,EAAKW,SAAS7B,OAAOD,KAAK,SACpE+B,OAAQZ,EAAKY,SAAS/B,KAAK,SAC3BH,MAAOsB,EAAKnB,KAAK,SACjBC,GAAIkB,EAAKnB,KAAK,aAhOH,2BAqOnB,SAAcwE,EAAMC,GAChB,MAAuBxF,KAAKyF,gBAA5B,iLAAOC,EAAP,KAAc7D,EAAd,KACA,IACI,IAAM0B,EAAUiC,EAAUD,EAAMG,EAAO7D,GACvC,OAAI0B,QAA0BoC,IAAfpC,EAAQE,SAAoCkC,IAAhBpC,EAAQqC,IAA0BrC,EACtE,CAAEE,IAAI,EAAOmC,IAAK,0DAC3B,MAAOC,GACL,MAAO,CAAEpC,IAAI,EAAOmC,IAAI,mCAAD,OAAqCC,EAAEtC,aA5OnD,2BAgPnB,SAAc5C,EAAOC,EAAOI,GACxB,GAAIA,EAAI,CACJ,IAAME,EAAOlB,KAAK2B,QAAQX,GAC1B,OAAOhB,KAAK8F,cAAc,CACtBnF,MAAOA,GAASO,EAAKH,KAAK,SAC1BH,MAAOA,GAASM,EAAKH,KAAK,SAC1BC,MACDhB,KAAKN,eAEZ,OAAOM,KAAK8F,cAAc,CAAEnF,QAAOC,QAAOI,MAAMhB,KAAKN,iBAzPtC,2BA4PnB,SAAciB,EAAOC,EAAOiC,EAAQC,EAAQ9B,GACxC,GAAIA,EAAI,CACJ,IAAMkB,EAAOlC,KAAK2B,QAAQX,GAC1B,OAAOhB,KAAK8F,cAAc,CACtBnF,MAAOA,GAASuB,EAAKnB,KAAK,SAC1BH,MAAOA,GAASsB,EAAKnB,KAAK,SAC1B8B,OAAQ7C,KAAK2B,QAAQ3B,KAAKsF,gBAAgBpD,EAAKW,SAAS7B,OAAOD,KAAK,SACpE+B,OAAQZ,EAAKY,SAAS/B,KAAK,SAC3BC,MACDhB,KAAKL,eAEZ,OAAOK,KAAK8F,cAAc,CACtBnF,QAAOC,QAAOiC,SAAQC,SAAQ9B,MAC/BhB,KAAKL,mBAzQO,IAAkCH,cA6Q1CD,sC,okBCtKAqB,EA3GD,CACV,CACImF,SAAU,IACVnF,MAAO,CACHoF,eAAgB,MAGxB,CACID,SAAU,uBACVnF,MAAO,CACHqF,QAAS,cACTC,OAAQ,IACRxB,MAAO,oBACPD,OAAQ,qBACR0B,MAAO,oBACPC,QAAS,sBACTC,gBAAiB,8BACjBC,YAAa,0BACbC,YAAa,0BACbC,WAAY,SACZC,WAAY,WAGpB,CACIV,SAAU,uBACVnF,MAAO,CACH8D,MAAO,EACPD,OAAQ,EACR4B,gBAAiB,8BACjBH,OAAQ,MAIhB,CACIH,SAAU,OACVnF,MAAO,CACH8F,WAAY,SACZC,iBAAkB,aAG1B,CACIZ,SAAU,uBACVnF,MAAO,CACH8D,MAAO,wBACPkC,UAAW,8BACXC,iBAAkB,8BAClBH,WAAY,WACZI,iBAAkB,2BAClBC,eAAgB,yBAChBC,cAAe,gBACfC,UAAW,sBAGnB,CACIlB,SAAU,cACVnF,MAAO,CACHD,MAAO,cACPuG,iBAAkB,aAClBhB,OAAQ,IACRiB,sBAAuB,EACvBC,MAAO,OACPC,oBAAqB,OACrBC,oBAAqB,iBACrBC,gBAAiB,OACjBC,gBAAiB,EACjBC,kBAAmB,IAG3B,CACI1B,SAAU,UACVnF,MAAO,CACH8G,QAAS,SAGjB,CACI3B,SAAU,+BACVnF,MAAO,CACH6D,OAAQ,GACRC,MAAO,GACP0B,QAAS,GACTG,YAAa,EACboB,cAAe,KAGvB,CACI5B,SAAU,oBACVnF,MAAO,CACHyF,gBAAiB,YAGzB,CACIN,SAAU,aACVnF,MAAO,CACHyF,gBAAiB,YAGzB,CACIN,SAAU,YACVnF,MAAO,CACHgH,aAAc,OACd5B,eAAgB,GAChB6B,eAAgB,KC3FbC,EARC,CACZlH,MAAM,YAAKA,GACXmH,gBAAgB,EAChBC,oBAAoB,EACpBC,QAAS,IACTC,QAAS,G,+DC6CEC,EA5Ca,CACxBC,WAAY,aAEZC,MAXW,WACX,IAAMD,EAAa,aAInB,OAHKE,OAAOC,aAAaC,QAAQJ,IAC7BE,OAAOC,aAAaE,QAAQL,EAAYE,OAAOI,KAAKC,KAAKC,UAAU,MAEhE,IAAI5G,IAAI2G,KAAKE,MAAMP,OAAOQ,KAAKR,OAAOC,aAAaC,QAAQJ,MAM3DW,GAEPC,UALwB,WAMpBV,OAAOC,aAAaE,QAAQzI,KAAKoI,WAAYE,OAAOI,KAAKC,KAAKC,UAAUK,MAAMC,KAAKlJ,KAAKqI,WAG5Fc,cATwB,WAUfb,OAAOC,aAAaC,QAAQxI,KAAKoI,aAClCE,OAAOC,aAAaE,QAAQzI,KAAKoI,WAAYE,OAAOI,KAAKC,KAAKC,UAAU,OAIhFQ,IAfwB,SAepBpI,GACA,OAAwC,OAApCsH,OAAOC,aAAaC,QAAQxH,GAAqB,KAC9C2H,KAAKE,MAAMP,OAAOQ,KAAKR,OAAOC,aAAaC,QAAQxH,MAE9DqI,KAnBwB,SAmBnBrI,EAAIsI,GACLtJ,KAAKuJ,SAASvI,GACd,IAAMwI,EAAiBb,KAAKC,UAAUU,GACtChB,OAAOC,aAAaE,QAAQzH,EAAIsH,OAAOI,KAAKc,KAEhDvF,OAxBwB,SAwBjBjD,GACChB,KAAKqI,MAAMoB,OAAOzI,IAAKhB,KAAKgJ,YAChCT,aAAamB,WAAW1I,IAE5BuI,SA5BwB,SA4BfvI,GACDhB,KAAKqI,MAAMhG,IAAIrB,KACnBhB,KAAKqI,MAAMlH,IAAIH,GACfhB,KAAKgJ,cAETW,aAjCwB,WAkCpB,OAAOhB,KAAKE,MAAMP,OAAOQ,KAAKR,OAAOC,aAAaC,QAAQxI,KAAKoI,eAEnEwB,WApCwB,SAoCb5I,GACP,IAAIhB,KAAKqI,MAAMhG,IAAIrB,GAAnB,CACAhB,KAAKqI,MAAMlH,IAAIH,GACf,IAAM6I,EAAOlB,KAAKE,MAAMP,OAAOQ,KAAKR,OAAOC,aAAaC,QAAQxI,KAAKoI,cACrEyB,EAAKC,QAAQ9I,GACbsH,OAAOC,aAAaE,QAAQzI,KAAKoI,WAAYE,OAAOI,KAAKC,KAAKC,UAAUiB,Q,iBCIjEE,EArDA,SAAC,GAAD,IACbpJ,EADa,EACbA,MAAOK,EADM,EACNA,GAAIgJ,EADE,EACFA,KAAMC,EADJ,EACIA,KAAMvF,EADV,EACUA,MAAOD,EADjB,EACiBA,OAAQ2B,EADzB,EACyBA,QAASD,EADlC,EACkCA,MADlC,MAER,CACLjG,EAAG,CACDc,MAEFD,KAAM,CACJ,CACEb,EAAG,CACD0D,IAAK,MAEP,cAAe,CACb,CACE,aAAc,CACZ,CACE1D,EAAG,CACDuE,SACAC,QACAtE,EAAG4J,EACH3J,EAAG4J,KAIT,SAAU,CACR,CACE/J,EAAG,CACDkH,MA1BD,EACyCf,gBA0BxCD,aAIN,gBAAiB,CACf,CACElG,EAAG,CACDkH,MAlCD,EAC0Dd,YAkCzD5B,MAnCD,EACuE6B,eAsC5E,cAAe,CAAC5F,GAChB,UAAW,CACT,CACET,EAAG,CACDW,KAAMsF,WCFP+D,EAzCC,SAAC,GAAD,IACdxE,EADc,EACdA,MAAO7D,EADO,EACPA,MADO,MAET,CACLsI,QAAS,CACPjK,EAAG,CACDkK,MAAO,wCACP,YAAa,4CACb,qBAAsB,kGACtB,UAAW,qCAEbxG,IAAK,CACH,CACE1D,EAAG,CACDmK,IAAK,OACLrJ,GAAI,KACJ,cAAe,iBAGnB,CACEd,EAAG,CACDmK,IAAK,OACLrJ,GAAI,MACJ,cAAe,kBAIrBsJ,MAAO,CACL,CACEpK,EAAG,CACDqK,YAAa,WACbvJ,GA9BM,EACAA,GA8BNwJ,YA/BM,EACIA,YA+BVC,OAhCM,EACiBA,QAiCzBvJ,KAAMwE,EACNxD,KAAML,OCmBC6I,EAtDA,SAAC,GAAD,IACb1J,EADa,EACbA,GAAIL,EADS,EACTA,MADS,MAER,CACLT,EAAG,CACDc,KACA6B,OALW,EACFA,OAKTC,OANW,EACMA,QAOnB/B,KAAM,CACJ,CACEb,EAAG,CACD0D,IAAK,OAEP,gBAAiB,CACf,CACE1D,EAAG,CACDyK,cAAe,8BAEjB,cAAe,CACb,CACEzK,EAAG,CACDkH,MArBD,EACcR,UAqBblC,MAtBD,EACyBkG,aAyB9B,WAAY,CACV,CACE1K,EAAG,CACD2C,OAAQ,OACRC,OAAQ,WAId,cAAe,CAACnC,GAChB,SAAU,CACR,CACET,EAAG,CACD2K,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OAEN,UAAW,CACT,CAAE9K,EA5CH,EACoCsC,oBC2BpCyI,EAvBC,SAACC,GACb,IAAMxF,EAAQwF,EAAExF,MAAML,KAAI,SAACnE,GAAD,OAAW6I,EAAO,aACxCpJ,MAAOO,EAAKP,MACZK,GAAIE,EAAKF,GACTgJ,KAAM9I,EAAKR,SAASN,EACpB6J,KAAM/I,EAAKR,SAASL,GACjBa,EAAKN,WAENiB,EAAQqJ,EAAErJ,MAAMwD,KAAI,SAAC8F,EAAK5K,GAAN,OAAYmK,EAAO,CACzC1J,GAAIT,EACJI,MAAOwK,EAAIxK,MACXkC,OAAQsI,EAAItI,OACZC,OAAQqI,EAAIrI,OACZ8D,UAAWuE,EAAIvK,MAAMyF,gBACrBuE,UAAWO,EAAIvK,MAAMwK,UACrB5I,UAAW2I,EAAIvK,MAAM4B,eAEnB6I,EAAInB,EAAQ,CACdxE,QAAO7D,QAAO2I,YAAaU,EAAEI,eAAed,YAAaC,OAAQS,EAAEI,eAAeb,OAAQzJ,GAAIkK,EAAElK,KAGpG,OADY,IAAIuK,IAAOC,SAAUC,YAAYJ,I,QC+FlCK,EAlHO,SAAClM,GAAD,yDAClB,aAAsB,IAAD,iDAANC,EAAM,yBAANA,EAAM,uBACjB,+BAASA,KACJkM,mBAAqB,KAFT,EADH,kDAMlB,WACI,6DAA0B,uEAC1B3L,KAAKC,GAAG2L,GAAG,6BAA8B,qBAAsB5L,KAAK6L,iBAAiBC,KAAK9L,OAC1FA,KAAKC,GAAG2L,GAAG,kBAAmB,qBAAsB5L,KAAK6L,iBAAiBC,KAAK9L,OAC/EA,KAAKC,GAAG2L,GAAG,uCAAwC5L,KAAK6L,iBAAiBC,KAAK9L,SAVhE,yBAalB,SAAY+L,GACR/L,KAAKC,GAAGsE,KAAK,aACbvE,KAAKC,GAAGC,EAAE,cAAc+D,SACT,QAAX8H,GAAkBC,iBAAOhM,KAAKC,GAAGgM,IAAI,CAAEC,MAAM,IAArB,UAAiClM,KAAKmM,UAAtC,qBACb,QAAXJ,GAAkBC,iBAAOhM,KAAKC,GAAGmM,IAAI,CAAEF,MAAM,IAArB,UAAiClM,KAAKmM,UAAtC,uBAjBd,+BAoBlB,SAAkBE,GACd,MAA6C,UAAtCrM,KAAK2B,QAAQ0K,GAAQtL,KAAK,UArBnB,+BAwBlB,SAAkBuL,GACd,MAA6C,UAAtCtM,KAAK2B,QAAQ2K,GAAQvL,KAAK,UAzBnB,6BA6BlB,SAAgBsL,GACZ,OAAOA,IA9BO,0BAiClB,WAAgB,IAAD,OACL/B,EAAQ,CACV5E,MAAO,GAAI7D,MAAO,GAAIyJ,eAAgBtL,KAAKsL,eAAgBtK,GAAIhB,KAAKgB,IA8BxE,OA5BAhB,KAAKC,GAAGyF,QAAQzD,SAAQ,SAACf,GACrB,GAAI,EAAKqL,kBAAkBrL,EAAKF,MAAO,CACnC,IAAMwL,EAAMtL,EAAK8C,OACXyI,EAAW,CACb9L,MAAO6L,EAAIzL,KAAKJ,MAChBK,GAAIwL,EAAIzL,KAAKC,GACbN,SAAU8L,EAAI9L,UAElB+L,EAAS7L,MAAQ,EAAK+C,SAASzC,EAAKF,MACpCsJ,EAAM5E,MAAMgH,KAAKD,OAGzBzM,KAAKC,GAAG4B,QAAQI,SAAQ,SAACC,GACrB,GAAI,EAAKyK,kBAAkBzK,EAAKlB,MAAO,CACnC,IAAMwL,EAAMtK,EAAK8B,OACX4I,EAAW,CACb/J,OAAQ,EAAKyC,gBAAgBpD,EAAKW,SAAS7B,MAC3C8B,OAAQ0J,EAAIzL,KAAK+B,OACjBnC,MAAO6L,EAAIzL,KAAKJ,OAEpBiM,EAAShM,MAAQ,EAAK+C,SAASzB,EAAKlB,MACpC4L,EAAShM,MAAM4B,UAAYC,IAAsBoK,cAC7CD,EAAShM,MAAM2B,WAAYqK,EAAShM,MAAMuB,aAC1CD,EAAKW,SAASnC,WAAYwB,EAAKY,SAASpC,YAE5C4J,EAAMzI,MAAM6K,KAAKE,OAGlBtC,IAjEO,qBAoElB,WACI,MAAM,GAAN,OAAUtK,KAAKsL,eAAed,YAA9B,YAA6CxK,KAAKsL,eAAeb,UArEnD,wBAwElB,SAAWqC,GACP,IAAMC,EAAMC,EAAehN,KAAKiN,gBAC1BC,GAAQ,IAAIC,aAAcC,OAAOL,GACjCM,EAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAErM,KAAM,mCACvCmL,iBAAOqB,EAAD,UAAUP,GAAQ,UAAO9M,KAAKmM,UAAZ,gBAAlB,eA5EQ,sBA+ElB,SAASlG,GAAU,IAAD,OACRhF,GAAM,IAAIpB,MAAOC,UACvBmG,EAAQP,MAAMzD,SAAQ,SAACf,GACnB,EAAKqM,QAAQrM,EAAKP,MAAOO,EAAKN,MAAO,QAASM,EAAKR,SAAU,GAAKQ,EAAKF,GAAIC,MAE/EgF,EAAQpE,MAAMI,SAAQ,SAACC,GACnB,EAAKsL,QAAQtL,EAAKW,OAAQX,EAAKY,OAAQZ,EAAKvB,MAAOuB,EAAKtB,MAAO,aAAS+E,EAAW1E,MAEvFjB,KAAKsL,eAAiBrF,EAAQqF,eAC9BtL,KAAKiD,WAAW,CACZpC,KAAMqC,IAAEuK,oBACRC,QAAS,CACLpC,eAAgBrF,EAAQqF,eACxBtK,GAAIhB,KAAKgB,QA5FH,8BAiGlB,WAAoB,IAAD,OACgB,OAA3BhB,KAAK2N,mBAA4BC,aAAa5N,KAAK2L,oBACvD3L,KAAK2L,mBAAqBkC,YAAW,kBAAM1F,EAAoBkB,KAAK,EAAKrI,GAAI,EAAKiM,kBAAiB,OAnGrF,uCAsGlB,WACI,IAAM3D,EAAenB,EAAoBiB,IAAIpJ,KAAKgB,IAClD,QAAKsI,IACLtJ,KAAK8N,SAASxE,IACP,KA1GO,4BA6GlB,WACI,OAAOZ,KAAKC,KAAKC,UAAU5I,KAAKiN,qBA9GlB,GAA+BzN,ICgCtCuO,EAtCK,SAACvO,GAAD,sKAChB,WACIQ,KAAKC,GAAG+N,UAFI,uBAKhB,SAAU5K,GACNpD,KAAKC,GAAGgO,eAAe,QACvBjO,KAAKkO,UAAY9K,EACjBpD,KAAKC,GAAG2L,GAAG,QAAQ,SAAC/F,GAAD,OAAOzC,EAAG+K,KAAKC,MAAM,IAAMvI,EAAE/C,OAAOuL,cAR3C,qBAWhB,WACIrO,KAAKC,GAAGqO,QAZI,qBAehB,SAAQC,GACJvO,KAAKC,GAAGoO,KAAKE,EAAI,OAhBL,qBAmBhB,WACI,OAAOJ,KAAKC,MAAuB,IAAjBpO,KAAKC,GAAGoO,UApBd,sBAuBhB,WAAY,IAAD,OACP,GAAkC,IAA9BrO,KAAKC,GAAGuO,WAAWhO,OAAc,OAAO,EAE5C,IAAK8H,OAAOmG,QAAQ,kCAAmC,OAAO,EAC9D,IAAMxN,GAAM,IAAIpB,MAAOC,UAEvB,OADAE,KAAKC,GAAGuO,WAAWvM,SAAQ,SAACyM,GAAD,OAAQ,EAAKC,WAAWD,EAAG1N,KAAMC,OACrD,IA7BK,0BAgChB,WACI,2DAAwB,qEACxBjB,KAAKkO,UAAUC,KAAKC,MAAuB,IAAjBpO,KAAKC,GAAGoO,aAlCtB,GAA+B7O,I,iCC4FpCoP,EAxFO,SAACpP,GAAD,yDAClB,aAAuB,IAAD,qEAAPqP,EAAO,yBAAPA,EAAO,uBAClB,+BAASA,IAETC,EAAIC,eAAJ,mBACKxN,IAAG1C,UAAW,sCAAIY,EAAJ,yBAAIA,EAAJ,uBAAa,qEAAcqM,KAAd,6BAA4BrM,EAA5B,QAAkC,QADlE,cAEK8B,IAAGzC,UAAW,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAa,qEAAcqM,KAAd,6BAA4BrM,EAA5B,QAAkC,QAFlE,cAGK8B,IAAGxC,aAAc,sCAAIU,EAAJ,yBAAIA,EAAJ,uBAAa,wEAAiBqM,KAAjB,6BAA+BrM,EAA/B,QAAqC,QAHxE,cAIK8B,IAAGvC,aAAc,sCAAIS,EAAJ,yBAAIA,EAAJ,uBAAa,wEAAiBqM,KAAjB,6BAA+BrM,EAA/B,QAAqC,QAJxE,cAKK8B,IAAGtC,aAAc,sCAAIQ,EAAJ,yBAAIA,EAAJ,uBAAa,wEAAiBqM,KAAjB,6BAA+BrM,EAA/B,QAAqC,QALxE,cAMK8B,IAAGrC,UAAW,sCAAIO,EAAJ,yBAAIA,EAAJ,uBAAa,wEAAiBqM,KAAjB,6BAA+BrM,EAA/B,QAAqC,QANrE,cAOK8B,IAAGpC,UAAW,sCAAIM,EAAJ,yBAAIA,EAAJ,uBAAa,wEAAiBqM,KAAjB,6BAA+BrM,EAA/B,QAAqC,QAPrE,cAQK8B,IAAGnC,SAAU,sCAAIK,EAAJ,yBAAIA,EAAJ,uBAAa,oEAAaqM,KAAb,6BAA2BrM,EAA3B,QAAiC,QARhE,cASK8B,IAAGlC,SAAU,sCAAII,EAAJ,yBAAIA,EAAJ,uBAAa,oEAAaqM,KAAb,6BAA2BrM,EAA3B,QAAiC,QAThE,cAUK8B,IAAGjC,WAAY,sCAAIG,EAAJ,yBAAIA,EAAJ,uBAAa,EAAKuP,iBAAiBlD,KAAtB,6BAAoCrM,EAApC,QAA0C,QAV3E,GAaA,EAAKwP,UAAY,GACjB,EAAKC,eAAiB,EAjBJ,EADJ,qDA0BlB,SAAkBlO,EAAImO,EAASC,GAC3B,IAAMnO,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,IAAGnC,QAASoC,WAAY,CAACR,EAAImO,IAC3C,CAAE7N,WAAYC,IAAGnC,QAASoC,WAAY,CAACR,EAAIoO,IAAWnO,KA9B5C,gCAkClB,SAAmBD,EAAIqO,EAASF,EAASG,EAAQF,GAC7C,IAAMnO,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,IAAGlC,QAASmC,WAAY,CAACR,EAAIqO,EAASF,IACpD,CAAE7N,WAAYC,IAAGlC,QAASmC,WAAY,CAACR,EAAIsO,EAAQF,IAAWnO,KAtCpD,2BA0ClB,SAAcD,EAAIuO,EAAQC,GACtB,IAAMvO,GAAM,IAAIpB,MAAOC,UACvBE,KAAKqB,UACD,CAAEC,WAAYC,IAAGjC,UAAWkC,WAAY,CAACR,EAAIuO,IAC7C,CAAEjO,WAAYC,IAAGjC,UAAWkC,WAAY,CAACR,EAAIwO,IAAUvO,KA9C7C,uBAkDlB,SAAUwO,EAASC,EAAYzO,GACf,IAARA,IACJjB,KAAKiP,UAAUU,OAAO3P,KAAKkP,gBAC3BlP,KAAKiP,UAAUvC,KAAK,CAAEzL,MAAKwO,UAASC,eACpC1P,KAAKkP,gBAAkB,EACvBlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE0M,SAAUlC,QAAiC,IAAxB1N,KAAKkP,iBAClDlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE2M,SAAUnC,QAAS1N,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,YAxDtE,kBA2DlB,WACI,IAAIsP,EAAS,KAEb,IAD4B,IAAxB9P,KAAKkP,iBAAsBY,EAAS9P,KAAKiP,UAAUjP,KAAKkP,eAAiB,GAAGjO,KACjD,IAAxBjB,KAAKkP,gBAAwBlP,KAAKiP,UAAUjP,KAAKkP,eAAiB,GAAGjO,MAAQ6O,GAChF9P,KAAKkP,gBAAkB,EACvBJ,EAAIiB,cAAc/P,KAAKiP,UAAUjP,KAAKkP,gBAAgBO,SAE1DzP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE0M,SAAUlC,QAAiC,IAAxB1N,KAAKkP,iBAClDlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE2M,SAAUnC,QAAS1N,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,WAnEtE,kBAsElB,WACI,IAAIsP,EAAS,KAEb,IADI9P,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,SAAQsP,EAAS9P,KAAKiP,UAAUjP,KAAKkP,gBAAgBjO,KACzFjB,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,QAAUR,KAAKiP,UAAUjP,KAAKkP,gBAAgBjO,MAAQ6O,GAChGhB,EAAIiB,cAAc/P,KAAKiP,UAAUjP,KAAKkP,gBAAgBQ,YACtD1P,KAAKkP,gBAAkB,EAE3BlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE0M,SAAUlC,QAAiC,IAAxB1N,KAAKkP,iBAClDlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE2M,SAAUnC,QAAS1N,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,WA9EtE,0BAiFlB,WACI,2DAAwB,qEACxBR,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE0M,SAAUlC,QAAiC,IAAxB1N,KAAKkP,iBAClDlP,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAE2M,SAAUnC,QAAS1N,KAAKkP,iBAAmBlP,KAAKiP,UAAUzO,YApFtE,4BAqBlB,YAAkD,IAA3Bc,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,WAChBsN,EAAIC,cAAczN,GAC3B,WAAN,cAAUE,QAvBI,GAAmCjC,YAAeC,KCiJzDwQ,EA/IG,SAACxQ,GAAD,yDAEd,WAAYwB,EAAIf,EAAIgD,EAAYgN,EAAY3E,EAAgB5L,EAAeC,GAAgB,IAAD,6BACtF,cAAMqB,EAAIf,EAAIgD,EAAYgN,EAAY3E,EAAgB5L,EAAeC,GACjEsD,IAAY,EAAKA,WAAaA,GAC9BgN,IAAY,EAAKA,WAAaA,GAC9BhQ,IAAI,EAAKA,GAAKA,GAClB,EAAKe,GAAKA,EACV,EAAKsK,eAAiBA,EACtB,EAAKrL,GAAGsE,KAAK,kBACb,EAAK2L,SAAW,EAAKjQ,GAAGkB,IACpB,CAAEC,MAAO,QAASL,KAAM,CAAEF,KAAM,QAAUsP,QAAS,CAAC,YAExD,EAAKC,iBACL,EAAKnQ,GAAGsE,KAAK,kBAZyE,EAF5E,oDAiBd,SAAiB+G,GACbtL,KAAKsL,eAAiBA,EACtBtL,KAAKC,GAAGsE,KAAK,oBAnBH,qBAsBd,SAAQnE,GACJ,OAAOJ,KAAKC,GAAGoQ,eAAejQ,KAvBpB,iBA0Bd,YAAqC,IAA/BH,EAA8B,EAA9BA,GAAIgD,EAA0B,EAA1BA,WAAYgN,EAAc,EAAdA,WACdhN,IAAYjD,KAAKiD,WAAaA,GAC9BgN,IAAYjQ,KAAKiQ,WAAaA,GAC9BhQ,IAAID,KAAKC,GAAKA,KA7BR,wCAgCd,WACI,IAEIY,EAFEyP,EAAMtQ,KAAKC,GAAGC,EAAE,aACtB,GAAmB,IAAfoQ,EAAI9P,OAAgB,OAAOR,KAAKiD,WAAW,CAAEpC,KAAMqC,IAAEqN,iBAEvB1P,EAA9ByP,EAAIE,OAAM,SAAC3K,GAAD,OAAOA,EAAEzB,YAAkB,OAChCkM,EAAIE,OAAM,SAAC3K,GAAD,OAAOA,EAAE4K,YAAkB,OAClC,MACZ,IAAMC,EAAMJ,EAAIjL,KAAI,SAACQ,GAAD,OAAOA,EAAE9E,KAAK,SAClC,OAAOf,KAAKiD,WAAW,CACnBpC,KAAMqC,IAAEyN,aACRjD,QAAS,CACLgD,MAAK7P,YA3CH,4BAgDd,WAAkB,IAAD,OACb,6DAA0B,uEAC1Bb,KAAKC,GAAG2L,GAAG,mBAAmB,kBAAM,EAAKgF,gCACzC5Q,KAAKC,GAAG2L,GAAG,OAAQ,wBAAwB,SAAC/F,GACxCA,EAAE/C,OAAOb,SAAQ,SAACf,GACdA,EAAK2P,QAAQ,WAAb,eAA8B3P,EAAKR,mBAG3CV,KAAKC,GAAG2L,GAAG,WAAY,wBAAwB,SAAC/F,GAC5CA,EAAE/C,OAAOb,SAAQ,SAACf,GACd,EAAK4P,kBAAkB5P,EAAKF,KAAME,EAAK2P,QAAQ,YAA/C,eAAiE3P,EAAKR,mBAG9EV,KAAKC,GAAG2L,GAAG,2BAA2B,SAAC/F,EAAGhF,EAAMK,GAC5CA,EAAK2P,QAAQ,SAAU3P,EAAKH,KAAK,SAAS0D,QAC1CvD,EAAK2P,QAAQ,QAAS3P,EAAKH,KAAK,SAAS2D,OACzCxD,EAAK2P,QAAQ,WAAb,eAA8B3P,EAAKR,gBAEvCV,KAAKC,GAAG2L,GAAG,yBAAyB,SAAC/F,EAAGhF,EAAMK,GAC1C,EAAK6P,mBACD7P,EAAKF,KACL,CAAEyD,OAAQvD,EAAK2P,QAAQ,UAAWnM,MAAOxD,EAAK2P,QAAQ,UACtD3P,EAAK2P,QAAQ,YACb,CAAEpM,OAAQvD,EAAKH,KAAK,SAAS0D,OAAQC,MAAOxD,EAAKH,KAAK,SAAS2D,OAJnE,eAKSxD,EAAKR,gBAIlBV,KAAKC,GAAG2L,GAAG,oBAAoB,WAC3B,EAAKsE,SAASjC,eAAe,sBAAuB,EAAKiC,SAASc,SAAS,aAG/EhR,KAAKC,GAAG2L,GAAG,UAAU,SAACqF,GAAD,MAAyC,SAA/BA,EAAInO,OAAO,GAAG/B,KAAK,QAAqB,EAAKd,GAAGsE,KAAK,aAAe,KACnGvE,KAAKC,GAAG2L,GAAG,UAAU,SAACqF,GAAD,MAAyC,SAA/BA,EAAInO,OAAO,GAAG/B,KAAK,QAAqB,EAAKd,GAAGsE,KAAK,aAAe,KAEnGvE,KAAKC,GAAG2L,GAAG,aAAa,SAACsF,GACjBA,EAAGpO,SAAW,EAAK7C,KACnB,EAAKA,GAAGsE,KAAK,aACb,EAAKtE,GAAGC,EAAE,cAAc+D,aAGhCjE,KAAKC,GAAG2L,GAAG,6BAA6B,WACpC,IAAM8C,EAAK,EAAKzO,GAAGC,EAAE,aAErB,OADkB,IAAdwO,EAAGlO,QAAiBkO,EAAG,GAAG+B,UAAU,EAAKxQ,GAAGsE,KAAK,aAC9CmK,EAAGnK,KAAK,gBAEnBvE,KAAKC,GAAG2L,GAAG,YAAa,QAAQ,SAACsF,GAC7BA,EAAGpO,OAAOyB,KAAK,gBAGnBvE,KAAKC,GAAG2L,GAAG,YAAa,QAAQ,SAACsF,GACxB,EAAKhB,SAASiB,SAAS,WAAW,EAAKlR,GAAGsE,KAAK,aACpD,IAAMmK,EAAKwC,EAAGpO,OACd,EAAKoN,SAASxP,SAAS0Q,EAAGC,iBAAiB3C,IAC3C,EAAKwB,SAAStE,GAAG,QAAQ,WACrB,IAAM0F,EAAK7O,IAAsBC,kBAC7B,EAAKwN,SAASxP,WAAYgO,EAAG7L,SAASnC,WAAYgO,EAAG5L,SAASpC,YAElEgO,EAAG3N,KAAK,QAAR,2BAAsB2N,EAAG3N,KAAK,UAA9B,IAAwCoB,aAAcmP,EAAGlP,EAAGG,WAAY+O,EAAG3O,KAC3EuO,EAAGpO,OAAOyB,KAAK,cAEnB,EAAK2L,SAAStE,GAAG,QAAQ,WACR8C,EACRmC,QAAQ,iBAAkB,CAC3B1O,aAAcuM,EAAG3N,KAAK,SAASoB,aAAcI,WAAYmM,EAAG3N,KAAK,SAASwB,gBAGlF,EAAK2N,SAAStE,GAAG,YAAY,WACzB,IAAM1K,EAAOwN,EACb,EAAK6C,cAAcrQ,EAAKF,KAAME,EAAK2P,QAAQ,kBAAmB,CAC1D1O,aAAcuM,EAAG3N,KAAK,SAASoB,aAAcI,WAAYmM,EAAG3N,KAAK,SAASwB,gBAGlF,EAAK2N,SAASsB,YAAY,eAzHpB,8BA6Hd,SAAiBxQ,EAAIsQ,GACjB,IAAM1Q,EAAQZ,KAAK2B,QAAQX,GAAID,KAAK,SACpCf,KAAK2B,QAAQX,GAAID,KAAK,QAAtB,2BAAoCH,GAApC,IAA2CuB,aAAcmP,EAAGnP,aAAcI,WAAY+O,EAAG/O,gBA/H/E,0BAyId,WACI,2DAAwB,qEACxBvC,KAAK4Q,gCA3IK,+BAkId,SAAwBlC,GACpB,MAAqCA,EAAG3N,KAAK,SAArCwB,EAAR,EAAQA,WAAYJ,EAApB,EAAoBA,aACdQ,EAAI8O,WAAWlP,GACfH,EAAIqP,WAAWtP,GACrB,OAAOM,IAAsBoK,cAAclK,EAAGP,EAAGsM,EAAG7L,SAASnC,WAAYgO,EAAG5L,SAASpC,gBAtI3E,GACdgL,EAAcqC,EAAYa,EAAcpP,OCPtCkS,EAAgB,CAClBC,MADkB,SACZC,EAAIC,GACN,IAAMC,GAAKF,EAAGvR,EAAIwR,EAAGxR,IAAMuR,EAAGxR,EAAIyR,EAAGzR,GAErC,MAAO,CAAC0R,EADEF,EAAGvR,EAAIyR,EAAIF,EAAGxR,IAG5B2R,QANkB,SAMVC,EAAIC,EAAGtP,EAAGuP,GACd,GAAIF,EAAG5R,IAAM6R,EAAE7R,EAAG,MAAO,CAAC6R,EAAE7R,EAAG6R,EAAE7R,GACjC,IAAMyR,EAAK,CAAEzR,EAAG6R,EAAE7R,EAAI4R,EAAG5R,EAAGC,EAAG4R,EAAE5R,EAAI2R,EAAG3R,GACxC,EAAeL,KAAK2R,MAAM,CAAEvR,EAAG,EAAGC,EAAG,GAAKwR,GAA1C,mBAAOC,EAAP,KAAUK,EAAV,KAEMC,EAAK,SAAAzP,EAAK,GAAL,SAASmP,EAAK,GAAd,SAAkBI,EAAK,GAC5BG,EAAI,WAAI1P,EAAK,GAAImP,EAAIK,EACrBG,EAAI,SAAA3P,EAAK,IAAK,SAAAwP,EAAK,GAAL,SAASD,EAAK,IAC5BK,EAAI,SAAAF,EAAK,GAAI,EAAID,EAAIE,EAG3B,MAAO,GAFMD,EAAD,SAAKE,EAAK,MAAQ,EAAIH,GAAKJ,EAAG5R,IAC7BiS,EAAA,KAAD,IAAKE,EAAK,MAAQ,EAAIH,GAAKJ,EAAG5R,IAG9CoS,QAnBkB,SAmBVF,EAAGL,EAAGtP,EAAGuP,EAAGO,EAAIC,GACpB,GAAID,IAAOC,EAAI,MAAO,CAACJ,EAAEjS,EAAI6R,EAAGI,EAAEjS,EAAI6R,GACtC,MAAelS,KAAK2R,MAAMW,EAAGL,GAA7B,mBAAOH,EAAP,KAAUK,EAAV,KACA,MAAO,CAACL,EAAIW,EAAKN,EAAGL,EAAIY,EAAKP,IAEjCQ,KAxBkB,SAwBbP,EAAGC,GACJ,OAAO,KAAP,IAAQ,SAACD,EAAEhS,EAAIiS,EAAEjS,EAAM,GAAf,SAAoBgS,EAAE/R,EAAIgS,EAAEhS,EAAM,GAAM,KAEpDuS,kBA3BkB,SA2BAN,EAAGL,EAAGtP,EAAGuP,GACvB,MAAiBlS,KAAK+R,QAAQO,EAAGL,EAAGtP,EAAGuP,GAAvC,mBAAOO,EAAP,KAAWC,EAAX,KACA,EAAiB1S,KAAKwS,QAAQF,EAAGL,EAAGtP,EAAGuP,EAAGO,EAAIC,GAA9C,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAiB,CAAC9S,KAAK2S,KAAKV,EAAG,CAAE7R,EAAGqS,EAAIpS,EAAGwS,IAAO7S,KAAK2S,KAAKV,EAAG,CAAE7R,EAAGsS,EAAIrS,EAAGyS,KAC3E,OADA,UACoB,CAAE1S,EAAGqS,EAAIpS,EAAGwS,GACzB,CAAEzS,EAAGsS,EAAIrS,EAAGyS,IAEvBC,MAlCkB,SAkCZN,EAAII,EAAIH,EAAII,GACd,OAAQL,EAAKC,IAAOG,EAAKC,IAG7BE,QAtCkB,SAsCVV,EAAGL,EAAGtP,EAAGuP,GACb,MAAiB,CAAC,CAACI,EAAElS,EAAIuC,EAAG2P,EAAEjS,EAAI6R,GAAI,CAACI,EAAElS,EAAIuC,EAAG2P,EAAEjS,EAAI6R,IACjD7M,KAAI,mCAAEjF,EAAF,KAAKC,EAAL,YAAciS,EAAElS,EAAIA,IAAM6R,EAAE5R,EAAIA,IAAMiS,EAAEjS,EAAIA,IAAM4R,EAAE7R,EAAIA,GAAM,KADvE,mBAAO6S,EAAP,KAAWC,EAAX,KAEA,OAAID,IAAOC,EAAW,EACjBD,GAAOC,GACPD,GAAMC,EAAW,EAClBD,GAAMC,EAAW,GACb,EAHe,GAM3BC,eAhDkB,SAgDHb,EAAGL,EAAGtP,EAAGuP,GACpB,MAAelS,KAAK2R,MAAMM,EAAGK,GAA7B,mBAAOR,EAAP,KAAUK,EAAV,KACII,EAAI,CACJ,CAACD,EAAElS,EAAIuC,EAAG2P,EAAEjS,GACZ,CAACiS,EAAElS,EAAGkS,EAAEjS,EAAI6R,GACZ,CAACI,EAAElS,EAAIuC,EAAG2P,EAAEjS,GACZ,CAACiS,EAAElS,EAAGkS,EAAEjS,EAAI6R,IAEZ/D,KAAKiF,IAAItB,KAAOuB,MAChBd,EAAI,CACA,CAACD,EAAElS,EAAIuC,EAAGmP,GAAKQ,EAAElS,EAAIuC,GAAKwP,GAC1B,EAAEG,EAAEjS,EAAI6R,EAAIC,GAAKL,EAAGQ,EAAEjS,EAAI6R,GAC1B,CAACI,EAAElS,EAAIuC,EAAGmP,GAAKQ,EAAElS,EAAIuC,GAAKwP,GAC1B,EAAEG,EAAEjS,EAAI6R,EAAIC,GAAKL,EAAGQ,EAAEjS,EAAI6R,KAGlC,kBAAeK,EAAEvS,KAAKgT,QAAQV,EAAGL,EAAGtP,EAAGuP,IAAvC,GACA,MAAO,CAAE9R,EADT,KACYC,EADZ,OAGJ+I,IAnEkB,SAmEdkJ,EAAGL,EAAGtP,EAAGuP,EAAGrR,GACZ,MAAa,cAATA,EAA6B6Q,EAAcyB,eAAeb,EAAGL,EAAGtP,EAAGuP,GAChER,EAAckB,kBAAkBN,EAAGL,EAAGtP,EAAGuP,KAKzCR,IAAf,ICxEe4B,ECEO,SAAC9T,GAAD,2KAClB,WACI,uEACAQ,KAAKC,GAAG2L,GAAG,YAAa,sBAAsB,SAACqF,GAC3CA,EAAInO,OAAOgB,iBAAiByP,eAAe,wBAAwBtR,SAAQ,SAACuR,GACxEA,EAAS9S,SAAS+S,EAAGC,eAAeF,UAG5CxT,KAAKC,GAAG2L,GAAG,WAAW,SAACqF,GACnB,IAAMuC,EAAWvC,EAAInO,OAAOD,SAC5B2Q,EAAS9S,SAAS+S,EAAGC,eAAeF,SAV1B,yBAoClB,SAAYG,GACR,OAAO3T,KAAK2B,QAAQgS,GAAYC,WAAWC,OAAO,QAAQ,KArC5C,yBAwClB,SAAYL,GAER,OADAA,EAASM,cACF9T,OA1CO,iCA6ClB,SAAoB+T,EAAUC,GAAgC,IAAtB1Q,EAAqB,uDAAT,GAAIrC,EAAK,uCACnDuS,EAAWxT,KAAK2B,QAAQoS,GACxBE,EAAE,wEACJF,EAAUC,EACVR,EAASzS,KAAK,aAFV,2BAIGyS,EAASzS,KAAK,cAJjB,IAKAoB,aAAcmB,EAAUnB,aACxBI,WAAYe,EAAUf,WACtBC,UAAWc,EAAUd,YAEzB,aACAmD,EAAW1E,GAGf,OADAuS,EAAS9S,SAAS+S,EAAGC,eAAeF,IAC7BS,IA5DO,oCA+DlB,SAAuBF,EAAUC,EAAUrT,EAAOC,EAAOK,GACrD,IAAMiT,EAAalU,KAAK2B,QAAQoS,GAC1BI,EAAanU,KAAK2B,QAAQqS,GAC1BI,EAAkBF,EAAWnT,KAAK,SAClCsT,EAAcC,EAChBJ,EAAWxT,WACXyT,EAAWzT,WACX0T,EAAgB1P,MAAQ,EACxB0P,EAAgB3P,OAAS,EACzB2P,EAAgBjO,OAEdqN,EAAQ,+DAAiB,GAAI,CAAEnN,gBAAiBzF,EAAMyF,iBACxD,UAAWgO,EAAa,CAAEhR,UAAW1C,EAAO2C,UAAW1C,QAAS+E,EAAW1E,GAO/E,OANAuS,EAASe,YACT,wEAAuBR,EAAUP,EAASxS,KAAM,GAAhD,2BACOJ,GADP,IAEI,qBAAsB,SACvB,eAAW+E,EAAW1E,GACzBjB,KAAKwU,YAAYhB,EAAUU,GACpBlU,KAAKyU,oBAAoBjB,EAASxS,KAAMgT,EAAUpT,EAAOK,KAlFlD,qBAqFlB,SAAQ8S,EAAUC,GAAuE,IAAD,OAA5DrT,EAA4D,uDAApD,GAAIC,EAAgD,uCAAzCC,EAAyC,uDAAlC,QAASG,EAAyB,uCAArBC,EAAqB,uDAAfjB,KAAKJ,SAC1E,GAA4C,UAAxCI,KAAK2B,QAAQqS,GAAUjT,KAAK,QAAqB,OAAOf,KAC5D,IAAMkU,EAAalU,KAAK2B,QAAQoS,GAEhC,GAAa,YAATlT,EAAoB,OAAO,wEAAuBkT,EAAUC,EAAUrT,EAAOC,EAAOC,EAAMG,EAAIC,GAClG,GAAgC,YAA5BiT,EAAWnT,KAAK,QAAuB,OAAOf,KAAKyU,oBAAoBV,EAAUC,EAAUpT,EAAOK,GACtG,IAAMyT,EAAYR,EAAWS,SAAS,QAAQd,QAAO,SAAC3S,GAAD,OAAUA,EAAKH,KAAK,eAAiBJ,KAC1F,OAAI+T,EAAUlU,OAAeR,KAAKyU,oBAAoBC,EAAU,GAAG1T,KAAMgT,EAAUpT,EAAOK,GACtFN,EAAMH,OAAeR,KAAK4U,uBAAuBb,EAAUC,EAAUrT,EAAOC,EAAOK,IACvFjB,KAAKiD,WAAW,CACZpC,KAAMqC,IAAEC,uBACRC,GAAI,SAACC,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAAWyQ,EAAUC,GAEnE,OADIzQ,EAAQE,IAAI,EAAKmR,uBAAuBb,EAAUC,EAAU3Q,EAAWC,EAAWrC,GAC/EsC,KAGRvD,QAtGO,wBAyGlB,SAAWgB,EAAIJ,EAAOD,EAAO+C,GAAyC,IAAD,OAArBzC,EAAqB,uDAAfjB,KAAKJ,SACjDiV,EAAe7U,KAAK2B,QAAQX,GAAI6B,SAClCa,GAAmB1D,KAAK8U,WAAWD,EAAa9T,KAAK,MAAO,YAAaJ,EAAOM,GACpFjB,KAAK8U,WAAWD,EAAa9T,KAAK,MAAO,YAAaH,EAAOK,GAC7DjB,KAAK+U,WAAW,CAACF,EAAa9T,KAAK,OAAQ,CAAEsF,gBAAiBzF,EAAMyF,iBAAmB,IAAI,EAAOpF,GAElG4T,EACKF,SAAS,QACT1S,SAAQ,SAACC,GAAD,mBAAC,gDAA0BA,EAAKnB,KAAK,MAAOH,EAAOD,EAAO+C,EAAmBzC,QAjH5E,wBAoHlB,SAAWD,GAA0B,IAAD,OAArBC,EAAqB,uDAAfjB,KAAKJ,SAChB8O,EAAK1O,KAAK2B,QAAQX,GACxB,GAAI0N,EAAGtK,SAAU,CACb,GAAIsK,EAAGxK,UAAW,OAClBwK,EAAGiG,SAAS,QAAQ1S,SAAQ,SAAC7B,GAAD,mBAAC,gDAAuBA,EAAEY,KAAMC,MAC5DyN,EAAG5K,iBAAiB7B,SAAQ,SAAC7B,GAAD,OAAO,EAAKuO,WAAWvO,EAAEY,KAAMC,MAC3D,kEAAiBD,EAAIC,OAClB,CACH,GAAIyN,EAAGxK,UAAW,OAClB,IAAM2Q,EAAenG,EAAG7L,SACxB,kEAAiB7B,EAAIC,GACjB4T,GAAqD,IAAnCA,EAAaF,WAAWnU,QAAcR,KAAKqE,WAAWwQ,EAAa7T,KAAMC,MA/HrF,6BAmIlB,SAAgBoL,GACZ,MAA0C,UAAtCrM,KAAK2B,QAAQ0K,GAAQtL,KAAK,SACuB,IAAjDf,KAAK2B,QAAQ0K,GAAQuH,SAAS,QAAQpT,OADgB6L,EAEnDrM,KAAK2B,QAAQ0K,GAAQuH,SAAS,QAAQ,GAAG5S,OAtIlC,kCAyIlB,SAAqBgU,EAAIC,GAAK,IAAD,OACzB,EAAiB,CAACD,EAAIC,GACjB5P,KAAI,SAAC6P,GAAD,OAAO,EAAKvT,QAAQ,EAAK2D,gBAAgB4P,OAC7C7P,KAAI,SAAC8P,GAAD,OAAOA,EAAER,SAAS,wBAAwBS,MAAMD,MAFzD,mBAAOE,EAAP,KAAWC,EAAX,KAGA,OAAOD,EAAGzT,UAAU0T,MA7IN,6BAclB,SAAsB9B,GAClB,IAAM+B,EAAU/B,EAASI,SAAS,QAAQ,GACpC4B,EAAkB,CAAEpV,EAAG,EAAGC,EAAG,GAC7BoV,EAAW,IAAIzT,IAQrB,OAPAwR,EAASmB,SAAS,sBACb1S,SAAQ,SAACC,GAAD,OAAUuT,EAAStU,IAAIwH,KAAKC,UAAU6K,EAAGpC,iBAAiBnP,QACvEuT,EAASxT,SAAQ,SAACyT,GACd,IAAMpR,EAAMqE,KAAKE,MAAM6M,GACvBF,EAAgBpV,GAAKkE,EAAIlE,EACzBoV,EAAgBnV,GAAKiE,EAAIjE,KAEP,IAAlBoV,EAASE,KAAmBnC,EAAS9S,YACzC8U,EAAgBpV,GAAKqV,EAASE,KAC9BH,EAAgBnV,GAAKoV,EAASE,KACvBrB,EACHiB,EAAQ7U,WAAY8U,EACpBD,EAAQxU,KAAK,SAAS2D,MAAQ,EAC9B6Q,EAAQxU,KAAK,SAAS0D,OAAS,EAC/B8Q,EAAQxU,KAAK,SAASoF,YAhCZ,GAAkC6J,EAAUxQ,K,0CCG1DyI,GAAqB2N,EAArB3N,QAASC,GAAY0N,EAAZ1N,QACX2N,GAAQ,GAmDCC,GAjDE,SAAC,GAAoB,IAAlB7F,EAAiB,EAAjBA,WACV8F,EAAU9F,EAAW+F,OAAO/F,EAAWgG,gBAAkBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAC3G,IAAKH,EAAS,OAAO,+BACrB,MAAkCI,mBAASJ,EAAQK,WAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OADAP,EAAQQ,UAAUD,GAEd,+BACI,uBAAKE,UAAU,YAAf,UACI,sBACIC,KAAK,SACLC,SAAU,EACVF,UAAU,oBACVG,QAAS,kBAAMZ,EAAQa,aACvBC,UAAW,SAAC3F,GAAD,MAAmB,MAAXA,EAAGtN,KAAgBmS,EAAQa,aALlD,SAOI,eAAC,IAAD,MAGJ,sBACIH,KAAK,SACLC,SAAU,EACVF,UAAU,oBACVG,QAAS,kBAAMZ,EAAQe,WACvBD,UAAW,SAAC3F,GAAD,MAAmB,MAAXA,EAAGtN,KAAgBmS,EAAQa,aALlD,SAOI,eAAC,IAAD,MAGJ,uBAAKJ,UAAU,sBAAf,UACKH,EADL,OAIA,sBAAKG,UAAU,SAAf,SACI,eAAC,IAAD,CACIO,IAAK,IAAM9O,GACX+O,IAAK,IAAM9O,GACX2N,MAAOA,GACPoB,SACI,SAACC,GAAYnB,EAAQoB,QAAQD,GAAQZ,EAAaY,IAEtDE,UAAU,EACVF,MAAOb,Y,2BCAhBgB,G,WAlDX,WAAYC,GAAM,oBACdtX,KAAKuX,IAAM,CAACD,GACZtX,KAAKwX,Y,6CAGT,WAEI,IAFS,IAAD,OACFC,EAAU,GACPlX,EAAI,EAAGA,EAAIP,KAAKuX,IAAI/W,OAAQD,GAAK,EAClCP,KAAKuX,IAAIhX,GAAGmX,cAAgBzO,MAAOjJ,KAAKuX,IAAIhX,GAAG0B,SAAQ,SAAC0V,GAAD,OAAO,EAAKJ,IAAI7K,KAAKiL,MAC3EF,EAAQ/K,KAAK1M,KAAKuX,IAAIhX,IAE/BP,KAAKuX,IAAME,I,eAGf,SAAEG,GACE,OAAO,IAAIP,EAAYrX,KAAKuX,IAAIlS,KAAI,SAACsS,GAAD,OAAOA,EAAEC,MAAI/D,QAAO,SAAC8D,GAAD,OAAOA,Q,eAGnE,SAAEC,GAGE,OAFA5X,KAAKuX,IAAMvX,KAAKuX,IAAIlS,KAAI,SAACsS,GAAD,OAAOA,EAAEC,MAAI/D,QAAO,SAAC8D,GAAD,OAAOA,KACnD3X,KAAKwX,YACExX,O,iBAGX,WACI,IAAMuX,EAAM,GAQZ,OAPAvX,KAAKuX,IAAItV,SAAQ,SAACqV,GACdO,OAAOC,KAAKR,GAAKrV,SAAQ,SAAC2B,GACtB2T,EAAI7K,KAAK4K,EAAI1T,UAGrB5D,KAAKuX,IAAMA,EACXvX,KAAKwX,YACExX,O,wBAGX,SAAW+X,EAAGC,GACV,IAAMC,EAAc,IAAIZ,EAAYrX,KAAKuX,KAIzC,OAHAQ,EAAEG,MAAM,KAAKjW,SACT,SAACkW,GAAD,MAA4B,MAAbA,EAAmBF,EAAYG,MAAQH,EAAYI,EAAEF,MAE9D,IAANH,EAAgBC,EAAY7F,IACtB,IAAN4F,EAAgBC,EACbA,EAAYK,M,eAGvB,WAAM,OAAOtY,KAAKuX,M,eAElB,WAAM,OAAOvX,KAAKuX,IAAI,O,KC/CpBgB,GAAY,SAACrX,GACf,IAAM0W,EAAI,IAAIP,GAAYnW,GAAMsX,WAAW,mBAAoB,GAC/D,MAAO,CACH7X,MAAOiX,EAAEY,WAAW,kBAAoBZ,EAAEY,WAAW,eACrDxX,GAAI,IAAIqW,GAAYnW,GAAMsX,WAAW,QACrC9X,SAAU,CACNN,EAAGqR,WAAWmG,EAAEY,WAAW,mBAC3BnY,EAAGoR,WAAWmG,EAAEY,WAAW,oBAE/B5X,MAAO,CACH8D,MAAO+M,WAAWmG,EAAEY,WAAW,uBAC/B/T,OAAQgN,WAAWmG,EAAEY,WAAW,wBAChCpS,QAASqS,SAASb,EAAEY,WAAW,oBAAqB,KAAO,EAC3DrS,MAAOyR,EAAEY,WAAW,kBACpBnS,gBAAiBuR,EAAEY,WAAW,kBAC9BlS,YAAasR,EAAEY,WAAW,yBAC1BjS,YAAakS,SAASb,EAAEY,WAAW,yBAA0B,OAKnEE,GAAY,SAACxW,GAAD,MAAW,CACzBvB,MAAO,IAAI0W,GAAYnV,GAAMsW,WAAW,yBAC5B,IAAInB,GAAYnV,GAAMsW,WAAW,sBAC7C3V,OAAQ,IAAIwU,GAAYnV,GAAMsW,WAAW,YACzC1V,OAAQ,IAAIuU,GAAYnV,GAAMsW,WAAW,YACzC5X,MAAO,CACHyF,gBAAiB,IAAIgR,GAAYnV,GAAMsW,WAAW,8BAClDpN,UAAWqG,WAAW,IAAI4F,GAAYnV,GAAMsW,WAAW,+BACvDhW,UAAW,IAAI6U,GAAYnV,GAAMsW,WAAW,8BCfrCG,GAZA,SAACC,GAAD,OAAgB,IAAIC,SAAQ,SAACC,IACxC,IAAIvN,IAAOwN,QAASC,YAAYJ,GAAY,SAAChT,EAAKqT,GAC9C,IAAMC,EAAS,IAAI7B,GAAY4B,GACzBvT,EAAQwT,EAAOV,WAAW,qBAAsB,GAAGnT,IAAIkT,IACvD1W,EAAQqX,EAAOV,WAAW,qBAAsB,GAAGnT,IAAIqT,IAC7D,ED0Ba,SAACQ,GAAD,OAAYA,EAAOV,WAAW,mBC1BPW,CAAaD,GAAzClY,EAAR,EAAQA,GAAIwJ,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,OACnBa,EAAiB,CAAEd,cAAaC,SAAQ2O,IAAKC,QAAQ7O,GAAeC,IAC1EqO,EAAQ,CACJ9X,KAAIsK,iBAAgBzJ,QAAO6D,iBCRjC4T,GAAc,SAACrJ,GAAD,OAAgBA,EAAW+F,OAAO/F,EAAWgG,gBACtBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,UAEjFqD,GAAa,SAACC,EAAOC,GACvBA,EAAS,CACL5Y,KAAMqC,IAAEwW,uBACRtW,GAAI,SAACzC,EAAOC,GACR,IAAM2C,EAAU+V,GAAYE,GAAOG,cAAchZ,EAAOC,GAExD,OADI2C,EAAQE,IAAI6V,GAAYE,GAAOjM,QAAQ5M,EAAOC,GAC3C2C,MAKbqW,GAAc,SAACJ,EAAOC,GACxB,IAAM/V,EAA4D,IAAxC8V,EAAMK,mBAAmBnJ,IAAIlQ,OACjDS,GAAM,IAAIpB,MAAOC,UACe,SAAlC0Z,EAAMK,mBAAmBhZ,MACzB4Y,EAAS,CACL5Y,KAAMqC,IAAE4W,uBACR1W,GAAI,SAACzC,EAAOC,GAAR,OAAkB4Y,EAAMK,mBAAmBnJ,IAAIzO,SAC/C,SAACjB,GAAD,OAAQsY,GAAYE,GAAOzE,WAAW/T,EAAIJ,EAAOD,EAAO+C,EAAmBzC,OAE/E8Y,aAAcrW,EACd/C,MAAO2Y,GAAYE,GAAOQ,SAASR,EAAMK,mBAAmBnJ,IAAI,IAChE9P,MAAO0Y,GAAYE,GAAO7V,SAAS6V,EAAMK,mBAAmBnJ,IAAI,MAGlC,SAAlC8I,EAAMK,mBAAmBhZ,MACzB4Y,EAAS,CACL5Y,KAAMqC,IAAE+W,uBACR7W,GAAI,SAACzC,EAAOC,GACR,IAAMsZ,EAAa,CAAEzW,IAAI,EAAMmC,IAAK,MAapC,OAZA4T,EAAMK,mBAAmBnJ,IAAIzO,SAAQ,SAACjB,GAClC,IAAMuC,EAAU+V,GAAYE,GAAOhW,cAC/BE,EAAoB/C,EAAQ,KAAMC,EAAO,KAAM,KAAMI,GAEzDkZ,EAAWzW,GAAKyW,EAAWzW,IAAMF,EAAQE,GACzCyW,EAAWtU,IAAMsU,EAAWtU,KAAOrC,EAAQqC,OAE3CsU,EAAWzW,IACX+V,EAAMK,mBAAmBnJ,IAAIzO,SACzB,SAACjB,GAAD,OAAQsY,GAAYE,GAAOW,WAAWnZ,EAAIJ,EAAOD,EAAO+C,EAAmBzC,MAG5EiZ,GAEXH,aAAcrW,EACd/C,MAAO2Y,GAAYE,GAAOQ,SAASR,EAAMK,mBAAmBnJ,IAAI,IAChE9P,MAAO0Y,GAAYE,GAAO7V,SAAS6V,EAAMK,mBAAmBnJ,IAAI,OAKtE/B,GAAa,SAAC6K,GAChB,IAAMvY,GAAM,IAAIpB,MAAOC,UACvB0Z,EAAMK,mBAAmBnJ,IAAIzO,SAAQ,SAACjB,GAAD,OAAQsY,GAAYE,GAAO7K,WAAW3N,EAAIC,OAG7EmZ,GAAc,SAACZ,EAAOC,EAAU1N,GAClCuN,GAAYE,GAAOY,YAAYrO,IAG7BsO,GAAa,SAACb,EAAOpX,EAAG0K,GAC1BwM,GAAYE,GAAOc,WAAWxN,IAG5ByN,GAAW,SAACf,EAAOC,EAAU5T,GAC/B,GAAIA,EAAE/C,QAAU+C,EAAE/C,OAAO0X,OAAS3U,EAAE/C,OAAO0X,MAAM,GAAI,CACjD,IAAMC,EAAK,IAAIC,WACfD,EAAGE,OAAS,SAACva,GACTwa,GAAcxa,EAAE0C,OAAO+X,QAAQC,MAAK,SAACxR,GACjC,IAAMtI,GAAK,IAAInB,MAAOC,UACtBqI,EAAoBkB,KAAKrI,EAAIsI,GAC7BmQ,EAAS,CACL5Y,KAAMqC,IAAE6X,UACRrN,QAAS,CAAE1M,KAAIsK,eAAe,2BAAMhC,EAAagC,gBAApB,IAAoC8N,KAAK,WAIlFqB,EAAGO,WAAWnV,EAAE/C,OAAO0X,MAAM,MAI/BS,GAAa,SAACzB,EAAOC,GACvBA,EAAS,CAAE5Y,KAAMqC,IAAEgY,aAGjBC,GAAW,SAAC3B,GACdF,GAAYE,GAAO2B,YAYjBC,GAAO,SAAC5B,GACNF,GAAYE,IAAOF,GAAYE,GAAO4B,QAExCC,GAAO,SAAC7B,GACVF,GAAYE,GAAO6B,QAGjBC,GAAiB,SAAC9B,EAAOC,GAC3BA,EAAS,CAAE5Y,KAAMqC,IAAEqY,gBAAiB7N,SAAS,KAG3C8N,GAAmB,SAAChC,EAAOC,GAC7BA,EAAS,CAAE5Y,KAAMqC,IAAEuY,kBAAmB/N,SAAS,K,mBCvBpCgO,GAnFA,SAAC,GAAgC,IAA9BzL,EAA6B,EAA7BA,WAAYhN,EAAiB,EAAjBA,WACpB0Y,EAAW,SAACpb,EAAGsF,GACjBA,EAAE+V,kBAEGtT,OAAOmG,QAAQ,mEACpBtG,EAAoBlE,OAAOgM,EAAW+F,OAAOzV,GAAK0P,EAAW+F,OAAOzV,GAAGS,GAAK,MAC5EiC,EAAW,CAAEpC,KAAMqC,IAAE2Y,aAAcnO,QAASnN,MAE1Cub,EAAU,SAACjW,GD6ED,IAAC2T,EC5Eb3T,EAAE+V,kBD4EWpC,EC3EDvJ,EAAYhN,ED4EnB,CACLpC,KAAMqC,IAAEuK,oBACRC,QAAS,CACLpC,eAAe,2BAAMgO,GAAYE,GAAOlO,gBAA1B,IAA0C8N,KAAK,IAC7DpY,GAAIsY,GAAYE,GAAOxY,OC7D/B,OAjBA+a,IAAMC,WAAU,WACZC,aAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACNC,SAAS/L,eAAe,aAAagM,WAEzCJ,aAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAMzN,EAAK0N,SAASE,cAAc,2CAC9B5N,GAAIA,EAAG2N,WAEfJ,aAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAMzN,EAAK0N,SAASE,cAAc,4CAC9B5N,GAAIA,EAAG2N,aAEhB,IAGC,uBAAK7F,UAAU,UAAf,UACI,yBACIA,UAAU,MACVG,QAASsE,GAAWnP,KAAK,GAAMmE,EAAYhN,GAC3CpC,KAAK,SACLG,GAAG,YACHub,WAAS,sCALb,SAOI,eAAC,KAAD,CAAO5G,KAAM,OAEhB1F,EAAW+F,OAAO3Q,KAAI,SAACqJ,EAAInO,GAAL,OACnB,uBAEIiW,UAAS,wBAAmBvG,EAAWgG,gBAAkB1V,EAAI,WAAa,QAC1EoW,QAAS,kBAAM1T,EAAW,CAAEpC,KAAMqC,IAAEsZ,WAAY9O,QAASnN,KACzDsW,UAAW,SAAC3F,GAAD,MAAmB,MAAXA,EAAGtN,KAAeX,EAAW,CAAEpC,KAAMqC,IAAEsZ,WAAY9O,QAASnN,KAC/EkW,KAAK,SACLC,SAAU,EACV1V,GAAE,cAAST,GAPf,UASI,wBAAMiW,UAAU,WAAhB,UACK9H,EAAGpD,eAAed,YAClBkE,EAAGpD,eAAeb,OAAS,MAAQ,GACnCiE,EAAGpD,eAAeb,UAGtBwF,EAAWgG,gBAAkB1V,EAC1B,yBACIiW,UAAU,eACVG,QAASmF,EACTjb,KAAK,SACL0b,WAAS,2CACTE,WAAS,aALb,SAOI,eAAC,KAAD,CAAQ9G,KAAM,OAElB,+BACJ,yBACIa,UAAU,gBACVG,QAASgF,EAAS7P,KAAK,GAAMvL,GAC7BM,KAAK,SACL0b,WAAS,4CACTE,WAAS,aALb,SAOI,eAAC,KAAD,CAAS9G,KAAM,OAEnB,eAAC,IAAD,CAAc+G,MAAM,SAAS7b,KAAK,OAAO8b,OAAO,QAAQ3b,GAAG,iBAlCtD0N,EAAG1N,WCrDtBtB,GAAgB,SAACwB,EAAMwE,GACzB,IAAInC,EAAU,CAAEE,IAAI,EAAMmC,IAAK,MAS/B,OARAF,EAAMzD,SAAQ,SAACiT,GACPA,EAAEvU,QAAUO,EAAKP,QACjB4C,EAAU,CACNE,IAAI,EACJmC,IAAK,oCAIVrC,GAEL5D,GAAgB,SAACuC,EAAMwD,EAAO7D,GAChC,IAAI0B,EAAU,CAAEE,IAAI,EAAMmC,IAAK,MACzBgX,EAAe/a,EAAMgS,QAAO,SAACqB,GAAD,OAAOA,EAAElU,KAAOkB,EAAKlB,MAAI,GAU3D,OATAa,EAAMgS,QAAO,SAACqB,GAAD,OAAQ0H,GAAgB1H,EAAErS,SAAW+Z,EAAa/Z,QAAUqS,EAAEvU,QAAUic,EAAajc,SAC7FsB,SAAQ,SAACiT,GACFA,EAAEvU,QAAUuB,EAAKvB,QACjB4C,EAAU,CACNE,IAAI,EACJmC,IAAK,oCAIdrC,GC8GIsZ,GArHG,SAAChO,GACf,IAAMiO,EAAoBf,IAAMgB,SACxB9Z,EAA2B4L,EAA3B5L,WAAYgN,EAAepB,EAAfoB,WACd+M,EAAkB,SAACC,GAErBA,EAAQrc,MAAM8D,MAAd,UAAyBoY,EAAkBI,QAAQC,YAAc,EAAjE,MACAF,EAAQrc,MAAM6D,OAAd,UAA0BqY,EAAkBI,QAAQE,aAAe,EAAnE,OAIJpB,qBAAU,WACN1T,OAAO+U,iBAAiB,UAAU,kBAAMP,EAAkBI,QAAQI,WAC7Drb,SAAQ,SAACyM,GAAD,OAAQA,EAAG6O,UAAUC,SAAS,kBAAoBR,EAAgBtO,WAChF,IA+EH,OA3CAsN,qBAAU,WACN/L,EAAW+F,OAAO/T,SAAQ,SAAC4D,EAAGtF,GAC1B,IAAIsF,EAAEqQ,SAAN,CACA,IAAQlV,EAAO6E,EAAP7E,GACFsJ,EAtCa,SAAC2S,EAASjc,EAAIsK,GACrC0R,EAAgBC,GAChB,IAAMhd,EAAKwd,IAAU,2BAAKC,GAAN,IAAiBC,UAAWV,KAChDhd,EAAG2d,YAAY,CACXC,0BAA2B,kBAAM,GACjCC,SAFW,SAEF5c,EAAMwD,GACXxD,EAAKH,KAAK,QAAV,2BAAwBG,EAAKH,KAAK,UAAlC,IAA4C2D,YAEhDqZ,UALW,SAKD7c,EAAMuD,GACZvD,EAAKH,KAAK,QAAV,2BAAwBG,EAAKH,KAAK,UAAlC,IAA4C0D,aAEhDuZ,eARW,SAQI9c,GAAQ,MAA6B,UAAtBA,EAAKH,KAAK,SACxCkd,iBATW,SASM/c,GAAQ,MAA6B,UAAtBA,EAAKH,KAAK,WAG9Cd,EAAGie,UAAU,CACTC,qBAAqB,EACrBC,UAAU,EACVC,SAAS,IAEb,IAAMtI,EAAU,IAAKuI,EAAQzG,QAAb,CACZ7W,EAAIf,EAAIgD,EAAYgN,EAAY3E,EAAgB5L,GAAeC,IAWnE,OATAM,EAAGse,YAAY,CACXC,SAAS,EACTC,eAFW,WAGP,MAAO,QAEXC,YAAa,8CACbC,SAAU,SAAC5Z,EAAGC,EAAGmN,GAAQA,EAAElO,SAAU8R,EAAQvI,QAAQzI,EAAE/D,KAAMgE,EAAEhE,SAEnE+U,EAAQ6I,4BACD7I,EAMW8I,CAAmBzC,SAAS/L,eAAerP,GAAKA,EAAI6E,EAAEyF,gBACpErI,EAAW,CAAEpC,KAAMqC,IAAE4b,mBAAoB5I,SAAU5L,EAAOyU,MAAOxe,UAEtE,CAAC0P,EAAW+F,OAAOxV,SAEtBwb,qBAAU,WACF/L,EAAW+F,OAAO/F,EAAWgG,gBAAkBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,UAC3FjG,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAAS8I,iBAE1D,CAAC/O,EAAWgG,gBAEf+F,qBAAU,WAC0C,oBAArCyB,IAAU,OAAQ,gBACzBA,IAAUwB,IAAIV,KAE8B,oBAArCd,IAAU,OAAQ,gBACzBG,IAAYH,IAAWvd,IAAGgf,KAEgB,oBAAnCzB,IAAU,OAAQ,cACzBS,IAAUT,KAEd,IAAM0B,EAAkBtH,OAAOuH,YAAY,IAAIC,gBAAgB/W,OAAOgX,SAASC,QAAQC,WAAWC,EAClG,GAAIN,EAAiB,CACjB,IAAM7V,EAAeX,KAAKE,MAAMC,KAAKqW,IAC/BO,GAAM,IAAI7f,MAAOC,UAAU8E,WACjCuD,EAAoByB,WAAW8V,GAC/BvX,EAAoBkB,KAAKqW,EAAKpW,GAC9BhB,OAAOqX,QAAQC,aAAa,GAAIxD,SAASyD,MAAOvX,OAAOgX,SAASQ,UAEpE,IAAMC,EAAa5X,EAAoBwB,eAAetE,KAAI,SAAC2a,GAAD,MAAc,CACpEhf,GAAIgf,EACJ1U,eAAgB,CAAEd,YAAa,GAAIC,OAAQ,GAAI2O,KAAK,OAExDnW,EAAW,CACPpC,KAAMqC,IAAE+c,eACRvS,QAASqS,MAEd,IAGC,uBACInf,MAAO,CACHsf,KAAM,EACNC,cAAe,SACfzY,QAAS,OACThD,MAAO,QALf,UAQI,eAAC,GAAD,CAAQuL,WAAYA,EAAYhN,WAAYA,IAC5C,uBAAKrC,MAAO,CAAEsf,KAAM,EAAGE,WAAY,SAAW5J,UAAU,kBAAkB6J,IAAKvD,EAA/E,UACK7M,EAAW+F,OAAO3Q,KAAI,SAACqJ,EAAInO,GAAL,OACnB,sBACIK,MAAO,CAAEsF,OAAQ,EAAGwB,QAASuI,EAAWgG,gBAAkB1V,EAAI,QAAU,QACxES,GAAI0N,EAAG1N,GAEPwV,UAAU,iBADL9H,EAAG1N,OAIhB,eAAC,GAAD,CAAUiC,WAAYA,EAAYgN,WAAYA,W,qCC5H9DqQ,KAAWC,cAAc,SAEzB,IA8CeC,GA9CD,SAAC,GAER,IADHC,EACE,EADFA,WAAYC,EACV,EADUA,UAAWb,EACrB,EADqBA,MAAOc,EAC5B,EAD4BA,SAE9B,EAAgCxK,mBAAS,IAAzC,mBAAOyK,EAAP,KAAiBC,EAAjB,KACA,EAA4B1K,mBAASuK,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAwB5K,mBAAS,MAAjC,mBAAO6K,EAAP,KAAaC,EAAb,KAmBA,OAlBAjF,qBAAU,YACY,IAAd0E,GACAK,GAAU,GACVF,EAAY,WACZjT,aAAaoT,GACbC,EAAQpT,YAAW,WACfkT,GAAU,GACVF,EAAY,MACb,OAEHA,EAAY,WACZjT,aAAaoT,GACbC,EAAQpT,YAAW,WACfkT,GAAU,KACX,SAER,CAACL,IAECI,EAED,eAAC,KAAD,CACIA,OAAQA,EACRI,aAAa,yBACbC,eAAgBV,EAChBjK,UAAU,QACV4K,iBAAgB,kBAAaR,GALjC,SAOI,uBAAKpK,UAAS,wBAAmBoK,GAAjC,UACI,uBAAKpK,UAAU,eAAf,UACI,sBAAKA,UAAU,iBAAf,SAAiCqJ,IACjC,0BAAQhf,KAAK,SAAS2V,UAAU,QAAQG,QAAS8J,EAAjD,UACKA,EAAa,uBAAMY,cAAY,OAAlB,kBAAoC,GAClD,uBAAM7K,UAAU,UAAhB,yBAGPmK,OAjBO,ICeTW,GAzCG,SAAC,GAAgC,IAA9Bb,EAA6B,EAA7BA,WAAYxQ,EAAiB,EAAjBA,WAC7B,EAAwBkG,mBAAS,IAAjC,mBAAOpV,EAAP,KAAawgB,EAAb,KACA,EAAwCpL,mBAAS,IAAjD,mBAAOqL,EAAP,KAAqBC,EAArB,KACQC,EAA4BzR,EAA5ByR,aAAchB,EAAczQ,EAAdyQ,UAElBtd,EACAse,EADAte,GAAIyc,EACJ6B,EADI7B,MAAO8B,EACXD,EADWC,WAAYC,EACvBF,EADuBE,SAAUC,EACjCH,EADiCG,aAAcC,EAC/CJ,EAD+CI,aAAc/H,EAC7D2H,EAD6D3H,aAGjEiC,qBAAU,WACNyF,EAAgB,MACjB,CAACf,IAEJ1E,qBAAU,WACNuF,EAAQ,CAAE5gB,MAAOmhB,GAAgB,GAAIlhB,MAAOihB,IAC5CJ,EAAgB,MACjB,CAACK,EAAcD,IAYlB,OACI,eAACE,GAAD,CAAatB,WAAYA,EAAYC,UAAWA,EAAWb,MAAOA,EAAlE,SACI,wBAAMmC,SAZC,SAACnc,GACZA,EAAEsW,iBACF,IAAM5Y,EAAUH,EAAGrC,EAAKJ,MAAOI,EAAKH,OAChC2C,EAAQE,IACRge,EAAgB,IAChBF,EAAQ,CAAE5gB,MAAOmhB,GAAgB,GAAIlhB,MAAOihB,IAC5CpB,KACGgB,EAAgBle,EAAQqC,MAK3B,UACI,uBAAK4Q,UAAU,qBAAf,UACI,eAACoL,EAAD,CAAU7gB,KAAMA,EAAMwgB,QAASA,EAASxH,aAAcA,IACrDyH,EAAe,sBAAKhL,UAAU,MAAf,SAAsBgL,IAAsB,kCAEhE,sBAAKhL,UAAU,eAAf,SACI,yBAAQ3V,KAAK,SAAS2V,UAAU,kBAAhC,SAAmDmL,Y,SCsExDM,GAnGK,SAACzI,GAAD,MAAW,CAC3B,CACI3Y,KAAM,SACNqhB,KAAM,OACNC,KAAMC,KACNC,OAAQ9I,GACR+I,QAAQ,EACRC,OAAQ,UAEZ,CAAE1hB,KAAM,QACR,CACIA,KAAM,cACNqhB,KAAM,OACNC,KAAMK,KACNH,OAAQ9H,GACR+H,QAAQ,EACRC,OAAQ,UAEZ,CACI1hB,KAAM,OACNqhB,KAAM,OACNC,KAAMM,KACNJ,OAAQ,SAACtK,EAAG3V,GAAJ,MAAU,CACd,CAAEsgB,GAAI,kBAAMrI,GAAWtC,IAAO4K,KAAM,QACpC,CAAED,GAAI,kBAAMrI,GAAWtC,EAAG3V,EAAGwgB,OAAO,gBAAgBD,KAAM,aAE9DL,QAAQ,GAEZ,CACIzhB,KAAM,SACNqhB,KAAM,QACNC,KAAMU,KACNR,OAAQlH,GACRmH,QAAQ,EACRC,OAAQ,kBAEZ,CAAE1hB,KAAM,QACR,CACIA,KAAM,SACNqhB,KAAM,OACNC,KAAMW,KACNT,OAAQjH,GACRkH,OAAQ9I,EAAMuJ,YACdR,OAAQ,UAEZ,CACI1hB,KAAM,SACNqhB,KAAM,OACNC,KAAMa,KACNX,OAAQhH,GACRiH,OAAQ9I,EAAMyJ,YACdV,OAAQ,uBAEZ,CAAE1hB,KAAM,QACR,CACIA,KAAM,SACNqhB,KAAM,OACNC,KAAMe,KACNb,OAAQzI,GACR0I,OAAS9I,EAAM2J,aAAiD,QAAlC3J,EAAMK,mBAAmBhZ,KACvD0hB,OAAQ,UAEZ,CACI1hB,KAAM,SACNqhB,KAAM,SACNC,KAAMiB,KACNf,OAAQ1T,GACR2T,OAAQ9I,EAAM2J,YACdZ,OAAQ,8BAEZ,CAAE1hB,KAAM,QACR,CAAEA,KAAM,SACR,CACIA,KAAM,SACNqhB,KAAM,WACNC,KAAMkB,KACNhB,OAAQ7G,GACR8G,QAAQ,GAEZ,CACIzhB,KAAM,SACNqhB,KAAM,QACNC,KAAMmB,KACNjB,OAAQ/G,GACRgH,QAAQ,GAEZ,CACIzhB,KAAM,OACNqhB,KAAM,SACNC,KAAMoB,KACNlB,OAAQ,SAACtK,EAAG3V,GAAJ,MAAU,CACd,CAAEsgB,GAAI,kBAAMtI,GAAYrC,EAAG3V,EAAG,QAAQugB,KAAM,OAC5C,CAAED,GAAI,kBAAMtI,GAAYrC,EAAG3V,EAAG,QAAQugB,KAAM,SAEhDL,QAAQ,GAEZ,CAAEzhB,KAAM,U,mCCtGZ,SAAS2iB,GAAT,GAEI,IADAC,EACD,EADCA,KAAMvB,EACP,EADOA,KAAMG,EACb,EADaA,OAAQC,EACrB,EADqBA,OAAQ5L,EAC7B,EAD6BA,SAAU6L,EACvC,EADuCA,OAEtC,OACI,eAAC,KAAD,CAAMmB,WACF,eAAC,KAAD,UACI,eAAC,GAAD,CACID,OAAMvB,OAAMG,SAAQC,SAAQ5L,WAAU6L,aAHlD,SASKF,IAAShd,KAAI,gBAAGqd,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,eAAC,KAAD,CAAUhM,QAAS+L,EAAnB,SAAmCC,GAAPA,QAKxE,IAAMgB,GAAe,SAAC,GAEf,IADHF,EACE,EADFA,KAAMvB,EACJ,EADIA,KAAMG,EACV,EADUA,OAAQC,EAClB,EADkBA,OAAQ5L,EAC1B,EAD0BA,SAAU6L,EACpC,EADoCA,OAEhCqB,EAAU7H,IAAM8H,YACtB,OACI,uCACI,wBAAOhjB,KAAK,OAAOwf,IAAKuD,EAAShjB,MAAO,CAAE8G,QAAS,QAAUoc,OAAO,WAAW7M,SAAUoL,IACzF,eAAC,GAAD,CACIoB,OAAMvB,OAAMI,SAAQ5L,WAAU2L,OAAQ,kBAAMuB,EAAQ1G,QAAQb,SAASkG,eAO/EwB,GAAW,SAAC,GAAD,IACb7B,EADa,EACbA,KAAMG,EADO,EACPA,OAAQC,EADD,EACCA,OAAQ5L,EADT,EACSA,SADT,OAGb,uBACID,KAAK,SACLC,SAAUA,EACVF,UAAS,eAAU8L,EAAS,SAAW,IACvC3L,QAAS0L,EACTxL,UAAW,SAAC3F,GAAD,MAAmB,MAAXA,EAAGtN,KAAeye,KALzC,UAOI,eAAC,KAAD,CACIpL,SAAUoL,EACV2B,QAAS1B,EACT9L,UAAU,iBAEd,+BACK0L,QAKP+B,GAAe,SAAC,GAAD,IACjBR,EADiB,EACjBA,KAAMvB,EADW,EACXA,KAAMG,EADK,EACLA,OAAQC,EADH,EACGA,OAAQ5L,EADX,EACWA,SAAU6L,EADrB,EACqBA,OADrB,OAGjB,uBACI9L,KAAK,SACLzV,GAAE,iBAAY0V,GACdA,SAAUA,EACVF,UAAS,eAAU8L,EAAS,SAAW,IACvC3L,QAAS,kBAAO2L,GAAUD,KAC1BxL,UAAW,SAAC3F,GAAD,OAAQoR,GAAqB,MAAXpR,EAAGtN,KAAeye,KAC/C9F,WAAUgG,EAASA,EAAOrK,MAAM,KAAK,GAAK,GAP9C,UASI,sBAAK1B,UAAU,OAAf,SAAsB,eAACiN,EAAD,CAAM9N,KAAK,SACjC,sBAAK/U,MAAO,CAAEsjB,SAAU,IAAxB,SAA+BhC,QAYjCiC,GAAO,kBAAM,sBAAK3N,UAAU,cAC5B4N,GAAO,kBAAM,sBAAK5N,UAAU,cAC5B6N,GAAQ,kBAAM,sBAAK7N,UAAU,WCvD7B8N,I,OAAS,SAAC,GAA2B,IAAzB9K,EAAwB,EAAxBA,MAAOvW,EAAiB,EAAjBA,WACfshB,EAAUtC,GAAYzI,GAK5B,OAJAuC,IAAMC,WAAU,YArBD,SAACuI,GAChB,IAAIzM,EAAO,GACLzS,EAAM,GACZkf,EAAQtiB,SAAQ,SAACogB,EAAQ9hB,GACjB8hB,EAAOE,QACPF,EAAOE,OAAOrK,MAAM,KAAKjW,SAAQ,SAAC2B,GAC9B,CAACA,EAAKA,EAAI4gB,QAAQ,OAAQ,YAAYviB,SAAQ,SAACwiB,GAC3C3M,GAAI,UAAO2M,EAAP,KACJpf,EAAIof,GAAKrI,SAAS/L,eAAT,iBAAkC9P,EAAI,aAK/D0b,aAAQnE,GAAM,SAACoE,EAAOwI,GAClBxI,EAAMC,iBACN9W,EAAIqf,EAAQC,UAAUtI,WAOtBuI,CAAWL,KACZ,IAGC,0BAAQ/N,UAAU,SAAlB,UACI,0BAASA,UAAU,kBAAnB,SAEQgD,EAAMxD,OAAOwD,EAAMvD,eAAnB,UACSuD,EAAMxD,OAAOwD,EAAMvD,eAAe3K,eAAed,YAD1D,yBAC+F,KAGvG,2BAASgM,UAAU,UAAnB,UAEQ+N,EAAQlf,KAAI,WAET9E,GAAO,IADN2hB,EACK,EADLA,KAAMI,EACD,EADCA,OAAQD,EACT,EADSA,OAAQF,EACjB,EADiBA,KAAMthB,EACvB,EADuBA,KAEtBgO,EAAQ,CACVqT,OACAI,SACA5L,SAAUnW,EAAI,EACdqD,IAAKse,EACLG,OAAQ,SAACxc,GAAD,OAAOwc,EAAO7I,EAAOvW,EAAY4C,IACzC4d,KAAMtB,EACNI,OARC,EAD6BA,QAWlC,OAAQ1hB,GACR,IAAK,OAAQ,OAAO,eAAC,GAAD,wBAAkBN,KACtC,IAAK,QAAS,OAAO,eAAC,GAAD,wBAAmBA,KACxC,IAAK,SAAU,OAAO,eAAC,GAAD,eAAcsO,IACpC,IAAK,OAAQ,OAAO,eAAC2U,GAAD,eAAc3U,IAClC,IAAK,cAAe,OAAO,eAAC,GAAD,eAAkBA,IAC7C,IAAK,SAAU,OAAO,eAAC,GAAD,eAAkBA,IACxC,QAAS,OAAO,mCAIxB,wBAAOhO,KAAK,OAAOG,GAAG,eAAeJ,MAAO,CAAE8G,QAAS,QAAUoc,OAAO,yBAE5E,eAAC,GAAD,SCyBGe,I,OA3FQ,SAAC,GAAgC,IAA9B5U,EAA6B,EAA7BA,WAAYhN,EAAiB,EAAjBA,WAC5B6hB,EAAW7U,EAAW+F,OAAO/F,EAAWgG,eAC9C,EAAsCE,mBAAS,IAA/C,mBAAO3L,EAAP,KAAoBua,EAApB,KACA,EAA4B5O,mBAAS,IAArC,mBAAO1L,EAAP,KAAeua,EAAf,KACMC,EAAWC,uBAAY,SAAChkB,GAAD,OAAUA,GAAQA,EAAKikB,UAAS,IAC7DnJ,qBAAU,WACD8I,GAGDC,EAAeD,EAASxZ,eAAed,aAAe,IACtDwa,EAAUF,EAASxZ,eAAeb,QAAU,MAH5Csa,EAAe,IAAKC,EAAU,OAKnC,EAAEF,IAAaA,EAASxZ,eAAe8N,MAE1C,IAOMgM,EAAoB,SAAC9Z,GACvBrI,EAAW,CACPpC,KAAMqC,IAAEuK,oBACRC,QAAS,CACLpC,iBACAtK,GAAI8jB,EAAS9jB,OAuBzB,OACI,eAAC,GAAD,CACI0f,WAAYoE,IAAaA,EAASxZ,eAAe8N,IACjDqH,WAAaqE,GAAyC,IAA7B7U,EAAWgG,cAZzB,WACV6O,EAEDM,EAAkB,2BACXN,EAASxZ,gBADC,IAEb8N,IAAKC,QAAQyL,EAASxZ,eAAeb,QAAUqa,EAASxZ,eAAed,gBAJhEvH,EAAW,CAAEpC,KAAMqC,IAAEsZ,WAAY9O,QAAS,KAWK,KAC1DmS,MAAM,kBAHV,SAKI,wBAAMrJ,UAAU,eAAewL,SAxBxB,SAACnc,GACZA,EAAEsW,iBACG2I,EACAM,EAAkB,CAAE5a,cAAaC,SAAQ2O,KAAK,IAnBnDnW,EAAW,CACPpC,KAAMqC,IAAE6X,UACRrN,QAAS,CAAE1M,IAAI,IAAInB,MAAOC,UAAWwL,eAAgB,CAAEd,cAAaC,SAAQ2O,KAAK,OAsCjF,UACI,kDACA,wBACIiH,IAAK4E,EACLI,YAAY,oBACZC,UAAQ,EACRpO,MAAO1M,EACPyM,SAAU,SAACpR,GAAD,OAAOkf,EAAelf,EAAE/C,OAAOoU,UAE7C,2CACA,wBACImO,YAAY,qBACZnO,MAAOzM,EACPwM,SAAU,SAACpR,GAAD,OAAOmf,EAAUnf,EAAE/C,OAAOoU,UAExC,uBAAKV,UAAU,SAAf,UACI,yBAAQ3V,KAAK,SAAS2V,UAAU,kBAAhC,kBACCsO,EAAW,+BACR,uCACI,sBAAKtO,UAAU,YACf,yBACI3V,KAAK,SACL2V,UAAU,oBACVG,QAzCP,WACjByF,SAASE,cAAc,sBAAsBD,SAqCzB,wCCpCbkJ,I,OAvCI,SAAC,GAAgC,IAA9BtV,EAA6B,EAA7BA,WAAYhN,EAAiB,EAAjBA,WAC9B,EAA8CkT,mBAAS,IAAvD,mBAAOqP,EAAP,KAAwBC,EAAxB,KACA,EAAgCtP,mBAAS,QAAzC,mBAAOuP,EAAP,KAAiBC,EAAjB,KACMC,EAAO3V,EAAW4V,YACrB5V,EAAW+F,OAAO/F,EAAWgG,gBAAkBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAC9F8F,qBAAU,WACF4J,IACAH,EAAmBxV,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAAS4P,kBACxEH,EAAY,WAEjB,CAACC,IAEJ,IAGMG,EAAI,UAAMzd,OAAOgX,SAAS0G,SAAtB,aAAmC1d,OAAOgX,SAAS2G,MAAnD,OAA0D3d,OAAOgX,SAASQ,SAA1E,cAAwF0F,GASlG,OACI,eAAC,GAAD,CACI9E,UAAWzQ,EAAW4V,WACtBhG,MAAM,iBACNY,WAhBW,WACfxd,EAAW,CAAEpC,KAAMqC,IAAEqY,gBAAiB7N,SAAS,KAY/C,SAKI,uBAAK8I,UAAU,cAAf,UACI,wBAAO0P,UAAQ,EAAC1P,UAAU,SAASU,MAAO6O,IAC1C,yBAAQpP,QAhBP,WACTwP,UAAUC,UAAUC,UAAUN,GAAMjL,MAAK,WACrC6K,EAAY,WACZvJ,SAASkK,uBAAuB,UAAU,GAAGnB,QAC7C/I,SAASkK,uBAAuB,UAAU,GAAGC,aAYlB1lB,KAAK,SAAS2V,UAAU,UAA/C,SAA0DkP,WCE3Dc,I,cApCE,SAAC,GAEX,IADHC,EACE,EADFA,IAAKC,EACH,EADGA,KAAMxP,EACT,EADSA,MAAOD,EAChB,EADgBA,SAAUxS,EAC1B,EAD0BA,OAEtBwgB,EAAWlJ,IAAM8H,YACvB,OACI,uBACIrN,UAAU,YACVG,QAAS,kBAAMsO,EAAS/H,QAAQiI,SAChCtO,UAAW,kBAAMoO,EAAS/H,QAAQiI,SAClC1O,KAAK,UACLC,SAAU,EALd,UAOI,2BACIF,UAAU,eACVU,MAAOuP,EACPP,UAAQ,EACRS,WAAW,UAEf,2BACInQ,UAAU,gBACVmQ,WAAW,QACLzP,QAAOD,WACb2P,oBAAkB,QAClBhmB,MAAO,CAAE6D,UACT4b,IAAK4E,IAET,2BACIzO,UAAU,gBACV0P,UAAQ,EACRhP,MAAOwP,EACPC,WAAW,eC2BZE,GAtDO,SAAC,GAAgC,IAA9B5W,EAA6B,EAA7BA,WAAYhN,EAAiB,EAAjBA,WACjC,EAA0CkT,mBAAS,IAAnD,mBAAOzW,EAAP,KAAsBonB,EAAtB,KACA,EAA0C3Q,mBAAS,IAAnD,mBAAOxW,EAAP,KAAsBonB,EAAtB,KACA/K,qBAAU,WACF/L,EAAW+F,OAAO/F,EAAWgG,gBAAkBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,WAC3F4Q,EAAiB7W,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAAS8Q,oBACtED,EAAiB9W,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAAS+Q,uBAE3E,CAAChX,EAAW+F,OAAO/F,EAAWgG,gBAAkBhG,EAAW+F,OAAO/F,EAAWgG,eAAeC,WAW/F,OACI,eAAC,GAAD,CACIwK,UAAWzQ,EAAWiX,cACtBzG,WAZM,kBAAMxd,EAAW,CAAEpC,KAAMqC,IAAEuY,kBAAmB/N,SAAS,KAa7DmS,MAAM,WAHV,SAKI,uBAAKrJ,UAAU,oBAAf,UACI,iCACI,iDACA,eAAC,GAAD,CACIiQ,IAAI,8CACJC,KAAK,IACLxP,MAAOxX,EACPuX,SAAU,SAACpR,GAAD,OAAOihB,EAAiBjhB,EAAE/C,OAAOoU,QAC3CzS,OAAQ,SAGhB,iCACI,kDACA,eAAC,GAAD,CACIgiB,IAAI,8CACJC,KAAK,IACLxP,MAAOvX,EACPsX,SAAU,SAACpR,GAAD,OAAOkhB,EAAiBlhB,EAAE/C,OAAOoU,QAC3CzS,OAAQ,SAGhB,sBAAK+R,UAAU,SAAf,SACI,yBAAQ3V,KAAK,SAAS2V,UAAU,kBAAkBG,QApCnD,WACX1G,EAAW+F,OAAO/F,EAAWgG,eAAeC,SAAS/Q,qBAAqB,CACtEzF,cAAc,0BAAD,OAA4BA,EAA5B,KACbC,cAAc,0BAAD,OAA4BD,EAA5B,OAEjBuD,EAAW,CAAEpC,KAAMqC,IAAEuY,kBAAmB/N,SAAS,KA+BrC,0BCtBLyZ,GApBH,WACR,MAAiCC,qBAAWC,IAASC,KAArD,mBAAOrX,EAAP,KAAmBhN,EAAnB,KACA,OACI,uBAAKuT,UAAU,YAAf,UACI,eAAC,GAAD,CAAgBvG,WAAYA,EAAYhN,WAAYA,IACpD,eAAC,GAAD,CAAYgN,WAAYA,EAAYhN,WAAYA,IAChD,eAACskB,GAAD,CAAetX,WAAYA,EAAYhN,WAAYA,IACnD,eAACukB,GAAD,CACI/G,WAAY,kBAAMxd,EAAW,CAAEpC,KAAMqC,IAAEukB,eACvCxX,WAAYA,IAEhB,eAAC,GAAD,CAAQuJ,MAAOvJ,EAAYhN,WAAYA,IACvC,0BAASuT,UAAU,OAAO5V,MAAO,CAAE8G,QAAS,OAAQggB,SAAU,UAA9D,SACI,eAAC,GAAD,CAAWzkB,WAAYA,EAAYgN,WAAYA,MAEnD,eAAC,IAAD,CAAcyM,MAAM,SAAS7b,KAAK,OAAO8b,OAAO,cCbxCtD,QACW,cAA7B/Q,OAAOgX,SAASqI,UAEe,UAA7Brf,OAAOgX,SAASqI,UAEhBrf,OAAOgX,SAASqI,SAASC,MAAM,2DClBnC,IAceC,GAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBjN,MAAK,YAEnB,IADHkN,EACE,EADFA,OAAQC,EACN,EADMA,OAAQC,EACd,EADcA,OAAQC,EACtB,EADsBA,OAAQC,EAC9B,EAD8BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFpBO,IAASC,OACL,eAAC,IAAMC,WAAP,UACI,eAAC,GAAD,MAEJnM,SAAS/L,eAAe,SFqHtB,kBAAmB8V,WACrBA,UAAUqC,cAAcC,MACrB3N,MAAK,SAAC4N,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAMtlB,YEhH5BskB,M,gCCtBA,IAAMplB,EAAwB,CAE1BkQ,KAAM,SAACP,EAAGC,GAAJ,gBAAY,SAACD,EAAEhS,EAAIiS,EAAEjS,EAAM,GAAf,SAAoBgS,EAAE/R,EAAIgS,EAAEhS,EAAM,GAAM,KAE1D0oB,OAAQ,SAAC9W,EAAG+W,GAAJ,MAAW,CACf5oB,EAAG6R,EAAE7R,EAAI+N,KAAK8a,IAAID,GAAK/W,EAAE5R,EAAI8N,KAAK+a,IAAIF,GACtC3oB,EAAG4R,EAAE7R,EAAI+N,KAAK+a,IAAIF,GAAK/W,EAAE5R,EAAI8N,KAAK8a,IAAID,KAG1CG,SAAU,SAAC/W,EAAGC,GAAJ,OAAaD,EAAEhS,GAAKiS,EAAEjS,GAAKgS,EAAE/R,EAAIgS,EAAEhS,GAAO+R,EAAEhS,GAAKiS,EAAEjS,GAAKgS,EAAE/R,EAAIgS,EAAEhS,EAAM8N,KAAKib,GAAK,GAE1FC,UAX0B,SAWhBC,EAAMlX,EAAGC,GACf,OAAQlE,KAAKob,KAAKD,GAAQtpB,KAAKmpB,SAAS/W,EAAGC,GAAK,EAAIlE,KAAKib,KAAO,EAAIjb,KAAKib,KAG7Evc,cAf0B,SAeZlK,EAAGP,EAAGgQ,EAAGC,GACnB,IAAMiX,GAAQlX,EAAE/R,EAAIgS,EAAEhS,IAAM+R,EAAEhS,EAAIiS,EAAEjS,GAC9B4oB,EAAIhpB,KAAKqpB,UAAUC,EAAMlX,EAAGC,GAE5BJ,EAAI,CAAE7R,EADFJ,KAAK2S,KAAKP,EAAGC,GAAK1P,EACVtC,EAAG+B,GACrB,EAAiBpC,KAAK+oB,OAAO9W,EAAG+W,GAAxB5oB,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACX,MAAO,CAAED,EAAGA,EAAIgS,EAAEhS,EAAGC,EAAGA,EAAI+R,EAAE/R,IAGlCqC,kBAxB0B,SAwBRkV,EAAGxF,EAAGC,GACpB,IAAMJ,EAAI,CAAE7R,EAAGwX,EAAExX,EAAIgS,EAAEhS,EAAGC,EAAGuX,EAAEvX,EAAI+R,EAAE/R,GAC/BipB,GAAQlX,EAAE/R,EAAIgS,EAAEhS,IAAM+R,EAAEhS,EAAIiS,EAAEjS,GAC9B4oB,EAAIhpB,KAAKqpB,UAAUC,EAAMlX,EAAGC,GAClC,EAAiBrS,KAAK+oB,OAAO9W,GAAI+W,GAAzB5oB,EAAR,EAAQA,EAER,MAAO,CAAEgC,EAFT,EAAW/B,EAEIsC,EAAGvC,EADRJ,KAAK2S,KAAKP,EAAGC,MAKhB5P,O,qIClCf,IAyBe+mB,EAzBAC,EAAQ,IAyBRD,CAvBI,CACfE,SAAU,GACVhQ,uBAAwB,uBACxBvW,uBAAwB,uBACxB8W,uBAAwB,uBACxBH,uBAAwB,uBACxB2N,YAAa,aACblX,eAAgB,iBAChBI,aAAc,eACdgZ,UAAW,YACXC,SAAU,WACVnc,oBAAqB,sBACrBmC,SAAU,WACVC,SAAU,WACViP,mBAAoB,qBACpB/D,UAAW,YACXkF,eAAgB,iBAChBzD,WAAY,aACZX,aAAc,eACdX,UAAW,YACXK,gBAAiB,kBACjBE,kBAAmB,sB,+DCpBjBoO,EAAS,CACXC,MAAO,CACH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAEvGC,KAAM,CACF,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAoC5FC,EAhCE,SAAC,GAA+B,IAA7B5iB,EAA4B,EAA5BA,MAAO6iB,EAAqB,EAArBA,SAAUppB,EAAW,EAAXA,KACjC,EAA8Bkb,IAAM5F,UAAS,GAA7C,mBAAO+T,EAAP,KAAgBC,EAAhB,KAIA,OAHApO,IAAMC,WAAU,WACP5U,GAAO6iB,EAASJ,EAAOhpB,GAAMsN,KAAKic,MAAsB,GAAhBjc,KAAKkc,cACnD,IAEC,sBACI5T,KAAK,SACLC,SAAU,EACVF,UAAU,gBACVG,QAAS,kBAAOuT,GAAWC,GAAW,IACtCtT,UAAW,SAAC3F,GAAD,MAAmB,MAAXA,EAAGtN,MAAiBsmB,GAAWC,GAAW,IALjE,UAOI,qBAAK3T,UAAU,YAAY5V,MAAO,CAAEwf,WAAYhZ,GAAS,UACzD,sBACIoP,UAAU,eACV5V,MAAO,CACH8G,QAASwiB,EAAU,QAAU,QAHrC,UAOI,qBAAKzT,KAAK,SAASD,UAAU,UAAUG,QAAS,kBAAMwT,GAAW,MACjE,cAAC,IAAD,CACIN,OAAQA,EAAOhpB,GACfuG,MAAOA,GAAS,OAChBkjB,iBAAkB,SAAClqB,GAAD,OAAO6pB,EAAS7pB,EAAEmqB,eC8FzCC,EA7HK,SAAC,GAEd,IADHzpB,EACE,EADFA,KAAMwgB,EACJ,EADIA,QAASkJ,EACb,EADaA,OAAQ1Q,EACrB,EADqBA,aAEjBkL,EAAWC,uBAAY,SAAChkB,GAAD,OAAUA,GAAQA,EAAKikB,UAAS,IACvDuF,EAAU7G,sBAChB,EAAgC1N,oBAAS,GAAzC,mBAAOwU,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,SAACC,GACdvJ,EAAQ,2BAAKxgB,GAAN,IAAYH,MAAM,2BAAMG,EAAKH,OAAUkqB,OAWlD,OARA9O,qBAAU,WACD2O,GACDE,EAAS,CACLnmB,MAAOyJ,KAAK6I,IAAIjW,EAAKH,MAAM8D,MAAOyJ,KAAK4I,IAAI,IAAK2T,EAAQxN,QAAQC,YAAc,SAGvF,EAAEwN,GAAY5pB,EAAKJ,QAGlB,sBAAK6V,UAAU,WAAWwL,SAAUyI,EAApC,UACI,qBAAKjU,UAAU,aAAa5V,MAAO,CAAE6D,OAAQ1D,EAAKH,MAAM6D,QAAxD,SACI,qBACI+R,UAAU,WACV5V,MAAK,2BACEG,EAAKH,OADP,IAEDmqB,aAAmC,YAArBhqB,EAAKH,MAAMuF,MAAsB,OAAS,IAJhE,SAOI,sBAAMka,IAAKqK,EAAX,SAAqB3Q,EAAehZ,EAAKJ,MAAQ,SAIzD,sBAAK6V,UAAU,OAAO5V,MAAO,CAAEoqB,QAAS,IAAxC,UACI,yCACA,8BACI,wBAAOC,QAAQ,YAAf,UACI,uBACIpqB,KAAK,QACL8hB,KAAK,QACLzL,MAAM,YACN8M,QAA8B,cAArBjjB,EAAKH,MAAMuF,MACpB8Q,SAAU,kBAAM4T,EAAS,CAAE1kB,MAAO,iBAN1C,iBAWJ,8BACI,wBAAO8kB,QAAQ,UAAf,UACI,uBACIpqB,KAAK,QACL8hB,KAAK,QACLzL,MAAM,UACN8M,QAA8B,YAArBjjB,EAAKH,MAAMuF,MACpB8Q,SAAU,kBAAM4T,EAAS,CAAE1kB,MAAO,eAN1C,eAWJ,wBAEC4T,EAAe,yCAAoB,GACnCA,EACG,uBACIvD,UAAU,YACV6J,IAAK4E,EACLpkB,KAAK,OACLykB,UAAQ,EACR3kB,MAAM,aACNuW,MAAOnW,EAAKJ,MACZ0kB,YAAY,mBACZpO,SAAU,SAACpR,GAAD,OAAO0b,EAAQ,2BAAKxgB,GAAN,IAAYJ,MAAOkF,EAAE/C,OAAOoU,YAExD,GACJ,yCACA,uBACIrW,KAAK,SACLqW,MAAOnW,EAAKH,MAAM8D,MAClBuS,SAAU,SAACpR,GACP+kB,GAAY,GACZC,EAAS,CACLnmB,MAAOyJ,KAAK4I,IAAI,IAAKlR,EAAE/C,OAAOoU,YAK1C,0CACA,uBACIrW,KAAK,SACLqW,MAAOnW,EAAKH,MAAM6D,OAClBwS,SAAU,SAACpR,GAAD,OAAOglB,EAAS,CAAEpmB,OAAQ0J,KAAK4I,IAAI,IAAKlR,EAAE/C,OAAOoU,YAG/D,oDACA,cAAC,EAAD,CACI9P,MAAOrG,EAAKH,MAAMyF,gBAClB4jB,SAAU,SAAC7iB,GAAD,OAAWyjB,EAAS,CAAExkB,gBAAiBe,KACjDvG,KAAK,UAGT,gDACA,cAAC,EAAD,CACIuG,MAAOrG,EAAKH,MAAM0F,YAClB2jB,SAAU,SAAC7iB,GAAD,OAAWyjB,EAAS,CAAEvkB,YAAac,KAC7CvG,KAAK,SAGT,gDACA,uBACIA,KAAK,SACLqW,MAAOnW,EAAKH,MAAM2F,YAClB0Q,SAAU,SAACpR,GAAD,OAAOglB,EAAS,CAAEtkB,YAAa4H,KAAK4I,IAAI,GAAIlR,EAAE/C,OAAOoU,YAEnE,2CACA,uBACIrW,KAAK,SACLqqB,KAAK,MACLhU,MAAOnW,EAAKH,MAAMwF,QAClB6Q,SAAU,SAACpR,GAAD,OAAOglB,EAAS,CAAEzkB,QAAS+H,KAAK4I,IAAI,EAAG5I,KAAK6I,IAAI,EAAGnR,EAAE/C,OAAOoU,oBCxHpFiU,G,OAAW,SAAC,GAAqB,IAAnBxV,EAAkB,EAAlBA,KAAMvO,EAAY,EAAZA,MAChB2Q,EAAyB,EAArBU,SAAS9C,EAAM,IACnByV,EAAa,CACfC,WAAW,GAAD,OAAK,MAAStT,EAAd,oBAA2B3Q,GACrCkkB,aAAa,GAAD,OAAKvT,EAAI,EAAT,wBACZwT,UAAU,GAAD,OAAKxT,EAAI,EAAT,wBACTyT,YAAa,GAEjB,OACI,qBAAK5qB,MAAOwqB,MAyELK,EArEK,SAAC,GAEd,IADH1qB,EACE,EADFA,KAAMwgB,EACJ,EADIA,QAASkJ,EACb,EADaA,OAAQ1Q,EACrB,EADqBA,aAEjB8Q,EAAW,SAACC,GAAD,OAAUvJ,EAAQ,2BAAKxgB,GAAN,IAAYH,MAAM,2BAAMG,EAAKH,OAAUkqB,OACnE7F,EAAWC,uBAAY,SAAChkB,GAAD,OAAUA,GAAQA,EAAKikB,UAAS,IACvDuG,EAAW,SAAC,GAAD,IAAG/I,EAAH,EAAGA,KAAMxc,EAAT,EAASA,MAAT,OACb,wBAAO8kB,QAAQ,UAAf,UACI,uBACIpqB,KAAK,QACL8hB,KAAK,QACLzL,MAAO/Q,EACP6d,QAASjjB,EAAKH,MAAMuF,QAAUA,EAC9B8Q,SAAU,kBAAM4T,EAAS,CAAE1kB,aAE9Bwc,MAIT,OACI,sBAAKnM,UAAU,WAAWwL,SAAUyI,EAApC,UACI,sBAAKjU,UAAU,UAAf,UACI,qBACIA,UAAU,WACV5V,MAAO,CACH+qB,kBAAmB5qB,EAAKH,MAAMwK,UAC9BwgB,kBAAmB7qB,EAAKH,MAAMyF,gBAC9BwlB,kBAAmB9qB,EAAKH,MAAMuF,SAGtC,cAAC,EAAD,CAAUwP,KAAM5U,EAAKH,MAAMwK,UAAWhE,MAAOrG,EAAKH,MAAMyF,kBACxD,qBAAKmQ,UAAU,QAAf,SAAwBzV,EAAKJ,WAEjC,sBAAK6V,UAAU,OAAf,UACKuD,EAAe,yCAAoB,GACnCA,EACG,uBACIsG,IAAK4E,EACLzO,UAAU,sBACV3V,KAAK,OACLykB,UAAQ,EACR3kB,MAAM,aACNuW,MAAOnW,EAAKJ,MACZ0kB,YAAY,mBACZpO,SAAU,SAACpR,GAAD,OAAO0b,EAAQ,2BAAKxgB,GAAN,IAAYJ,MAAM,GAAD,OAAKkF,EAAE/C,OAAOoU,aAE3D,GACJ,yCACA,sBAAKV,UAAU,wBAAf,UACI,8BAAK,cAACkV,EAAD,CAAU/I,KAAK,QAAQxc,MAAM,YAClC,8BAAK,cAACulB,EAAD,CAAU/I,KAAK,SAASxc,MAAM,aACnC,8BAAK,cAACulB,EAAD,CAAU/I,KAAK,SAASxc,MAAM,gBAEvC,6CACA,uBACItF,KAAK,SACLqW,MAAOnW,EAAKH,MAAMwK,UAClB6L,SAAU,SAACpR,GAAD,OAAOglB,EAAS,CAAEzf,UAAW+C,KAAK6I,IAAI,EAAG7I,KAAK4I,IAAI,GAAIlR,EAAE/C,OAAOoU,aAE7E,oDACA,cAAC,EAAD,CACI9P,MAAOrG,EAAKH,MAAMyF,gBAClB4jB,SAAU,SAAC7iB,GAAD,OAAWyjB,EAAS,CAAExkB,gBAAiBe,KACjDvG,KAAK,gBC/EnBirB,EAAY,CACdpnB,MAAO,IACPD,OAAQ,GACR0B,MAAO,YACPC,QAAS,EACTC,gBAAiB,UACjBC,YAAa,OACbC,YAAa,GAGXwlB,EAAY,CACd3gB,UAAW,EACX/E,gBAAiB,KACjBF,MAAO,SCbLmhB,EAAe,CACjB5G,WAAW,EACXgB,aAAc,CACVte,GAAI,aACJyc,MAAO,GACP8B,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,aAAc,GACd/H,aAAc,MAElBoJ,aAAa,EACb6I,YAAY,EACZjJ,aAAa,EACbE,aAAa,EACb4C,YAAY,EACZ7P,OAAQ,GACRC,cAAe,EACfiR,eAAe,GAGb+E,EAAoB,CACtB3gB,eAAgB,CACZd,YAAa,GACbC,OAAQ,GACR2O,KAAK,GAET8S,UAAW,KACXhW,SAAU,MCyGCmR,EA/HC,SAAC7N,EAAO6I,GACpB,OAAQA,EAAOxhB,MACf,KAAKqC,EAAEwW,uBACH,OAAO,2BACAF,GADP,IAEIkH,WAAW,EACXgB,aAAc,CACV7B,MAAO,cACP8B,WAAY,cACZC,SAAU4I,EACV3I,aAAciK,EACdhK,aAAc,GACd/H,cAAc,EACd3W,GAAIif,EAAOjf,MAGvB,KAAKF,EAAEC,uBACH,OAAO,2BACAqW,GADP,IAEIkH,WAAW,EACXgB,aAAc,CACV7B,MAAO,cACP8B,WAAY,cACZC,SAAU6J,EACV5J,aAAckK,EACdjK,aAAc,GACd/H,cAAc,EACd3W,GAAIif,EAAOjf,MAGvB,KAAKF,EAAE4W,uBACH,OAAO,2BACAN,GADP,IAEIkH,WAAW,EACXgB,aAAc,CACV7B,MAAO,YACP8B,WAAY,YACZC,SAAU4I,EACV3I,aAAcQ,EAAOzhB,MACrBkhB,aAAcO,EAAO1hB,MACrBoZ,aAAcsI,EAAOtI,aACrB3W,GAAIif,EAAOjf,MAIvB,KAAKF,EAAE+W,uBACH,OAAO,2BACAT,GADP,IAEIkH,WAAW,EACXgB,aAAc,CACV7B,MAAO,YACP8B,WAAY,YACZC,SAAU6J,EACV5J,aAAcQ,EAAOzhB,MACrBkhB,aAAcO,EAAO1hB,MACrBoZ,aAAcsI,EAAOtI,aACrB3W,GAAIif,EAAOjf,MAIvB,KAAKF,EAAEukB,YAAa,OAAO,2BAAKjO,GAAZ,IAAmBkH,WAAW,IAClD,KAAKxd,EAAEyN,aAAc,OAAO,2BAAK6I,GAAZ,IAAmB2J,aAAa,EAAMtJ,mBAAoBwI,EAAO3U,UACtF,KAAKxK,EAAEqN,eAAgB,OAAO,2BAAKiJ,GAAZ,IAAmB2J,aAAa,IACvD,KAAKjgB,EAAEymB,UAAW,OAAO,2BAAKnQ,GAAZ,IAAmBwS,WAAY3J,EAAO3U,UAExD,KAAKxK,EAAE0M,SAAU,OAAO,2BAAK4J,GAAZ,IAAmBuJ,YAAaV,EAAO3U,UACxD,KAAKxK,EAAE2M,SAAU,OAAO,2BAAK2J,GAAZ,IAAmByJ,YAAaZ,EAAO3U,UAExD,KAAKxK,EAAE6X,UACH,OAAO,2BACAvB,GADP,IAEIvD,cAAeuD,EAAMxD,OAAOxV,OAC5BwV,OAAO,GAAD,mBACCwD,EAAMxD,QADP,4BAGKiW,GAHL,IAIEC,UAAW7J,EAAO3U,QAAQwe,UAC1B5gB,eAAgB+W,EAAO3U,QAAQpC,eAC/BtK,GAAIqhB,EAAO3U,QAAQ1M,GACnBkV,SAAUmM,EAAO3U,QAAQwI,eAKzC,KAAKhT,EAAE+c,eACH,OAAO,2BAAKzG,GAAZ,IAAmBxD,OAAO,GAAD,mBAAMwD,EAAMxD,QAAZ,YAAuBqM,EAAO3U,YAE3D,KAAKxK,EAAE4b,mBACH,IAAMqN,EAAQ,eAAQ3S,GAEtB,OADA2S,EAASnW,OAAOqM,EAAOtD,OAAO7I,SAAWmM,EAAOnM,SACzC,eAAKiW,GAGhB,KAAKjpB,EAAEgY,UAAW,OAAO,2BAAK1B,GAAZ,IAAmBvD,cAAeuD,EAAMxD,OAAOxV,SACjE,KAAK0C,EAAEsZ,WAAY,OAAO,2BAAKhD,GAAZ,IAAmBvD,cAAeoM,EAAO3U,UAC5D,KAAKxK,EAAE2Y,aAAc,OAAO,2BACrBrC,GADc,IAEjBxD,OAAQwD,EAAMxD,OAAOnC,QAAO,SAAChO,EAAGtF,GAAJ,OAAUA,IAAM8hB,EAAO3U,WACnDuI,cAAeuD,EAAMvD,cAAgBoM,EAAO3U,QACtC8L,EAAMvD,cACN9H,KAAK6I,IAAI,EAAGwC,EAAMvD,cAAgB,KAG5C,KAAK/S,EAAEuK,oBACH,IAAM0e,EAAQ,eAAQ3S,GAQtB,OAPA2S,EAASnW,OAASmW,EAASnW,OAAO3Q,KAAI,SAACoa,GACnC,OAAIA,EAAEze,KAAOqhB,EAAO3U,QAAQ1M,IACpBye,EAAEvJ,UAAUuJ,EAAEvJ,SAASkW,iBAAiB/J,EAAO3U,QAAQpC,gBACpD,2BAAKmU,GAAZ,IAAenU,eAAgB+W,EAAO3U,QAAQpC,kBAE3CmU,KAEJ,eAAK0M,GAGhB,KAAKjpB,EAAEqY,gBACH,OAAO,2BAAK/B,GAAZ,IAAmBqM,WAAYxD,EAAO3U,UAG1C,KAAKxK,EAAEuY,kBACH,OAAO,2BAAKjC,GAAZ,IAAmB0N,cAAe7E,EAAO3U,UAG7C,QACI,OAAO8L,M","file":"static/js/main.0a22a6b4.chunk.js","sourcesContent":["export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","import BendingDistanceWeight from './calculations/bending-dist-weight';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphComponent = (ParentClass) => class GC extends ParentClass {\n    constructor(...args) {\n        super(...args);\n        [,,,,, this.nodeValidator, this.edgeValidator] = args;\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(), data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceId, targetId) {\n        return this.getById(sourceId).edgesWith(this.getById(targetId));\n    }\n\n    getBendingD(sourceId, targetId) {\n        const edges = this.getEdgesBetweenNodes(sourceId, targetId);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            dists.add(edge.data('style').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW(rawStyle, sourceId, targetId, type) {\n        if (type !== 'ordin') return { ...rawStyle, bendDistance: 0, bendWeight: 0 };\n        if (rawStyle.bendDistance && rawStyle.bendWeight) return rawStyle;\n        if (rawStyle.bendPoint) {\n            const { x, y } = rawStyle.bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceId).position(), this.getById(targetId).position(),\n            );\n            return { ...rawStyle, bendDistance: d, bendWeight: w };\n        }\n        return { ...rawStyle, bendDistance: this.getBendingD(sourceId, targetId), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        const style = this.parseBendinDW(rawStyle, source, target, type);\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                source, target, label, type, id, style,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [source, target, label, style, type, edge.id()] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(source, target, label, rawStyle = {}, type = 'ordin', id, tid = this.getTid()) {\n        if (type !== 'ordin' || label) {\n            return this.addEdgeWithLabel(source, target, label, rawStyle, type, id, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, source, target);\n                if (message.ok) this.addEdgeWithLabel(source, target, edgeLabel, edgeStyle, type, id, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [\n                    jsonEd.data.source, jsonEd.data.target, jsonEd.data.label, this.getStyle(id), jsonEd.data.type, id,\n                ],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            source: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            target: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined node validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at node validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator);\n    }\n\n    validiateEdge(label, style, source, target, id) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                source: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                target: edge.target().data('label'),\n                id,\n            }, this.edgeValidator);\n        }\n        return this.validiateComp({\n            label, style, source, target, id,\n        }, this.edgeValidator);\n    }\n};\n\nexport default GraphComponent;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(style.bendDistance)',\n            segmentWeights: 'data(style.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","const getSet = () => {\n    const ALL_GRAPHS = 'ALL_GRAPHS';\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: 'ALL_GRAPHS',\n\n    allgs: getSet(),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n};\nexport default localStorageManager;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, author,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          author,\n        },\n        node: nodes,\n        edge: edges,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.style.bendPoint,\n    }));\n    const X = graphML({\n        nodes, edges, projectName: G.projectDetails.projectName, author: G.projectDetails.author, id: G.id,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import { saveAs } from 'file-saver';\nimport { actionType as T } from '../reducer';\nimport localStorageManager from './local-storage-manager';\nimport graphmlBuilder from './graphml/builder';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst GraphLoadSave = (ParentClass) => class extends ParentClass {\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', this.saveLocalStorage.bind(this));\n        this.cy.on('nodeediting.resizeend graph-modified', this.saveLocalStorage.bind(this));\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [], edges: [], projectDetails: this.projectDetails, id: this.id,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const all = edge.json();\n                const edgeJson = {\n                    source: this.getRealSourceId(edge.source().id()),\n                    target: all.data.target,\n                    label: all.data.label,\n                };\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.style.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.style.bendWeight, edgeJson.style.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectDetails.projectName}-${this.projectDetails.author}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    loadJson(content) {\n        const tid = new Date().getTime();\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, tid);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge(edge.source, edge.target, edge.label, edge.style, 'ordin', undefined, tid);\n        });\n        this.projectDetails = content.projectDetails;\n        this.dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails: content.projectDetails,\n                id: this.id,\n            },\n        });\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveTimeoutId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    loadGraphFromLocalStorage() {\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n};\n\nexport default GraphLoadSave;\n","const GraphCanvas = (ParentClass) => class extends ParentClass {\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        const tid = new Date().getTime();\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), tid));\n        return true;\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.setZoomUI(Math.round(this.cy.zoom() * 100));\n    }\n};\n\nexport default GraphCanvas;\n","import GraphComponent from './graph-component';\nimport GA from './graph-actions';\nimport { actionType as T } from '../reducer';\n\nconst GraphUndoRedo = (ParentClass) => class GUR extends GraphComponent(ParentClass) {\n    constructor(...props) {\n        super(...props);\n\n        GUR.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => super.addNode.bind(this)(...args, 0),\n            [GA.ADD_EDGE]: (...args) => super.addEdge.bind(this)(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => super.updateNode.bind(this)(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => super.updateEdge.bind(this)(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => super.updateData.bind(this)(...args, 0),\n            [GA.DEL_NODE]: (...args) => super.deleteNode.bind(this)(...args, 0),\n            [GA.DEL_EDGE]: (...args) => super.deleteEdge.bind(this)(...args, 0),\n            [GA.SET_POS]: (...args) => super.setPos.bind(this)(...args, 0),\n            [GA.SET_DIM]: (...args) => super.setDim.bind(this)(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist.bind(this)(...args, 0),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    static performAction({ actionName, parameters }) {\n        const action = GUR.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    addAction(inverse, equivalent, tid) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n        this.actionArr.push({ tid, inverse, equivalent });\n        this.curActionIndex += 1;\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            GUR.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            GUR.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n};\n\nexport default GraphUndoRedo;\n","import { actionType as T } from '../reducer';\nimport GraphLoadSave from './graph-load-save';\nimport GraphCanvas from './graph-canvas';\nimport GraphUndoRedo from './graph-undo-redo';\nimport BendingDistanceWeight from './calculations/bending-dist-weight';\n\nconst CoreGraph = (ParentClass) => class CG extends\n    GraphLoadSave(GraphCanvas(GraphUndoRedo(ParentClass))) {\n    constructor(id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator) {\n        super(id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator);\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        this.id = id;\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n    }\n\n    setProjectDetail(projectDetails) {\n        this.projectDetails = projectDetails;\n        this.cy.emit('graph-modified');\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    set({ cy, dispatcher, superState }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        if (super.regesterEvents) super.regesterEvents();\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CG.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('style', { ...el.data('style'), bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', {\n                    bendDistance: el.data('style').bendDistance, bendWeight: el.data('style').bendWeight,\n                });\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), {\n                    bendDistance: el.data('style').bendDistance, bendWeight: el.data('style').bendWeight,\n                });\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, bendDistance: DW.bendDistance, bendWeight: DW.bendWeight });\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('style');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        if (super.setCurStatus) super.setCurStatus();\n        this.selectDeselectEventHandler();\n    }\n};\n\nexport default CoreGraph;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './core-graph-builder';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\n\nconst TailoredGraph = (ParentClass) => class TG extends CoreGraph(ParentClass) {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TG.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TG.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TG.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(sourceID, targetID, edgeStyle = {}, tid) {\n        const juncNode = this.getById(sourceID);\n        const ed = super.addEdgeWithLabel(\n            sourceID, targetID,\n            juncNode.data('edgeLabel'),\n            {\n                ...juncNode.data('edgeStyle'),\n                bendDistance: edgeStyle.bendDistance,\n                bendWeight: edgeStyle.bendWeight,\n                bendPoint: edgeStyle.bendPoint,\n            },\n            'ordin',\n            undefined, tid,\n        );\n        juncNode.position(TG.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid) {\n        const sourceNode = this.getById(sourceID);\n        const targetNode = this.getById(targetID);\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdgeWithLabel(sourceID, juncNode.id(), '', {\n            ...style,\n            'target-arrow-shape': 'none',\n        }, 'special', undefined, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode(juncNode.id(), targetID, style, tid);\n    }\n\n    addEdge(sourceID, targetID, label = '', style, type = 'ordin', id, tid = this.getTid()) {\n        if (this.getById(targetID).data('type') !== 'ordin') return this;\n        const sourceNode = this.getById(sourceID);\n        // ↓ Condition never statisfies ↓\n        if (type === 'special') return super.addEdgeWithLabel(sourceID, targetID, label, style, type, id, tid);\n        if (sourceNode.data('type') === 'special') return this.addEdgeWithJuncNode(sourceID, targetID, style, tid);\n        const juncNodes = sourceNode.outgoers('node').filter((node) => node.data('edgeLabel') === label);\n        if (juncNodes.length) return this.addEdgeWithJuncNode(juncNodes[0].id(), targetID, style, tid);\n        if (label.length) return this.addEdgeWithoutJuncNode(sourceID, targetID, label, style, tid);\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID);\n                if (message.ok) this.addEdgeWithoutJuncNode(sourceID, targetID, edgeLabel, edgeStyle, tid);\n                return message;\n            },\n        });\n        return this;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, tid);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, tid);\n        this.updateNode([junctionNode.data('id')], { backgroundColor: style.backgroundColor }, '', false, tid);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, tid));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node').forEach((x) => super.deleteElem(x.id(), tid));\n            el.connectedEdges().forEach((x) => this.deleteElem(x.id(), tid));\n            super.deleteNode(id, tid);\n        } else {\n            if (el.removed()) return;\n            const junctionNode = el.source();\n            super.deleteEdge(id, tid);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), tid);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n};\n\nexport default TailoredGraph;\n","import Slider from 'rc-slider';\nimport React, { useState } from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState }) => {\n    const myGraph = superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    if (!myGraph) return <></>;\n    const [zoomValue, setZoomValue] = useState(myGraph.getZoom());\n    myGraph.setOnZoom(setZoomValue);\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => { myGraph.setZoom(value); setZoomValue(value); }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: p.parseProps('y:Shape.$.type'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport { parseNode, parseEdge, parseDetails };\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport { parseNode, parseEdge, parseDetails } from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, author } = parseDetails(grahML);\n        const projectDetails = { projectName, author, set: Boolean(projectName && author) };\n        resolve({\n            id, projectDetails, edges, nodes,\n        });\n    });\n});\nexport default parser;\n","import { actionType as T } from '../reducer';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport graphMLParser from '../graph-builder/graphml/parser';\n\nconst getGraphFun = (superState) => superState.graphs[superState.curGraphIndex]\n                                        && superState.graphs[superState.curGraphIndex].instance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style);\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => state.eleSelectedPayload.ids.forEach(\n                (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n            ),\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id,\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, e) => {\n    if (e.target && e.target.files && e.target.files[0]) {\n        const fr = new FileReader();\n        fr.onload = (x) => {\n            graphMLParser(x.target.result).then((graphContent) => {\n                const id = new Date().getTime();\n                localStorageManager.save(id, graphContent);\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { id, projectDetails: { ...graphContent.projectDetails, set: true } },\n                });\n            });\n        };\n        fr.readAsText(e.target.files[0]);\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_PROJECT_DETAILS,\n        payload: {\n            projectDetails: { ...getGraphFun(state).projectDetails, set: false },\n            id: getGraphFun(state).id,\n        },\n    });\n};\nconst undo = (state) => {\n    if (getGraphFun(state))getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].id : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.id}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectDetails.projectName}\n                        {el.projectDetails.author ? ' - ' : ''}\n                        {el.projectDetails.author}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeValidator = (node, nodes) => {\n    let message = { ok: true, err: null };\n    nodes.forEach((n) => {\n        if (n.label === node.label) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n};\nconst edgeValidator = (edge, nodes, edges) => {\n    let message = { ok: true, err: null };\n    const originalEdge = edges.filter((n) => n.id === edge.id)[0];\n    edges.filter((n) => !originalEdge || n.source !== originalEdge.source || n.label !== originalEdge.label)\n        .forEach((n) => {\n            if (n.label === edge.label) {\n                message = {\n                    ok: false,\n                    err: 'Edge with same label exists.',\n                };\n            }\n        });\n    return message;\n};\n\nexport { nodeValidator, edgeValidator };\n","import React, { useEffect } from 'react';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from './config/cytoscape-options';\nimport MyGraph from './graph-builder';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graph.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const setConatinerDim = (element) => {\n        /* eslint-disable no-param-reassign */\n        element.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        element.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        /* eslint-disable no-param-reassign */\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', () => graphContainerRef.current.childNodes\n            .forEach((el) => el.classList.contains('graph-element') && setConatinerDim(el)));\n    }, []);\n\n    const initialiseNewGraph = (element, id, projectDetails) => {\n        setConatinerDim(element);\n        const cy = cytoscape({ ...cyOptions, container: element });\n        cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        const myGraph = new (MyGraph(Object))(\n            id, cy, dispatcher, superState, projectDetails, nodeValidator, edgeValidator,\n        );\n        cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); myGraph.addEdge(a.id(), b.id()); },\n        });\n        myGraph.loadGraphFromLocalStorage();\n        return myGraph;\n    };\n    useEffect(() => {\n        superState.graphs.forEach((e, i) => {\n            if (e.instance) return;\n            const { id } = e;\n            const graph = initialiseNewGraph(document.getElementById(id), id, e.projectDetails);\n            dispatcher({ type: T.ADD_GRAPH_INSTANCE, instance: graph, index: i });\n        });\n    }, [superState.graphs.length]);\n\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            superState.graphs[superState.curGraphIndex].instance.setCurStatus();\n        }\n    }, [superState.curGraphIndex]);\n\n    useEffect(() => {\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n        }\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphId) => ({\n            id: graphId,\n            projectDetails: { projectName: '', author: '', set: true },\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n    }, []);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <div\n                        style={{ zIndex: 1, display: superState.curGraphIndex === i ? 'block' : 'none' }}\n                        id={el.id}\n                        key={el.id}\n                        className=\"graph-element\"\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                {children}\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaRegSun,\n} from 'react-icons/fa';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    { type: 'space' },\n    {\n        type: 'action',\n        text: 'Settings',\n        icon: FaRegSun,\n        action: openSettingModal,\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => {\n    const fileRef = React.createRef();\n    return (\n        <>\n            <input type=\"file\" ref={fileRef} style={{ display: 'none' }} accept=\".graphml\" onChange={action} />\n            <ActionButton {...{\n                Icon, text, active, tabIndex, action: () => fileRef.current.click(), hotkey,\n            }}\n            />\n        </>\n    );\n};\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ state, dispatcher }) => {\n    const actions = toolbarList(state);\n    React.useEffect(() => {\n        setHotKeys(actions, state, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    state.graphs[state.curGraphIndex]\n                        ? `${state.graphs[state.curGraphIndex].projectDetails.projectName} - DHGWorkflow Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(state, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} />;\n                        case 'action': return <ActionButton {...props} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n                <input type=\"file\" id=\"fileUploader\" style={{ display: 'none' }} accept=\".jpg, .jpeg, .png\" />\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [author, setAuthor] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    useEffect(() => {\n        if (!curGraph) {\n            setProjectName(''); setAuthor('');\n        } else {\n            setProjectName(curGraph.projectDetails.projectName || '');\n            setAuthor(curGraph.projectDetails.author || '');\n        }\n    }, [!curGraph || !curGraph.projectDetails.set]);\n\n    const addNewGraph = () => {\n        dispatcher({\n            type: T.ADD_GRAPH,\n            payload: { id: new Date().getTime(), projectDetails: { projectName, author, set: true } },\n        });\n    };\n\n    const setProjectDetails = (projectDetails) => {\n        dispatcher({\n            type: T.SET_PROJECT_DETAILS,\n            payload: {\n                projectDetails,\n                id: curGraph.id,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (!curGraph) addNewGraph();\n        else setProjectDetails({ projectName, author, set: true });\n    };\n\n    const openExisting = () => {\n        document.querySelector('input[type=\"file\"]').click();\n    };\n    const closeModal = () => {\n        if (!curGraph) dispatcher({ type: T.CHANGE_TAB, payload: 0 });\n        else {\n            setProjectDetails({\n                ...curGraph.projectDetails,\n                set: Boolean(curGraph.projectDetails.author && curGraph.projectDetails.projectName),\n            });\n        }\n    };\n    return (\n        <Modal\n            ModelOpen={!curGraph || !curGraph.projectDetails.set}\n            closeModal={!curGraph && superState.curGraphIndex === 0 ? null : closeModal}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                    {curGraph ? <></> : (\n                        <>\n                            <div className=\"divider\" />\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                onClick={openExisting}\n                            >\n                                Open Existing\n\n                            </button>\n                        </>\n                    )}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal\n    && superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.graphs[superState.curGraphIndex].instance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height,\n}) => {\n    const inputRef = React.createRef();\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            <textarea\n                className=\"preTextField\"\n                value={pre}\n                readOnly\n                spellCheck=\"false\"\n            />\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height }}\n                ref={inputRef}\n            />\n            <textarea\n                className=\"postTextField\"\n                readOnly\n                value={post}\n                spellCheck=\"false\"\n            />\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    useEffect(() => {\n        if (superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance) {\n            setNodeValidator(superState.graphs[superState.curGraphIndex].instance.getNodeValidator());\n            setEdgeValidator(superState.graphs[superState.curGraphIndex].instance.getEdgeValidator());\n        }\n    }, [superState.graphs[superState.curGraphIndex] && superState.graphs[superState.curGraphIndex].instance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        superState.graphs[superState.curGraphIndex].instance.setEdgeNodeValidator({\n            nodeValidator: `(node, nodes, edges)=>{${nodeValidator}}`,\n            edgeValidator: `(edge, nodes, edges)=>{${nodeValidator}}`,\n        });\n        dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={150}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphComp from './graph';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <Header state={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <GraphComp dispatcher={dispatcher} superState={superState} />\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n};\nexport default zealit(actionType);\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\nimport ColorBox from './ColorBox';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet, setWidthSet] = useState(false);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div />\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        className=\"nodeLabel\"\n                        ref={inputRef}\n                        type=\"text\"\n                        required\n                        label=\"Node Label\"\n                        value={data.label}\n                        placeholder=\"Enter Node Label\"\n                        onChange={(e) => setData({ ...data, label: e.target.value })}\n                    />\n                ) : ''}\n                <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                />\n\n                <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                />\n\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                />\n\n                <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                />\n\n                <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                />\n                <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    shareModal: false,\n    graphs: [],\n    curGraphIndex: 0,\n    settingsModal: false,\n};\n\nconst initialGraphState = {\n    projectDetails: {\n        projectName: '',\n        author: '',\n        set: false,\n    },\n    component: null,\n    instance: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        return {\n            ...state,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    component: action.payload.component,\n                    projectDetails: action.payload.projectDetails,\n                    id: action.payload.id,\n                    instance: action.payload.instance,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.ADD_GRAPH_INSTANCE: {\n        const newState = { ...state };\n        newState.graphs[action.index].instance = action.instance;\n        return { ...newState };\n    }\n\n    case T.NEW_GRAPH: return { ...state, curGraphIndex: state.graphs.length };\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => {\n            if (g.id === action.payload.id) {\n                if (g.instance) g.instance.setProjectDetail(action.payload.projectDetails);\n                return { ...g, projectDetails: action.payload.projectDetails };\n            }\n            return g;\n        });\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}